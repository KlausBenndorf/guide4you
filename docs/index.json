[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/API.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport { cssClasses, keyCodes } from './globals'\nimport { Debug } from './Debug'\n\n/**\n * @typedef {object} APIMapInteraction\n * @property {function} cancel ends the interaction. The result promise will not resolve.\n * @property {function} end ends the interaction properly. The result promise will resolve if possible.\n * @property {Promise} result a promise that represents the value of the interaction.\n */\n\n// NOTE:\n// Access to a source factory would be nice\n\n/**\n * @typedef {object} APIOptions\n * @property {StyleLike} [drawStyle='#drawStyle']\n */\n\nexport class API extends ol.Object {\n  /**\n   * @param {G4UMap} map\n   * @param {object} options\n   */\n  constructor (map, options = {}) {\n    super()\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.featureManipulationActive_ = false\n\n    /**\n     * @type {StyleLike}\n     * @private\n     */\n    this.drawStyle_ = options.drawStyle || '#drawStyle'\n\n    /**\n     * @type {ol.format.WKT}\n     * @private\n     */\n    this.wktParser_ = new ol.format.WKT()\n\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = map\n\n    /**\n     * @type {?ol.interaction.Interaction}\n     * @private\n     */\n    this.featureManipulationInteraction_ = null\n\n    this.map_.once('ready', () => {\n      this.layerConfigurator_ = this.map_.get('configurator').layerConfigurator_\n    })\n\n    $(this.map_.getViewport()).on('keydown', this.onKeyDown_.bind(this))\n  }\n\n  // //////////////  FEATURE MANIPULATION ////////////////\n\n  endFeatureManipulationInternal_ () {\n    if (this.featureManipulationInteraction_) {\n      this.featureManipulationInteraction_.setActive(false)\n\n      this.map_.removeInteraction(this.featureManipulationInteraction_)\n    }\n\n    $(this.map_.getViewport()).removeClass(cssClasses.crosshair)\n    $(this.map_.getViewport()).removeClass(cssClasses.arrow)\n    // and any other cursor changes\n\n    this.featureManipulationActive_ = false\n\n    this.dispatchEvent('endManipulation')\n  }\n\n  /**\n   * cancel the current feature manipulation\n   */\n  cancelFeatureManipulation () {\n    if (this.featureManipulationActive_) {\n      this.endFeatureManipulationInternal_()\n    }\n  }\n\n  /**\n   * draw a feature\n   * @param {object} [options={}]\n   * @param {StyleLike} [options.style]\n   * @param {string} [options.type='Point'] possible values are: 'Point', 'LineString', 'Polygon', 'MultiPoint',\n   *  'MultiLineString', 'MultiPolygon' or 'Circle'\n   * @returns {APIMapInteraction}\n   */\n  drawFeature (options = {}) {\n    if (this.featureManipulationActive_) {\n      this.endFeatureManipulationInternal_()\n    }\n\n    this.featureManipulationActive_ = true\n\n    let collection = new ol.Collection()\n\n    let styleConf = (options.style || this.drawStyle_) || {}\n\n    let style = this.map_.get('styling').getStyle(styleConf)\n\n    this.map_.get('styling').manageFeatureCollection(collection)\n\n    this.featureManipulationInteraction_ = new ol.interaction.Draw({\n      features: collection,\n      type: options.type || 'Point',\n      style: style\n    })\n\n    this.map_.addSupersedingInteraction('singleclick dblclick pointermove', this.featureManipulationInteraction_)\n\n    $(this.map_.getViewport()).addClass(cssClasses.crosshair)\n\n    return {\n      cancel: () => {\n        this.endFeatureManipulationInternal_()\n      },\n      end: () => {\n        this.featureManipulationInteraction_.finishDrawing()\n        this.endFeatureManipulationInternal_()\n      },\n      result: new Promise(resolve => {\n        this.featureManipulationInteraction_.on('drawend', e => {\n          resolve(e.feature)\n          this.endFeatureManipulationInternal_()\n        })\n      })\n    }\n  }\n\n  fitRectangle (coordinates, opt = {}) {\n    if (!opt.hasOwnProperty('srId')) {\n      opt.srId = 'EPSG:4326'\n    }\n    if (!opt.hasOwnProperty('constrainResolution')) {\n      opt.constrainResolution = false\n    }\n    if (!opt.hasOwnProperty('padding')) {\n      opt.padding = [0, 0, 0, 0]\n    }\n    if (ol.proj.get(opt.srId)) {\n      this.map_.getView().fit(\n        ol.extent.boundingExtent(\n          [\n            ol.proj.transform(\n              [parseFloat(coordinates[0][0]), parseFloat(coordinates[0][1])],\n              opt.srId,\n              this.map_.get('mapProjection').getCode()\n            ),\n            ol.proj.transform(\n              [parseFloat(coordinates[1][0]), parseFloat(coordinates[1][1])],\n              opt.srId,\n              this.map_.get('mapProjection').getCode()\n            )\n          ]\n        ),\n        opt\n      )\n    } else {\n      Debug.error(`Unknown Projection '${opt.srId}'`)\n    }\n  }\n\n  setVisibleBaseLayer (id) {\n    this.map_.get('baseLayers').recursiveForEach((layer) => {\n      layer.setVisible(layer.get('id') === id)\n    })\n  }\n\n  onKeyDown_ (e) {\n    if (this.featureManipulationActive_ && e.which === keyCodes.ESCAPE) {\n      this.endFeatureManipulationInternal_()\n    }\n  }\n\n  /**\n   * Select a feature with a single click\n   * @returns {APIMapInteraction}\n   */\n  selectFeature () {\n    if (this.featureManipulationActive_) {\n      this.endFeatureManipulationInternal_(null)\n    }\n\n    this.featureManipulationActive_ = true\n\n    this.featureManipulationInteraction_ = new ol.interaction.Select()\n\n    this.map_.addSupersedingInteraction('singleclick', this.featureManipulationInteraction_)\n\n    $(this.map_.getViewport()).addClass(cssClasses.arrow)\n\n    return {\n      cancel: () => {\n        this.endFeatureManipulationInternal_()\n      },\n      end: () => {\n        this.endFeatureManipulationInternal_()\n      },\n      result: new Promise((resolve) => {\n        this.featureManipulationInteraction_.getFeatures().on('add', /** ol.CollectionEvent */ e => {\n          resolve(e.element)\n          this.endFeatureManipulationInternal_()\n        })\n      })\n    }\n  }\n\n  /**\n   * Modify a given Feature. The end function needs to be called to indicate that a modifying process is completed.\n   * @param {ol.Collection<ol.Feature>|ol.Feature[]|ol.Feature} feature\n   * @param {Object} options\n   * @param {StyleLike} [options.style]\n   * @returns {APIMapInteraction}\n   */\n  modifyFeature (feature, options = {}) {\n    options.features = new ol.Collection([feature])\n\n    if (this.featureManipulationActive_) {\n      this.endFeatureManipulationInternal_(false)\n    }\n\n    this.featureManipulationActive_ = true\n\n    if (options.style) {\n      options.style = this.map_.get('styling').getStyle(options.style)\n    }\n\n    this.featureManipulationInteraction_ = new ol.interaction.Modify(options)\n\n    this.map_.addSupersedingInteraction('singleclick dblclick pointermove', this.featureManipulationInteraction_)\n\n    $(this.map_.getViewport()).addClass(cssClasses.crosshair)\n\n    let ended = false\n\n    return {\n      cancel: () => {\n        this.endFeatureManipulationInternal_()\n      },\n      end: () => {\n        ended = true\n        this.endFeatureManipulationInternal_()\n      },\n      result: new Promise(resolve => {\n        this.featureManipulationInteraction_.on('modifyend', () => {\n          if (ended) {\n            resolve(feature)\n          }\n        })\n\n        this.featureManipulationInteraction_.once('change:active', () => {\n          if (ended) {\n            resolve(feature)\n          }\n        })\n      })\n    }\n  }\n\n  /**\n   * This function creates a layer from the given layerOptions and adds it the map\n   * @param {g4uLayerOptions} layerOptions\n   * @returns {VectorLayer}\n   */\n  addFeatureLayer (layerOptions) {\n    return this.layerConfigurator_.getFactory()\n      .addLayer(this.map_.get('featureLayers'), layerOptions, 'featureLayer', true)\n  }\n\n  /**\n   * This function creates a layer from the given layerOptions and adds it as a fixedFeatureLayer to the map\n   * @param {g4uLayerOptions} layerOptions\n   * @returns {VectorLayer}\n   */\n  addFixedFeatureLayer (layerOptions) {\n    return this.layerConfigurator_.getFactory()\n      .addLayer(this.map_.get('fixedFeatureLayers'), layerOptions, 'featureLayer', true)\n  }\n\n  /**\n   * This function creates a base layer from the given layerOptions and adds it to the map\n   * @param {g4uLayerOptions} layerOptions\n   * @returns {ol.layer.Base}\n   */\n  addBaseLayer (layerOptions) {\n    return this.layerConfigurator_.getFactory()\n      .addLayer(this.map_.get('baseLayers'), layerOptions, 'baseLayer', true)\n  }\n\n  /**\n   * This function creates a layer from the given layerOptions, adds it as a VectorLayere and returns a promise which\n   * is resolved as soon as the layer is loaded fully.\n   * @param {g4uLayerOptions} layerOptions\n   * @returns {Promise.<VectorLayer>}\n   */\n  loadLayerFromServer (layerOptions) {\n    layerOptions = layerOptions || {}\n    layerOptions.visible = true\n    layerOptions.source = layerOptions.source || {}\n\n    let promise = new Promise((resolve, reject) => {\n      let layer = this.addFeatureLayer(layerOptions)\n      let source = layer.getSource()\n      let loadEndHandler = () => {\n        source.un('vectorloadend', loadErrorHandler)\n        resolve(layer)\n      }\n      let loadErrorHandler = () => {\n        source.un('vectorloaderror', loadEndHandler)\n        reject('vector load error')\n      }\n      source.once('vectorloadend', loadEndHandler)\n      source.once('vectorloaderror', loadErrorHandler)\n    })\n\n    return promise\n  }\n\n  /**\n   * Creates a Feature from the given config\n   * @param {FeatureConfig} config\n   * @returns {ol.Feature}\n   */\n  createFeature (config) {\n    return this.layerConfigurator_.getFactory().createFeature(config)\n  }\n\n  /**\n   * Removes a layer from the map\n   * @param {ol.layer.Base} layer\n   */\n  removeLayer (layer) {\n    this.map_.getLayerGroup().removeLayer(layer)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/API.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "typedef",
    "name": "APIMapInteraction",
    "memberof": "src/API.js",
    "static": true,
    "longname": "src/API.js~APIMapInteraction",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cancel",
        "description": "ends the interaction. The result promise will not resolve."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "ends the interaction properly. The result promise will resolve if possible."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "a promise that represents the value of the interaction."
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "APIMapInteraction"
    }
  },
  {
    "__docId__": 50,
    "kind": "typedef",
    "name": "APIOptions",
    "memberof": "src/API.js",
    "static": true,
    "longname": "src/API.js~APIOptions",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "properties": [
      {
        "nullable": null,
        "types": [
          "StyleLike"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'#drawStyle'",
        "defaultRaw": "'#drawStyle'",
        "name": "drawStyle",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "APIOptions"
    }
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "src/configurators/ControlFactory.js",
    "content": "import ol from 'openlayers'\n\nimport {Attribution} from '../controls/Attribution'\nimport {ComposedControl} from '../controls/ComposedControl'\nimport {ArrowButtons} from '../controls/ArrowButtons'\nimport {CombinedZoom} from '../controls/CombinedZoom'\nimport {LayerSelector} from '../controls/LayerSelector'\nimport {GeolocationButton} from '../controls/GeoLocationButton'\nimport {MeasurementButton} from '../controls/MeasurementButton'\nimport {LanguageSwitcherButton} from '../controls/LanguageSwitcherButton'\nimport {LanguageSwitcherMenu} from '../controls/LanguageSwitcherMenu'\nimport {MobileControls} from '../controls/MobileControls'\nimport {InfoButton} from '../controls/InfoButton'\nimport {LinkButton} from '../controls/LinkButton'\nimport {PrintButton} from '../controls/PrintButton'\nimport {Logo} from '../controls/Logo'\nimport {HelpButton} from '../controls/HelpButton'\nimport {WindowDecorator} from '../controls/WindowDecorator'\n\nimport { asObject, checkFor } from '../utilities'\nimport { copyDeep } from '../utilitiesObject'\n\nimport {G4UMap} from '../G4UMap'\n\nimport {Debug} from '../Debug'\nimport {ActiveGroup} from '../controls/ActiveGroup'\nimport {MousePosition} from '../controls/MousePosition'\nimport {ScaleLine} from '../controls/ScaleLine'\nimport {OverviewMap} from '../controls/OverviewMap'\n\n/**\n * @typedef {Object} ControlFactoryOptions\n * @property {L10N} localiser\n * @property {G4UMap} map\n */\n\n/**\n * A Factory that takes a control config as an object and returns the correspondig control. Modules can expand the\n * functionality of this class via the createControl method\n */\nexport class ControlFactory {\n  /**\n   * @param {ControlFactoryOptions} options\n   * @public\n   */\n  constructor (options) {\n    /**\n     * @type {L10N}\n     * @private\n     * */\n    this.localiser_ = options.localiser\n\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = options.map\n\n    /**\n     * @type {Map.<string, ActiveGroup>}\n     * @private\n     */\n    this.activeGroups_ = new Map()\n  }\n\n  /**\n   * @returns {Positioning}\n   */\n  getPositioning () {\n    return this.map_.get('controlPositioning')\n  }\n\n  /**\n   * The factory function\n   * @param {string} controlType\n   * @param {g4uControlOptions} options\n   * @returns {Control}\n   * @public\n   */\n  createControl (controlType, options) {\n    switch (controlType) {\n      case 'mousePosition':\n        options.projection = options.projection || this.map_.get('interfaceProjection')\n        return new MousePosition(options)\n      case 'attribution':\n        return new Attribution(options)\n      case 'zoom':\n        return new CombinedZoom(options)\n      case 'scaleLine':\n        return new ScaleLine(options)\n      case 'logo':\n        return new Logo(options)\n      case 'linkButton':\n        return new LinkButton(options)\n      case 'mobileControls':\n        return new MobileControls(options)\n      case 'overviewMap':\n        let projection = options.projection || this.map_.get('mapProjection')\n        options.view = new ol.View({projection: projection})\n        return new OverviewMap(options)\n      case 'infoButton':\n        return new WindowDecorator({\n          component: new InfoButton(options)\n        })\n      case 'arrowButtons':\n        let mapConfig = this.map_.get('mapConfig')\n        if (mapConfig.view) {\n          if (mapConfig.view.center) {\n            options.initCenter = ol.proj.transform(mapConfig.view.center,\n              this.map_.get('interfaceProjection'), this.map_.get('mapProjection'))\n          }\n          if (mapConfig.view.zoom) {\n            options.initZoom = mapConfig.view.zoom\n          }\n        }\n        return new ArrowButtons(options)\n      case 'layerSelector':\n        return new LayerSelector(options)\n      case 'geolocationButton':\n        return new GeolocationButton(options)\n      case 'languageSwitcherButton':\n        return new LanguageSwitcherButton(options)\n      case 'languageSwitcherMenu':\n        return new LanguageSwitcherMenu(options)\n      case 'printButton':\n        return new PrintButton(options)\n      case 'distanceMeasurementButton':\n        options.className = options.className || 'g4u-distance-measurement'\n        options.type = 'LineString'\n        options.dimension = 1\n        return new WindowDecorator({\n          component: new MeasurementButton(options)\n        })\n      case 'areaMeasurementButton':\n        options.className = options.className || 'g4u-area-measurement'\n        options.type = 'Polygon'\n        options.dimension = 2\n        return new WindowDecorator({\n          component: new MeasurementButton(options)\n        })\n      case 'helpButton':\n        options.configControls = this.map_.get('mapConfig').controls\n        return new WindowDecorator({\n          component: new HelpButton(options)\n        })\n      case 'toolbox':\n        options.className = options.className || 'g4u-toolbox'\n        return new ComposedControl(options)\n      case 'layerMenu':\n        options.className = options.className || 'g4u-layermenu'\n        return new ComposedControl(options)\n    }\n  }\n\n  /**\n   * Function to add a control by its name to a certain receiver\n   * @param {ComposedControl|G4UMap} receiver\n   * @param {string} controlName\n   * @public\n   */\n  addControlTo (receiver, controlName) {\n    /**\n     * @type {g4uControlOptions}\n     */\n    let config = copyDeep(asObject(this.controlsConfig[controlName]))\n\n    let controlType = config.controlType || controlName\n\n    config.controlName = controlName\n\n    config.localiser = this.localiser_\n\n    if (!config.hasOwnProperty('importance') && receiver.getImportance) {\n      config.importance = receiver.getImportance()\n    }\n\n    let control = this.createControl(controlType, config, receiver)\n\n    let modules = this.map_.getModules()\n\n    for (let i = 0, ii = modules.length; i < ii && (control === undefined); i++) {\n      control = modules[i].createControl(controlType, config, receiver)\n    }\n\n    if (control) {\n      if (config.activeGroup) {\n        if (!this.activeGroups_.has(config.activeGroup)) {\n          this.activeGroups_.set(config.activeGroup, new ActiveGroup())\n        }\n        this.activeGroups_.get(config.activeGroup).addControl(control)\n      }\n\n      if (!this.map_.controlsByName[controlName]) {\n        this.map_.controlsByName[controlName] = [control]\n      } else {\n        this.map_.controlsByName[controlName].push(control)\n      }\n\n      receiver.addControl(control)\n\n      if (config.contains) {\n        this.addControlMultipleInternal_(control, config.contains)\n      }\n\n      if (control.rewire) {\n        control.rewire()\n      }\n\n      if (receiver instanceof G4UMap) {\n        this.getPositioning().addControl(control)\n      }\n    } else if (control === undefined) {\n      throw new Error('Unrecognized control type ' + controlType +\n        ', maybe you did forget to set the property type of the control?')\n    }\n  }\n\n  /**\n   * Adds multiple controls to one receiver\n   * @param {ComposedControl|G4UMap} receiver\n   * @param {string[]} controlNames\n   * @private\n   */\n  addControlMultipleInternal_ (receiver, controlNames) {\n    controlNames.forEach(controlName => {\n      Debug.tryOrThrow(() => {\n        this.addControlTo(receiver, controlName)\n      })\n    })\n  }\n\n  /**\n   * Add all configured Controls to the map\n   * @public\n   */\n  addControls () {\n    this.controlsConfig = this.map_.get('mapConfig').controls\n    if (checkFor(this.controlsConfig, 'onMap')) {\n      this.addControlMultipleInternal_(this.map_, this.controlsConfig.onMap)\n    }\n  }\n\n  /**\n   * Sets the localiser to pass on to the controls\n   * @param {L10N} loc\n   * @public\n   */\n  setLocaliser (loc) {\n    this.localiser_ = loc\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/configurators/ControlFactory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "typedef",
    "name": "ControlFactoryOptions",
    "memberof": "src/configurators/ControlFactory.js",
    "static": true,
    "longname": "src/configurators/ControlFactory.js~ControlFactoryOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "L10N"
        ],
        "spread": false,
        "optional": false,
        "name": "localiser",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ControlFactoryOptions"
    }
  },
  {
    "__docId__": 53,
    "kind": "class",
    "name": "ControlFactory",
    "memberof": "src/configurators/ControlFactory.js",
    "static": true,
    "longname": "src/configurators/ControlFactory.js~ControlFactory",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/configurators/ControlFactory.js",
    "importStyle": "{ControlFactory}",
    "description": "A Factory that takes a control config as an object and returns the correspondig control. Modules can expand the\nfunctionality of this class via the createControl method",
    "lineNumber": 41,
    "interface": false
  },
  {
    "__docId__": 54,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "ControlFactoryOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "localiser_",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#localiser_",
    "access": "private",
    "description": "",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "L10N"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "map_",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#map_",
    "access": "private",
    "description": "",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "activeGroups_",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#activeGroups_",
    "access": "private",
    "description": "",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "Map.<string, ActiveGroup>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "getPositioning",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#getPositioning",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Positioning}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Positioning"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "createControl",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#createControl",
    "access": "public",
    "description": "The factory function",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Control}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "controlType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Control"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "addControlTo",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#addControlTo",
    "access": "public",
    "description": "Function to add a control by its name to a certain receiver",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "ComposedControl",
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "controlName",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "addControlMultipleInternal_",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#addControlMultipleInternal_",
    "access": "private",
    "description": "Adds multiple controls to one receiver",
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "ComposedControl",
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "controlNames",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "addControls",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#addControls",
    "access": "public",
    "description": "Add all configured Controls to the map",
    "lineNumber": 236,
    "params": [],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "controlsConfig",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#controlsConfig",
    "access": "public",
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "setLocaliser",
    "memberof": "src/configurators/ControlFactory.js~ControlFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/ControlFactory.js~ControlFactory#setLocaliser",
    "access": "public",
    "description": "Sets the localiser to pass on to the controls",
    "lineNumber": 248,
    "params": [
      {
        "nullable": null,
        "types": [
          "L10N"
        ],
        "spread": false,
        "optional": false,
        "name": "loc",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/configurators/LayerConfigurator.js",
    "content": "import ol from 'openlayers'\n\nimport { GroupLayer } from '../layers/GroupLayer'\nimport { copyDeep } from '../utilitiesObject'\nimport { checkFor } from '../utilities'\nimport { Debug } from '../Debug'\nimport { LayerFactory } from './LayerFactory'\n\n/**\n * This is part of the MapConfigurator class\n */\nexport class LayerConfigurator {\n  /**\n   * @param {G4UMap} map\n   * @public\n   */\n  constructor (map) {\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = map\n    this.map_.on('change:layerConfig', this.configureLayers.bind(this))\n\n    /**\n     * @type {LayerFactory}\n     * @private\n     */\n    this.layerFactory_ = new LayerFactory(map)\n  }\n\n  /**\n   * configures the layers according to the layerConfig stored in the 'layerConfig' property stored in the map. If the\n   * config changes this method is called automatically.\n   * @public\n   */\n  configureLayers () {\n    this.map_.set('ready:layers', false)\n\n    if (!(this.map_.getLayerGroup() instanceof GroupLayer)) {\n      this.map_.setLayerGroup(new GroupLayer())\n    }\n\n    let layers = this.map_.getLayerGroup()\n    layers.getLayers().clear()\n\n    /**\n     * @type {LayerConfig}\n     */\n    let layerConfigCopy = copyDeep(this.map_.get('layerConfig'))\n\n    /**\n     * @type {MapConfig}\n     */\n    let mapConfig = this.map_.get('mapConfig')\n\n    this.map_.set('layerIds', []) // in layerIds all ids are stored to check if one is double.\n\n    this.layerFactory_.setMapConfigProjection(\n      mapConfig.hasOwnProperty('mapProjection') ? ol.proj.get(mapConfig.mapProjection) : null\n    )\n\n    this.map_.set('loadingStrategy',\n      mapConfig.hasOwnProperty('loadingStrategy') ? mapConfig.loadingStrategy : 'ALL'\n    )\n\n    this.map_.set('ignoreLayerAvailability',\n      mapConfig.hasOwnProperty('ignoreLayerAvailability') ? mapConfig.ignoreLayerAvailability : false\n    )\n\n    // //////////////////////////////////////////////////////////////////////////////////////////\n    //                                      Baselayers                                        //\n    // //////////////////////////////////////////////////////////////////////////////////////////\n\n    // baseLayers before the view, because they determine the projection of the view.\n\n    /**\n     * @type {GroupLayer}\n     * @private\n     */\n    this.baseLayerGroup_ = this.map_.get('baseLayers') || new GroupLayer()\n\n    this.baseLayerGroup_.getLayers().clear()\n\n    if ((layerConfigCopy.hasOwnProperty('baseLayers')) && (layerConfigCopy.baseLayers instanceof Array)) {\n      Debug.tryOrThrow(() => {\n        this.layerFactory_.addLayers(this.baseLayerGroup_, layerConfigCopy.baseLayers, 'baseLayer')\n      })\n\n      if (this.baseLayerGroup_.getLayers().getLength() === 0) {\n        if (layerConfigCopy.baseLayers.length !== 0) {\n          let confCp = copyDeep(layerConfigCopy.baseLayers[0])\n          confCp.alwaysVisible = true\n          this.layerFactory_.addLayers(this.baseLayerGroup_, confCp, 'baseLayer', true)\n        } else {\n          Debug.warn('There is no baselayer available!')\n        }\n      }\n\n      let visibleBaseLayer\n\n      this.baseLayerGroup_.recursiveForEach(function (layer) {\n        if (!(layer instanceof GroupLayer)) {\n          visibleBaseLayer = visibleBaseLayer || layer.getVisible()\n        }\n      })\n\n      if (!visibleBaseLayer && this.baseLayerGroup_.getLayers().getLength()) {\n        let setFirstVisible = layer => {\n          if (layer instanceof GroupLayer) {\n            setFirstVisible(layer.getLayersArray()[0])\n          } else {\n            layer.setVisible(true)\n          }\n        }\n\n        setFirstVisible(this.baseLayerGroup_)\n      }\n\n      if (!this.map_.get('baseLayers')) {\n        this.baseLayerGroup_.getLayers().on('remove', e => {\n          if (this.baseLayerGroup_.getLayers().getLength() > 0) {\n            if (e.element.getVisible()) {\n              this.baseLayerGroup_.getLayers().item(0).setVisible(true)\n            }\n          }\n        })\n      }\n\n      this.map_.set('baseLayers', this.baseLayerGroup_)\n      layers.getLayers().push(this.baseLayerGroup_)\n    } else {\n      Debug.warn('The mapConfig option \\'baseLayers\\' is not set or not an Array!')\n    }\n\n    // if no baselayer had a given projection, choose 'EPSG:3857'\n    this.map_.set('mapProjection', this.layerFactory_.getMapProjection() || ol.proj.get('EPSG:3857'))\n\n    // //////////////////////////////////////////////////////////////////////////////////////////\n    //                                    FeatureLayers                                       //\n    // //////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @type {GroupLayer}\n     */\n    let featureLayers = this.map_.get('featureLayers') || new GroupLayer()\n\n    featureLayers.getLayers().clear()\n\n    this.layerFactory_.addLayers(featureLayers, layerConfigCopy.featureLayers || [], 'featureLayer')\n\n    this.map_.set('featureLayers', featureLayers)\n    layers.getLayers().push(featureLayers)\n\n    // //////////////////////////////////////////////////////////////////////////////////////////\n    //                                 FixedFeatureLayers                                     //\n    // //////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @type {GroupLayer}\n     */\n    let fixedFeatureLayers = this.map_.get('fixedFeatureLayers') || new GroupLayer()\n\n    fixedFeatureLayers.getLayers().clear()\n\n    if (checkFor(layerConfigCopy, 'fixedFeatureLayers')) {\n      this.layerFactory_.addLayers(fixedFeatureLayers, layerConfigCopy.fixedFeatureLayers, 'featureLayer')\n\n      this.map_.set('fixedFeatureLayers', fixedFeatureLayers)\n      layers.getLayers().push(fixedFeatureLayers)\n    }\n\n    // //////////////////////////////////////////////////////////////////////////////////////////\n    //                                      QueryLayer                                        //\n    // //////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @type {GroupLayer}\n     */\n    let queryLayers = this.map_.get('queryLayers') || new GroupLayer()\n\n    queryLayers.getLayers().clear()\n\n    if ((layerConfigCopy.hasOwnProperty('queryLayers')) && (layerConfigCopy.queryLayers instanceof Array)) {\n      this.layerFactory_.addLayers(queryLayers, layerConfigCopy.queryLayers, 'queryLayer', true)\n\n      this.map_.set('queryLayers', queryLayers)\n      layers.getLayers().push(queryLayers)\n    }\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                                   All layers loaded                                      //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    let loadingLayers = []\n    let isLoadingDelayed = false\n    let isLoadingPrecise = false\n\n    let forEachLayer = (layer) => {\n      if (layer.getLayers) {\n        layer.getLayers().on('add', e => {\n          forEachLayer(e.element)\n        })\n        layer.getLayers().forEach(forEachLayer)\n      }\n      if (layer.isLoading) {\n        if (layer.isLoading()) {\n          if (!isLoadingDelayed) {\n            isLoadingDelayed = true\n            this.map_.dispatchEvent('layersloadstart')\n            this.map_.set('allLayersLoaded', false)\n          }\n          isLoadingPrecise = true\n          loadingLayers.push(layer)\n        }\n      }\n      layer.on('loadcountstart', () => {\n        if (!isLoadingDelayed) {\n          isLoadingDelayed = true\n          this.map_.dispatchEvent('layersloadstart')\n          this.map_.set('allLayersLoaded', false)\n        }\n        isLoadingPrecise = true\n        loadingLayers.push(layer)\n      })\n      layer.on('loadcountend', () => {\n        loadingLayers.splice(loadingLayers.indexOf(layer), 1)\n        if (loadingLayers.length === 0) {\n          isLoadingPrecise = false\n          this.map_.afterPostrender(() => {\n            if (!isLoadingPrecise) {\n              this.map_.dispatchEvent('layersloadend')\n              isLoadingDelayed = false\n              this.map_.set('allLayersLoaded', true)\n            }\n          })\n          this.map_.render()\n        }\n      })\n    }\n\n    forEachLayer(this.map_.getLayerGroup())\n\n    this.map_.set('allLayersLoaded', false)\n\n    let layerLoadStarted = false\n\n    this.map_.once('layersloadstart', () => {\n      layerLoadStarted = true\n    })\n\n    this.map_.once('postrender', () => {\n      this.map_.once('postrender', () => {\n        if (!layerLoadStarted) {\n          this.map_.set('allLayersLoaded', true)\n        }\n      })\n    })\n\n    this.map_.set('ready:layers', true)\n  }\n\n  /**\n   * @returns {GroupLayer}\n   */\n  getBaseLayerGroup () {\n    return this.baseLayerGroup_\n  }\n\n  /**\n   * @returns {LayerFactory}\n   */\n  getFactory () {\n    return this.layerFactory_\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/configurators/LayerConfigurator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "class",
    "name": "LayerConfigurator",
    "memberof": "src/configurators/LayerConfigurator.js",
    "static": true,
    "longname": "src/configurators/LayerConfigurator.js~LayerConfigurator",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/configurators/LayerConfigurator.js",
    "importStyle": "{LayerConfigurator}",
    "description": "This is part of the MapConfigurator class",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 68,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/configurators/LayerConfigurator.js~LayerConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerConfigurator.js~LayerConfigurator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "map_",
    "memberof": "src/configurators/LayerConfigurator.js~LayerConfigurator",
    "static": false,
    "longname": "src/configurators/LayerConfigurator.js~LayerConfigurator#map_",
    "access": "private",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "layerFactory_",
    "memberof": "src/configurators/LayerConfigurator.js~LayerConfigurator",
    "static": false,
    "longname": "src/configurators/LayerConfigurator.js~LayerConfigurator#layerFactory_",
    "access": "private",
    "description": "",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "LayerFactory"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "configureLayers",
    "memberof": "src/configurators/LayerConfigurator.js~LayerConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerConfigurator.js~LayerConfigurator#configureLayers",
    "access": "public",
    "description": "configures the layers according to the layerConfig stored in the 'layerConfig' property stored in the map. If the\nconfig changes this method is called automatically.",
    "lineNumber": 37,
    "params": [],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "baseLayerGroup_",
    "memberof": "src/configurators/LayerConfigurator.js~LayerConfigurator",
    "static": false,
    "longname": "src/configurators/LayerConfigurator.js~LayerConfigurator#baseLayerGroup_",
    "access": "private",
    "description": "",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "GroupLayer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "getBaseLayerGroup",
    "memberof": "src/configurators/LayerConfigurator.js~LayerConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerConfigurator.js~LayerConfigurator#getBaseLayerGroup",
    "access": "public",
    "description": "",
    "lineNumber": 266,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{GroupLayer}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "GroupLayer"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "getFactory",
    "memberof": "src/configurators/LayerConfigurator.js~LayerConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerConfigurator.js~LayerConfigurator#getFactory",
    "access": "public",
    "description": "",
    "lineNumber": 273,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{LayerFactory}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "LayerFactory"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/configurators/LayerFactory.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport {BaseLayerImage, ImageLayer} from '../layers/ImageLayer'\nimport {EmptyBaseLayer} from '../layers/EmptyBaseLayer'\nimport {BaseTileLayer} from '../layers/BaseTileLayer'\nimport {TileLayer} from '../layers/TileLayer'\nimport {GroupLayer} from '../layers/GroupLayer'\nimport {VectorLayer} from '../layers/VectorLayer'\nimport {SourceServerVector} from '../sources/SourceServerVector'\nimport {QueryVectorSource} from '../sources/QueryVectorSource'\nimport { copyDeep, mergeDeep, take } from '../utilitiesObject'\nimport { asObject, checkFor } from '../utilities'\n\nimport {Debug} from '../Debug'\nimport {ImageWMSSource, TileWMSSource} from '../sources/ImageWMSSource'\nimport { BaseSilentGroupLayer, SilentGroupLayer } from '../layers/SilentGroupLayer'\nimport { URL } from '../URLHelper'\nimport { QueryImageWMSSource, QueryTileWMSSource } from '../sources/QueryWMSSource'\nimport { ClusterSource } from '../sources/ClusterSource'\n\nexport const SuperType = {\n  BASELAYER: 'baseLayer',\n  FEATURELAYER: 'featureLayer',\n  QUERYLAYER: 'queryLayer'\n}\n\nexport const LayerType = {\n  CATEGORY: 'Category',\n  SILENTGROUP: 'SilentGroup',\n  GEOJSON: 'GeoJSON',\n  KML: 'KML',\n  WMS: 'WMS',\n  TILEWMS: 'TileWMS',\n  WMTS: 'WMTS',\n  OSM: 'OSM',\n  STAMEN: 'Stamen',\n  INTERN: 'Intern',\n  EMPTY: 'Empty',\n  XYZ: 'XYZ',\n  BING: 'Bing'\n}\n\n/**\n * A config describing a layer\n * @public\n * @typedef {Object} g4uLayerOptions\n * @property {string} type the LayerType\n * @property {string|number} id unique in the whole config\n * @property {string} title\n * @property {SourceConfig|ol.source.Source} source\n * @property {Boolean} available\n * @property {Boolean} availableMobile overwrites available in mobile mode\n * @property {Boolean} visible\n * @property {Boolean} alwaysVisible overwrites visible, available and mobileAvailable\n * @property {StyleLike} [style]\n */\n\n/**\n * A config describing the source of a layer\n * @public\n * @typedef {Object} SourceConfig\n * @property {Localizable} [attribution]\n * @property {boolean} [localised=false]\n * @property {ol.Attribution[]} [attributions] will be setted automatically.\n * @property {null} [crossOrigin] will be setted automatically.\n * @property {string} loadingStrategy\n * @property {URLLike} url\n * @property {\n */\n\n/**\n * @typedef {Object} FeatureConfig\n * @public\n * @property {string|number} id\n * @property {StyleLike} style\n * @property {string} geometryWKT\n * @property {ol.geom.Geometry} geometry\n */\n\n/**\n * This class constructs a layer according to the given {{LayerOptions}}\n */\nexport class LayerFactory {\n  /**\n   * @param {G4UMap} map\n   */\n  constructor (map) {\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = map\n  }\n\n  /**\n   * @param {ol.ProjectionLike} mapConfigProjection\n   */\n  setMapConfigProjection (mapConfigProjection) {\n    this.mapProjection = mapConfigProjection\n  }\n\n  /**\n   * @returns {ol.ProjectionLike}\n   */\n  getMapProjection () {\n    return this.mapProjection\n  }\n\n  /**\n   * Adds multiple layers according to their configs to the given layerGroup\n   * @param {LayerGroup} layerGroup\n   * @param {g4uLayerOptions[]} configs\n   * @param {string} superType\n   * @param {Boolean} skipIdCheck\n   * @returns {ol.Layer.Base[]}\n   */\n  addLayers (layerGroup, configs, superType, skipIdCheck) {\n    return configs.map(config => this.addLayer(layerGroup, config, superType, skipIdCheck))\n  }\n\n  /**\n   * Adds a layer defined by a given config to a given layerGroup\n   * @param {LayerGroup} layerGroup\n   * @param {g4uLayerOptions} options\n   * @param {string} superType\n   * @param {Boolean} skipIdCheck\n   * @returns {ol.layer.Base}\n   */\n  addLayer (layerGroup, options, superType, skipIdCheck) {\n    let layer\n    /**\n     * @type {g4uLayerOptions}\n     */\n    let optionsCopy = copyDeep(options)\n\n    if (skipIdCheck || this.configureLayerIsIdOk_(optionsCopy.id)) {\n      // loading strategy\n\n      if (!optionsCopy.type) {\n        throw new Error(`Layer needs a type. Layer id: ${optionsCopy.id}. Layer title: ${optionsCopy.title}.`)\n      }\n\n      // availability\n      this.configureLayerAvailability_(optionsCopy)\n\n      // the title/name of the layer\n      this.configureLayerTitle_(optionsCopy)\n\n      if (superType === SuperType.BASELAYER) {\n        optionsCopy.groupLayer = this.map_.get('layerConfigurator').getBaseLayerGroup()\n      }\n\n      if (optionsCopy.source) {\n        this.configureLayerSourceAttribution_(optionsCopy.source)\n      }\n\n      // visibility\n      this.configureLayerVisibility_(optionsCopy)\n\n      layer = this.createLayer(optionsCopy.type, optionsCopy, superType, skipIdCheck)\n\n      let forEachLayer = layer => {\n        layerGroup.getLayers().push(layer)\n      }\n\n      if (layer instanceof ol.Collection) {\n        layer.forEach(forEachLayer)\n      } else {\n        forEachLayer(layer)\n      }\n    }\n\n    return layer\n  }\n\n  /**\n   * @param {string} type\n   * @param {string} superType\n   */\n  superTypeNotSupported (type, superType) {\n    throw new Error(`${type} is not configured for superType '${superType}'`)\n  }\n\n  /**\n   * Creates a layer or a collection of layers from the config\n   * @param {string} layerType\n   * @param {g4uLayerOptions} optionsCopy\n   * @param {string} superType\n   * @param {Boolean} skipIdCheck\n   * @returns {ol.layer.Layer|ol.Collection.<ol.layer.Layer>}\n   */\n  createLayer (layerType, optionsCopy, superType, skipIdCheck) {\n    if (superType === SuperType.QUERYLAYER) {\n      if (!optionsCopy.hasOwnProperty('apiKey')) {\n        Debug.error('Each query layer needs to have an apiKey.')\n      }\n      optionsCopy.source.projection = this.mapProjection\n    }\n\n    if (optionsCopy.source) {\n      optionsCopy.source.localiser = this.map_.get('localiser')\n    }\n\n    let layer\n    let layerConfigs\n    let clusterOptions\n    let localised = false\n    if (optionsCopy.source) {\n      optionsCopy.source.localiser = this.map_.get('localiser')\n      localised = optionsCopy.source.localised\n    }\n\n    let style = take(optionsCopy, 'style')\n\n    switch (layerType) {\n      case LayerType.SILENTGROUP:\n\n        layerConfigs = take(optionsCopy, 'layers')\n\n        if (superType === SuperType.BASELAYER) {\n          layer = new BaseSilentGroupLayer(optionsCopy)\n        } else {\n          layer = new SilentGroupLayer(optionsCopy)\n        }\n\n        this.addLayers(layer, layerConfigs, superType, true)\n\n        layer.getLayers().forEach(childLayer => {\n          childLayer.setVisible(true)\n        })\n        break\n      case LayerType.CATEGORY:\n        layerConfigs = take(optionsCopy, 'layers')\n\n        layer = new GroupLayer(optionsCopy)\n\n        this.addLayers(layer, layerConfigs, superType, skipIdCheck)\n\n        // availability & parent ref\n        let childrenAvailable = false\n        layer.getLayers().forEach(childLayer => {\n          childLayer.set('category', layer)\n          childrenAvailable = childrenAvailable || childLayer.get('available')\n        })\n\n        let childrenCount = layer.getLayers().getLength()\n\n        if (childrenAvailable !== false) {\n          if ((layer.get('available') !== false) && (childrenCount > 0)) {\n            // category is shown\n\n            if (childrenAvailable === true) {\n              layer.set('available', true)\n            }\n\n            layer.setVisible(true)\n\n            if (superType === SuperType.BASELAYER) {\n              layer.set('activateChildren', false)\n            }\n\n            return layer\n          } else if (childrenAvailable === true) {\n            // only children are shown\n            return layer.getLayers()\n          }\n          // else neither are shown\n        }\n        break\n      case LayerType.EMPTY:\n        if (superType === SuperType.BASELAYER) {\n          layer = new EmptyBaseLayer(optionsCopy)\n        } else {\n          optionsCopy.source = new ol.source.Vector()\n          layer = new VectorLayer(optionsCopy)\n        }\n        break\n      case LayerType.XYZ:\n        optionsCopy.source.url = URL.extractFromConfig(optionsCopy.source, 'url', undefined, this.map_).finalize()\n        optionsCopy.source = new ol.source.XYZ(optionsCopy.source)\n\n        if (superType === SuperType.BASELAYER) {\n          layer = new BaseTileLayer(optionsCopy)\n        } else {\n          layer = new TileLayer(optionsCopy)\n        }\n        break\n      case LayerType.OSM:\n        optionsCopy.source.url = URL.extractFromConfig(optionsCopy.source, 'url', undefined, this.map_).finalize()\n        optionsCopy.source = new ol.source.OSM(optionsCopy.source)\n\n        if (superType === SuperType.BASELAYER) {\n          layer = new BaseTileLayer(optionsCopy)\n        } else {\n          layer = new TileLayer(optionsCopy)\n        }\n        break\n      case LayerType.STAMEN:\n        optionsCopy.source = new ol.source.Stamen(optionsCopy.source)\n\n        if (superType === SuperType.BASELAYER) {\n          layer = new BaseTileLayer(optionsCopy)\n        } else {\n          layer = new TileLayer(optionsCopy)\n        }\n        break\n      case LayerType.BING:\n        optionsCopy.source = new ol.source.BingMaps(optionsCopy.source)\n\n        if (superType === SuperType.BASELAYER) {\n          layer = new BaseTileLayer(optionsCopy)\n        } else {\n          layer = new TileLayer(optionsCopy)\n        }\n        break\n      case LayerType.WMS:\n        if (optionsCopy.categoryButtons) {\n          optionsCopy.source.params.LAYERS = []\n        }\n\n        optionsCopy.source.url = URL.extractFromConfig(optionsCopy.source, 'url', undefined, this.map_) // not finalized\n\n        if (superType === SuperType.BASELAYER) {\n          optionsCopy.source = new ImageWMSSource(optionsCopy.source)\n          layer = new BaseLayerImage(optionsCopy)\n        } else if (superType === SuperType.QUERYLAYER) {\n          optionsCopy.visible = false\n          optionsCopy.source = new QueryImageWMSSource(optionsCopy.source)\n          layer = new ImageLayer(optionsCopy)\n        } else {\n          optionsCopy.source = new ImageWMSSource(optionsCopy.source)\n          layer = new ImageLayer(optionsCopy)\n        }\n\n        if (layer.getSource().hasFeatureInfo()) {\n          this.map_.asSoonAs('ready:ui', true, () => {\n            if (this.map_.get('showWMSFeatureInfo')) {\n              this.map_.get('showWMSFeatureInfo').addLayer(layer)\n            }\n          })\n        }\n\n        break\n      case LayerType.TILEWMS:\n        if (optionsCopy.source.tileSize) {\n          optionsCopy.source.tileGrid = ol.tilegrid.createXYZ({ tileSize: optionsCopy.source.tileSize })\n          delete optionsCopy.source.tileSize\n        }\n\n        optionsCopy.source.url = URL.extractFromConfig(optionsCopy.source, 'url', undefined, this.map_) // not finalized\n\n        if (superType === SuperType.BASELAYER) {\n          optionsCopy.source = new TileWMSSource(optionsCopy.source)\n          layer = new BaseTileLayer(optionsCopy)\n        } else if (superType === SuperType.QUERYLAYER) {\n          optionsCopy.visible = false\n          optionsCopy.source = new QueryTileWMSSource(optionsCopy.source)\n          layer = new TileLayer(optionsCopy)\n        } else {\n          optionsCopy.source = new TileWMSSource(optionsCopy.source)\n          layer = new TileLayer(optionsCopy)\n        }\n\n        if (layer.getSource().hasFeatureInfo()) {\n          this.map_.asSoonAs('ready:ui', true, () => {\n            if (this.map_.get('showWMSFeatureInfo')) {\n              this.map_.get('showWMSFeatureInfo').addLayer(layer)\n            }\n          })\n        }\n\n        break\n      case LayerType.WMTS:\n        let sourceOptions = take(optionsCopy, 'source')\n\n        if (superType === SuperType.BASELAYER) {\n          layer = new BaseTileLayer(optionsCopy)\n        } else {\n          layer = new TileLayer(optionsCopy)\n        }\n\n        this.setWMTSSourceFromCapabilities(layer, sourceOptions)\n\n        break\n      case LayerType.GEOJSON:\n        this.configureLayerSourceLoadingStrategy_(optionsCopy.source)\n        optionsCopy.source.url = URL.extractFromConfig(optionsCopy.source, 'url', undefined, this.map_) // not finalized\n\n        optionsCopy.source.defaultStyle = this.map_.get('styling').getStyle(style || '#defaultStyle')\n\n        optionsCopy.source.type = 'GeoJSON'\n\n        optionsCopy.source.bboxProjection = optionsCopy.source.bboxProjection || this.map_.get('interfaceProjection')\n\n        optionsCopy.source.styling = this.map_.get('styling')\n\n        clusterOptions = take(optionsCopy.source, 'cluster')\n\n        if (superType === SuperType.QUERYLAYER) {\n          optionsCopy.visible = false\n          optionsCopy.source = new QueryVectorSource(optionsCopy.source)\n        } else {\n          optionsCopy.source = new SourceServerVector(optionsCopy.source)\n        }\n\n        if (clusterOptions) {\n          clusterOptions = asObject(clusterOptions)\n          optionsCopy.source = new ClusterSource(optionsCopy.source, clusterOptions)\n        }\n        layer = new VectorLayer(optionsCopy)\n        break\n      case LayerType.KML:\n        this.configureLayerSourceLoadingStrategy_(optionsCopy.source)\n        optionsCopy.source.url = URL.extractFromConfig(optionsCopy.source, 'url', undefined, this.map_) // not finalized\n\n        optionsCopy.source.defaultStyle = this.map_.get('styling').getStyle(style || '#defaultStyle')\n\n        optionsCopy.source.type = 'KML'\n\n        optionsCopy.source.bboxProjection = optionsCopy.source.bboxProjection || this.map_.get('interfaceProjection')\n\n        optionsCopy.source.styling = this.map_.get('styling')\n\n        clusterOptions = take(optionsCopy.source, 'cluster')\n\n        if (superType === SuperType.QUERYLAYER) {\n          optionsCopy.visible = false\n          optionsCopy.source = new QueryVectorSource(optionsCopy.source)\n        } else {\n          optionsCopy.source = new SourceServerVector(optionsCopy.source)\n        }\n\n        if (clusterOptions) {\n          optionsCopy.source = new ClusterSource(optionsCopy.source, asObject(clusterOptions))\n        }\n        layer = new VectorLayer(optionsCopy)\n        break\n      case LayerType.INTERN:\n\n        if (optionsCopy.source.hasOwnProperty('features')) {\n          for (let i = 0; i < optionsCopy.source.features.length; i++) {\n            optionsCopy.source.features[i] = this.createFeature(optionsCopy.source.features[i])\n          }\n        }\n\n        optionsCopy.source = new ol.source.Vector(optionsCopy.source)\n\n        if (superType === SuperType.QUERYLAYER) {\n          this.superTypeNotSupported(layerType, superType)\n        } else {\n          layer = new VectorLayer(optionsCopy)\n        }\n        break\n    }\n\n    for (let module of this.map_.getModules()) {\n      if (layer) {\n        break\n      }\n      layer = module.createLayer(optionsCopy.type, optionsCopy, superType, skipIdCheck)\n    }\n\n    if (!layer) {\n      throw new Error(`layer with type '${optionsCopy.type}' could not be created.`)\n    }\n\n    // styling\n    if (layer.setStyle) {\n      layer.setStyle(this.map_.get('styling').getStyle(style))\n      this.map_.get('styling').manageLayer(layer)\n    }\n\n    // if layer is a baselayer, check for mapProjection\n    if (superType === SuperType.BASELAYER && optionsCopy.source) {\n      if (layer.getSource().getProjection()) {\n        if (!this.mapProjection) {\n          this.mapProjection = layer.getSource().getProjection()\n        } else if (this.mapProjection && this.mapProjection !== layer.getSource().getProjection()) {\n          Debug.warn('The baseLayers are not in mapProjection or a baseLayers has a different projection than' +\n             ' another! This might cause reprojection issues.')\n        }\n      }\n    } else if (superType === SuperType.QUERYLAYER) {\n      this.map_.get('urlApi').addApiLayer(layer, optionsCopy.apiKey)\n    }\n\n    // if layer is being localised, refresh on language change\n    if (localised) {\n      this.map_.get('localiser').on('change:language', () => layer.getSource().refresh())\n    }\n\n    return layer\n  }\n\n  /**\n   * A function that checks if a layer id is setted and not a duplicate of another.\n   * Throws an error if this is the case.\n   * @param {string|number} id\n   * @private\n   */\n  configureLayerIsIdOk_ (id) {\n    /**\n     * @type {string[]|number[]}\n     */\n    let layerIds = this.map_.get('layerIds')\n\n    if (id === 0 || (id && (typeof id === 'string' || !isNaN(id)))) {\n      for (let j = 0, jj = layerIds.length; j < jj; j++) {\n        if (id === layerIds[j]) {\n          Debug.error(`Each layer needs a unique id! Otherwise the layer won't be shown. Layer id: ${id}`)\n          return false\n        }\n      }\n      layerIds.push(id)\n      this.map_.set('layerIds', layerIds)\n      return true\n    } else {\n      Debug.error(`Each layer needs a unique id! Otherwise the layer won't be shown. Layer id: ${id}`)\n      return false\n    }\n  }\n\n  /**\n   * @param {g4uLayerOptions} config\n   * @returns {g4uLayerOptions}\n   * @private\n   */\n  configureLayerAvailability_ (config) {\n    // if available is set to false explicitely, the layer won't be available\n    config.available = (config.available !== false)\n\n    if (!config.alwaysVisible) {\n      config.available = config.hasOwnProperty('availableMobile') ? config.availableMobile : config.available\n      if (this.map_.get('ignoreLayerAvailability')) {\n        config.available = true\n      }\n    }\n    return config\n  }\n\n  /**\n   * @param {SourceConfig} sourceConfig\n   * @returns {SourceConfig}\n   * @private\n   */\n  configureLayerSourceAttribution_ (sourceConfig) {\n    if (checkFor(sourceConfig, 'attribution')) {\n      sourceConfig.attributions = [\n        new ol.Attribution({\n          html: this.map_.get('localiser').selectL10N(sourceConfig.attribution)\n        })\n      ]\n    }\n    return sourceConfig\n  }\n\n  /**\n   * @param {SourceConfig} sourceConfig\n   * @returns {SourceConfig}\n   * @private\n   */\n  configureLayerSourceLoadingStrategy_ (sourceConfig) {\n    sourceConfig.loadingStrategy = sourceConfig.hasOwnProperty('loadingStrategy')\n      ? sourceConfig.loadingStrategy\n      : this.map_.get('loadingStrategy')\n    return sourceConfig\n  }\n\n  /**\n   * @param {g4uLayerOptions} config\n   * @returns {g4uLayerOptions}\n   * @private\n   */\n  configureLayerTitle_ (config) {\n    if (!config.hasOwnProperty('title')) {\n      config.title = 'No title given'\n    } else {\n      config.title = this.map_.get('localiser').selectL10N(config.title)\n    }\n    return config\n  }\n\n  /**\n   * @param {g4uLayerOptions} config\n   * @returns {g4uLayerOptions}\n   * @private\n   */\n  configureLayerVisibility_ (config) {\n    if (config.alwaysVisible === true) {\n      config.visible = true\n    } else {\n      config.visible = (config.visible === true)\n    }\n\n    return config\n  }\n\n  /**\n   * @param {FeatureConfig} featureConf\n   * @returns {ol.Feature}\n   */\n  createFeature (featureConf) {\n    /**\n     * @type {FeatureConfig}\n     */\n    let featureConfCopy = copyDeep(featureConf)\n\n    let id = take(featureConfCopy, 'id')\n\n    let style = take(featureConfCopy, 'style')\n\n    let format = new ol.format.WKT()\n    let wkt = take(featureConfCopy, 'geometryWKT') || take(featureConfCopy, 'geographyWKT')\n    featureConfCopy.geometry = format.readGeometry(wkt)\n      .transform(this.map_.get('interfaceProjection'), this.map_.get('mapProjection'))\n\n    let feature = new ol.Feature(featureConfCopy)\n\n    if (style) {\n      this.map_.get('styling').styleFeature(feature, style)\n    }\n\n    if (id) {\n      feature.setId(id)\n    }\n\n    return feature\n  }\n\n  setWMTSSourceFromCapabilities (layer, sourceOptions) {\n    let url = URL.extractFromConfig(sourceOptions, 'url', undefined, this.map_)\n    let capUrl = url.clone().addParam('Service=WMTS').addParam('Request=GetCapabilities')\n    $.ajax({\n      url: capUrl.finalize(),\n      dataType: 'text xml',\n      crossDomain: true,\n      success: data => {\n        let wmtsCap = (new ol.format.WMTSCapabilities()).read(data)\n        let capOptions = ol.source.WMTS.optionsFromCapabilities(wmtsCap, take(sourceOptions, 'config'))\n        sourceOptions.url = url.finalize()\n        sourceOptions = mergeDeep(sourceOptions, capOptions)\n        layer.setSource(new ol.source.WMTS(sourceOptions))\n      }\n    })\n    layer.setSource(new ol.source.ImageCanvas({\n      state: 'ready',\n      canvasFunction: () => {} // not loading any canvas\n    }))\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/configurators/LayerFactory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "SuperType",
    "memberof": "src/configurators/LayerFactory.js",
    "static": true,
    "longname": "src/configurators/LayerFactory.js~SuperType",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/configurators/LayerFactory.js",
    "importStyle": "{SuperType}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"BASELAYER\": string, \"FEATURELAYER\": string, \"QUERYLAYER\": string}"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "LayerType",
    "memberof": "src/configurators/LayerFactory.js",
    "static": true,
    "longname": "src/configurators/LayerFactory.js~LayerType",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/configurators/LayerFactory.js",
    "importStyle": "{LayerType}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "{\"CATEGORY\": string, \"SILENTGROUP\": string, \"GEOJSON\": string, \"KML\": string, \"WMS\": string, \"TILEWMS\": string, \"WMTS\": string, \"OSM\": string, \"STAMEN\": string, \"INTERN\": string, \"EMPTY\": string, \"XYZ\": string, \"BING\": string}"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "typedef",
    "name": "g4uLayerOptions",
    "memberof": "src/configurators/LayerFactory.js",
    "static": true,
    "longname": "src/configurators/LayerFactory.js~g4uLayerOptions",
    "access": "public",
    "description": "A config describing a layer",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the LayerType"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "unique in the whole config"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SourceConfig",
          "ol.source.Source"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "available",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "availableMobile",
        "description": "overwrites available in mobile mode"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "alwaysVisible",
        "description": "overwrites visible, available and mobileAvailable"
      },
      {
        "nullable": null,
        "types": [
          "StyleLike"
        ],
        "spread": false,
        "optional": true,
        "name": "style",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "g4uLayerOptions"
    }
  },
  {
    "__docId__": 79,
    "kind": "typedef",
    "name": "SourceConfig",
    "memberof": "src/configurators/LayerFactory.js",
    "static": true,
    "longname": "src/configurators/LayerFactory.js~SourceConfig",
    "access": "public",
    "description": "A config describing the source of a layer",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": true,
        "name": "attribution",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "localised",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.Attribution[]"
        ],
        "spread": false,
        "optional": true,
        "name": "attributions",
        "description": "will be setted automatically."
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": true,
        "name": "crossOrigin",
        "description": "will be setted automatically."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "loadingStrategy",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "URLLike"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SourceConfig"
    }
  },
  {
    "__docId__": 80,
    "kind": "typedef",
    "name": "FeatureConfig",
    "memberof": "src/configurators/LayerFactory.js",
    "static": true,
    "longname": "src/configurators/LayerFactory.js~FeatureConfig",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "StyleLike"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "geometryWKT",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.geom.Geometry"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "FeatureConfig"
    }
  },
  {
    "__docId__": 81,
    "kind": "class",
    "name": "LayerFactory",
    "memberof": "src/configurators/LayerFactory.js",
    "static": true,
    "longname": "src/configurators/LayerFactory.js~LayerFactory",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/configurators/LayerFactory.js",
    "importStyle": "{LayerFactory}",
    "description": "This class constructs a layer according to the given {{LayerOptions}}",
    "lineNumber": 84,
    "interface": false
  },
  {
    "__docId__": 82,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "map_",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#map_",
    "access": "private",
    "description": "",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "setMapConfigProjection",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#setMapConfigProjection",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.ProjectionLike"
        ],
        "spread": false,
        "optional": false,
        "name": "mapConfigProjection",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "mapProjection",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#mapProjection",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "getMapProjection",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#getMapProjection",
    "access": "public",
    "description": "",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.ProjectionLike}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.ProjectionLike"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "addLayers",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#addLayers",
    "access": "public",
    "description": "Adds multiple layers according to their configs to the given layerGroup",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.Layer.Base[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "LayerGroup"
        ],
        "spread": false,
        "optional": false,
        "name": "layerGroup",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "g4uLayerOptions[]"
        ],
        "spread": false,
        "optional": false,
        "name": "configs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "superType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipIdCheck",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.Layer.Base[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "addLayer",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#addLayer",
    "access": "public",
    "description": "Adds a layer defined by a given config to a given layerGroup",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.layer.Base}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "LayerGroup"
        ],
        "spread": false,
        "optional": false,
        "name": "layerGroup",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "g4uLayerOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "superType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipIdCheck",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.layer.Base"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "superTypeNotSupported",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#superTypeNotSupported",
    "access": "public",
    "description": "",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "superType",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "createLayer",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#createLayer",
    "access": "public",
    "description": "Creates a layer or a collection of layers from the config",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.layer.Layer|ol.Collection.<ol.layer.Layer>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "g4uLayerOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "optionsCopy",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "superType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipIdCheck",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.layer.Layer",
        "ol.Collection.<ol.layer.Layer>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "configureLayerIsIdOk_",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#configureLayerIsIdOk_",
    "access": "private",
    "description": "A function that checks if a layer id is setted and not a duplicate of another.\nThrows an error if this is the case.",
    "lineNumber": 502,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "configureLayerAvailability_",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#configureLayerAvailability_",
    "access": "private",
    "description": "",
    "lineNumber": 529,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{g4uLayerOptions}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uLayerOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "g4uLayerOptions"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "configureLayerSourceAttribution_",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#configureLayerSourceAttribution_",
    "access": "private",
    "description": "",
    "lineNumber": 547,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{SourceConfig}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SourceConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceConfig",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SourceConfig"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "configureLayerSourceLoadingStrategy_",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#configureLayerSourceLoadingStrategy_",
    "access": "private",
    "description": "",
    "lineNumber": 563,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{SourceConfig}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SourceConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceConfig",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SourceConfig"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "configureLayerTitle_",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#configureLayerTitle_",
    "access": "private",
    "description": "",
    "lineNumber": 575,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{g4uLayerOptions}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uLayerOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "g4uLayerOptions"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "configureLayerVisibility_",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#configureLayerVisibility_",
    "access": "private",
    "description": "",
    "lineNumber": 589,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{g4uLayerOptions}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uLayerOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "g4uLayerOptions"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "createFeature",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#createFeature",
    "access": "public",
    "description": "",
    "lineNumber": 603,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.Feature}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "FeatureConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "featureConf",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.Feature"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "setWMTSSourceFromCapabilities",
    "memberof": "src/configurators/LayerFactory.js~LayerFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/LayerFactory.js~LayerFactory#setWMTSSourceFromCapabilities",
    "access": "public",
    "description": null,
    "lineNumber": 631,
    "undocument": true,
    "params": [
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "sourceOptions",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/configurators/MapConfigurator.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\nimport proj4 from 'proj4/dist/proj4'\n\nol.proj.setProj4(proj4)\n\nimport {Styling} from '../Styling'\nimport {LayerConfigurator} from './LayerConfigurator'\nimport {UIConfigurator} from './UIConfigurator'\n\nimport { copyDeep } from '../utilitiesObject'\nimport { checkFor } from '../utilities'\n\nimport {API} from '../API'\n\nimport {Debug} from '../Debug'\n\n/**\n * @typedef {Object} MapConfig\n * @property {Boolean} [userActionTracking]\n * @property {boolean} [enableContextMenu=false] enables the contextMenu outside of textinput fields\n * @property {g4uViewOptions} view\n * @property {string} [interfaceProjection='EPSG:4326']\n * @property {string} [mapProjection] will be infered from map data if not set\n * @property {string} [measurementProjection] the projection measurements will calculated in\n * @property {string} [proxy] A proxy url. It should be an url with a {url} part where the proxied url is to be\n *    inserted.\n * @property {Object.<string,StyleObject>} [styleMap] the style objects which will be mapped to certain identifiers. It\n *    is recommended that identifiers start with a #. The {{StyleObject}} with the identifier '#defaultStyle' will be\n *    used as a default Style in the whole Software\n * @property {number} [scaleIcons] a default scaling for all used feature icons\n * @property {boolean} [manageStyles=true] set this to false to disable style managing. This disables scaleIcons,\n *    mobileScaleIcons, feature hiding and adjustable style opacity\n * @property {ProjectionConfig[]} [additionalProjections]\n * @property {Object} [api] API-Options\n * @property {string} [loadingStrategy='ALL'] global loading strategy. Can have the values 'BBOX' or 'ALL'.\n * @property {boolean} [ignoreLayerAvailability=false] if set all layers are added to the map, regardless of their\n *    available config option\n * @property {string} [cssFile] a cssFile to load and insert in the head dynamically.\n * @property {Color[]} [cssTemplate] if 3 colors are given, the colors used in the text of the loaded cssFile will be\n *    replaced by this colors. The colors in the cssFile need to be pure red, blue and green.\n * @property {MobileLayoutOptions} [mobileLayout]\n * @property {PositioningOptions} [positioning={}]\n * @property {KineticOptions|boolean} [kinetic] This influences the DragPan behaviour. If set to false no kinetic\n *    options are applied, if not set, the defaults are used.\n */\n\n/**\n * @typedef {object} KineticOptions\n * @property {number} [decay]\n * @property {number} [minVelocity]\n * @property {number} [delay]\n */\n\n/**\n * @typedef {Object} ProjectionConfig\n * @property {string} code\n * @property {string} definition\n */\n\n/**\n * @typedef {Object} g4uViewOptions\n * @property {ol.Coordinate} center the initial center of the map\n * @property {ol.Extent} [extent] the max extent the center can lay in\n * @property {number} [resolution]\n * @property {number} [zoom]\n * @property {number} [rotation]\n * @property {number} [fit] an extent to fit the map initialy to, overwrites center settings\n * @property {ol.ProjectionLike} [projection]\n */\n\n/**\n * @typedef {Object} LayerConfig\n * @property {Object[]} baseLayers\n * @property {Object[]} featureLayers\n * @property {Object[]} fixedFeatureLayers\n * @property {Object[]} queryLayers\n */\n\n/**\n * @typedef {object} MobileLayoutOptions\n * @property {string[]} mediaQueries these will enable the mobile layout including removing the g4u-desktop class from\n *    the ol-viewport and adding the g4u-mobile class\n * @property {number} [scaleIcons=1] a value to scale all icons by\n * @property {boolean} [animations=true] if animations should be disabled\n * @property {number} [hitTolerance]\n */\n\n/**\n * This class configures a map once the configureMap method is called.\n * configureMap initializes the map and can only be called once.\n * it delegates the configureUI and configureLayers to the {{UIConfigurator}} and {{LayerConfigurator}} classes.\n */\nexport class MapConfigurator {\n  /**\n   * @param {G4UMap} map\n   * @public\n   */\n  constructor (map) {\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = map\n\n    /**\n     * @type {LayerConfigurator}\n     * @private\n     */\n    this.layerConfigurator_ = new LayerConfigurator(map)\n\n    /**\n     * @type {UIConfigurator}\n     * @private\n     */\n    this.UIConfigurator_ = new UIConfigurator(map)\n\n    map.set('layerConfigurator', this.layerConfigurator_)\n    map.set('UIConfigurator', this.UIConfigurator_)\n\n    this.configureMap()\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.firstRun_ = false\n  }\n\n  /**\n   * Delegate call to {{LayerConfigurator}}\n   * @public\n   */\n  configureLayers () {\n    this.layerConfigurator_.configureLayers()\n  }\n\n  /**\n   * Delegate call to {{UIConfigurator}}\n   * @public\n   */\n  configureUI () {\n    this.UIConfigurator_.configureUI()\n  }\n\n  /**\n   * @public\n   */\n  configureMap () {\n    if (this.firstRun_) {\n      Debug.error('configureMap is supposed to be called only once')\n      Debug.warn('If you would like to change that, please think about something because of the asynchronous nature' +\n        ' of \"ready\", \"ready:ui\" and \"ready:layers\"')\n      throw new Error()\n    }\n\n    /**\n     * @type {MapConfig}\n     */\n    let mapConfigCopy = copyDeep(this.map_.get('mapConfig'))\n\n    if (!mapConfigCopy.enableContextMenu) {\n      $(this.map_.getTarget()).on('contextmenu', e => {\n        if (!$(e.target).is('input[type=text]') && !$(e.target).is('textarea')) {\n          e.preventDefault()\n        }\n      })\n    }\n\n    this.map_.set('userActionTracking', mapConfigCopy.userActionTracking)\n\n    let interfaceProjection = mapConfigCopy.hasOwnProperty('interfaceProjection')\n      ? mapConfigCopy.interfaceProjection\n      : 'EPSG:4326'\n\n    this.map_.set('interfaceProjection', interfaceProjection)\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                                       Styling                                            //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    // has to be done before configureLayers ... -> promise?\n\n    let stylingOptions = {}\n\n    if (mapConfigCopy.hasOwnProperty('manageStyles')) {\n      stylingOptions.manageStyles = mapConfigCopy.manageStyles\n    }\n\n    if (mapConfigCopy.hasOwnProperty('styleMap')) {\n      stylingOptions.styleConfigMap = mapConfigCopy.styleMap\n    }\n\n    let scaleIcons = mapConfigCopy.hasOwnProperty('scaleIcons') ? mapConfigCopy.scaleIcons : 1\n    stylingOptions.scaleIcons = scaleIcons\n\n    this.map_.set('scaleIcons', scaleIcons)\n    this.map_.set('styling', new Styling(stylingOptions))\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                                      Projections                                         //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    let additionalProjectionsConf = mapConfigCopy.hasOwnProperty('additionalProjections')\n      ? mapConfigCopy.additionalProjections\n      : []\n\n    for (let i = 0, ii = additionalProjectionsConf.length; i < ii; i++) {\n      proj4.defs(additionalProjectionsConf[i].code, additionalProjectionsConf[i].definition)\n    }\n\n    if (checkFor(mapConfigCopy, 'measurementProjection')) {\n      try {\n        this.map_.set('measurementProjection', ol.proj.get(mapConfigCopy.measurementProjection))\n      } catch (e) {\n        throw new Error('measurementProjection is not available, check for spelling or try to add it to' +\n          ' additionalProjections with a proj4 definition.')\n      }\n    }\n\n    this.configureLayers()\n\n    let mapProjection = this.map_.get('mapProjection') // mapProjection is determined by the baseLayers\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                                    Creating View                                         //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    /**\n     * @type {g4uViewOptions}\n     */\n    let viewOptions = mapConfigCopy.view || {}\n\n    viewOptions.projection = mapProjection\n\n    if (checkFor(mapConfigCopy.view, 'center')) {\n      viewOptions.center = ol.proj.transform(mapConfigCopy.view.center, interfaceProjection, mapProjection)\n    }\n\n    if (checkFor(mapConfigCopy.view, 'extent')) {\n      viewOptions.extent = ol.extent.applyTransform(\n        mapConfigCopy.view.extent,\n        ol.proj.getTransform(interfaceProjection, mapProjection)\n      )\n    }\n\n    let oldView = this.map_.getView()\n    if (oldView) {\n      viewOptions.center = oldView.getCenter() || mapConfigCopy.view.center\n      viewOptions.resolution = oldView.getResolution() || mapConfigCopy.view.resolution\n      viewOptions.rotation = oldView.getRotation() || mapConfigCopy.view.rotation\n    }\n\n    // creating the view\n    let view = new ol.View(viewOptions)\n\n    // setting the extent overwrites any settings about zoom and start coordinates\n    if (!oldView && checkFor(mapConfigCopy.view, 'fit')) {\n      view.fit(ol.proj.transformExtent(mapConfigCopy.view.fit, interfaceProjection, mapProjection), {\n        size: this.map_.getSize()\n      })\n    }\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                                   Setting View                                           //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    this.map_.setView(view)\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                                       Resize                                             //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    $(window).on('resize', () => { // NOTE: could get depricated with 'change:size'\n      this.map_.dispatchEvent('resize')\n    })\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                              Generic global handlers                                     //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    let $viewport = $(this.map_.getViewport())\n\n    // applying a mousedown class to the viewport if the mouse is down\n    let mousedownClass = 'mousedown'\n    $viewport.on('mousedown', () => {\n      $viewport.addClass(mousedownClass)\n    })\n    $viewport.on('mouseup', () => {\n      $viewport.removeClass(mousedownClass)\n    })\n\n    // Sets the Keyboardfocus on the Map\n    $viewport.focus()\n\n    // Let the keyboardfocus stay with the Map\n    $viewport.on('click', () => {\n      $viewport.focus()\n    })\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                             UI (Interactions and Controls)                               //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    Debug.tryOrThrow(() => {\n      this.configureUI()\n    })\n\n    this.map_.set('api', new API(this.map_, mapConfigCopy.api))\n\n    for (let module of this.map_.getModules()) {\n      module.configureMap(mapConfigCopy)\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/configurators/MapConfigurator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "typedef",
    "name": "MapConfig",
    "memberof": "src/configurators/MapConfigurator.js",
    "static": true,
    "longname": "src/configurators/MapConfigurator.js~MapConfig",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "userActionTracking",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "enableContextMenu",
        "description": "enables the contextMenu outside of textinput fields"
      },
      {
        "nullable": null,
        "types": [
          "g4uViewOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'EPSG:4326'",
        "defaultRaw": "'EPSG:4326'",
        "name": "interfaceProjection",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "mapProjection",
        "description": "will be infered from map data if not set"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "measurementProjection",
        "description": "the projection measurements will calculated in"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "proxy",
        "description": "A proxy url. It should be an url with a {url} part where the proxied url is to be\n   inserted."
      },
      {
        "nullable": null,
        "types": [
          "Object.<string,StyleObject>"
        ],
        "spread": false,
        "optional": true,
        "name": "styleMap",
        "description": "the style objects which will be mapped to certain identifiers. It\n   is recommended that identifiers start with a #. The {{StyleObject}} with the identifier '#defaultStyle' will be\n   used as a default Style in the whole Software"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "scaleIcons",
        "description": "a default scaling for all used feature icons"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "manageStyles",
        "description": "set this to false to disable style managing. This disables scaleIcons,\n   mobileScaleIcons, feature hiding and adjustable style opacity"
      },
      {
        "nullable": null,
        "types": [
          "ProjectionConfig[]"
        ],
        "spread": false,
        "optional": true,
        "name": "additionalProjections",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "api",
        "description": "API-Options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'ALL'",
        "defaultRaw": "'ALL'",
        "name": "loadingStrategy",
        "description": "global loading strategy. Can have the values 'BBOX' or 'ALL'."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "ignoreLayerAvailability",
        "description": "if set all layers are added to the map, regardless of their\n   available config option"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "cssFile",
        "description": "a cssFile to load and insert in the head dynamically."
      },
      {
        "nullable": null,
        "types": [
          "Color[]"
        ],
        "spread": false,
        "optional": true,
        "name": "cssTemplate",
        "description": "if 3 colors are given, the colors used in the text of the loaded cssFile will be\n   replaced by this colors. The colors in the cssFile need to be pure red, blue and green."
      },
      {
        "nullable": null,
        "types": [
          "MobileLayoutOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "mobileLayout",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PositioningOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "positioning",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "KineticOptions",
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "kinetic",
        "description": "This influences the DragPan behaviour. If set to false no kinetic\n   options are applied, if not set, the defaults are used."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "MapConfig"
    }
  },
  {
    "__docId__": 102,
    "kind": "typedef",
    "name": "KineticOptions",
    "memberof": "src/configurators/MapConfigurator.js",
    "static": true,
    "longname": "src/configurators/MapConfigurator.js~KineticOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "decay",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "minVelocity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "delay",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "KineticOptions"
    }
  },
  {
    "__docId__": 103,
    "kind": "typedef",
    "name": "ProjectionConfig",
    "memberof": "src/configurators/MapConfigurator.js",
    "static": true,
    "longname": "src/configurators/MapConfigurator.js~ProjectionConfig",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ProjectionConfig"
    }
  },
  {
    "__docId__": 104,
    "kind": "typedef",
    "name": "g4uViewOptions",
    "memberof": "src/configurators/MapConfigurator.js",
    "static": true,
    "longname": "src/configurators/MapConfigurator.js~g4uViewOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "ol.Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "the initial center of the map"
      },
      {
        "nullable": null,
        "types": [
          "ol.Extent"
        ],
        "spread": false,
        "optional": true,
        "name": "extent",
        "description": "the max extent the center can lay in"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "resolution",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "zoom",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "rotation",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "fit",
        "description": "an extent to fit the map initialy to, overwrites center settings"
      },
      {
        "nullable": null,
        "types": [
          "ol.ProjectionLike"
        ],
        "spread": false,
        "optional": true,
        "name": "projection",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "g4uViewOptions"
    }
  },
  {
    "__docId__": 105,
    "kind": "typedef",
    "name": "LayerConfig",
    "memberof": "src/configurators/MapConfigurator.js",
    "static": true,
    "longname": "src/configurators/MapConfigurator.js~LayerConfig",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "baseLayers",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "featureLayers",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "fixedFeatureLayers",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "queryLayers",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "LayerConfig"
    }
  },
  {
    "__docId__": 106,
    "kind": "typedef",
    "name": "MobileLayoutOptions",
    "memberof": "src/configurators/MapConfigurator.js",
    "static": true,
    "longname": "src/configurators/MapConfigurator.js~MobileLayoutOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "mediaQueries",
        "description": "these will enable the mobile layout including removing the g4u-desktop class from\n   the ol-viewport and adding the g4u-mobile class"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "scaleIcons",
        "description": "a value to scale all icons by"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "animations",
        "description": "if animations should be disabled"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "hitTolerance",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "MobileLayoutOptions"
    }
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "MapConfigurator",
    "memberof": "src/configurators/MapConfigurator.js",
    "static": true,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/configurators/MapConfigurator.js",
    "importStyle": "{MapConfigurator}",
    "description": "This class configures a map once the configureMap method is called.\nconfigureMap initializes the map and can only be called once.\nit delegates the configureUI and configureLayers to the {{UIConfigurator}} and {{LayerConfigurator}} classes.",
    "lineNumber": 94,
    "interface": false
  },
  {
    "__docId__": 108,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/configurators/MapConfigurator.js~MapConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "map_",
    "memberof": "src/configurators/MapConfigurator.js~MapConfigurator",
    "static": false,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator#map_",
    "access": "private",
    "description": "",
    "lineNumber": 104,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "layerConfigurator_",
    "memberof": "src/configurators/MapConfigurator.js~MapConfigurator",
    "static": false,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator#layerConfigurator_",
    "access": "private",
    "description": "",
    "lineNumber": 110,
    "type": {
      "nullable": null,
      "types": [
        "LayerConfigurator"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "UIConfigurator_",
    "memberof": "src/configurators/MapConfigurator.js~MapConfigurator",
    "static": false,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator#UIConfigurator_",
    "access": "private",
    "description": "",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "UIConfigurator"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "firstRun_",
    "memberof": "src/configurators/MapConfigurator.js~MapConfigurator",
    "static": false,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator#firstRun_",
    "access": "private",
    "description": "",
    "lineNumber": 127,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "configureLayers",
    "memberof": "src/configurators/MapConfigurator.js~MapConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator#configureLayers",
    "access": "public",
    "description": "Delegate call to {{LayerConfigurator}}",
    "lineNumber": 134,
    "params": [],
    "return": null
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "configureUI",
    "memberof": "src/configurators/MapConfigurator.js~MapConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator#configureUI",
    "access": "public",
    "description": "Delegate call to {{UIConfigurator}}",
    "lineNumber": 142,
    "params": [],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "configureMap",
    "memberof": "src/configurators/MapConfigurator.js~MapConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/MapConfigurator.js~MapConfigurator#configureMap",
    "access": "public",
    "description": "",
    "lineNumber": 149,
    "params": [],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/configurators/Positioning.js",
    "content": "import $ from 'jquery'\nimport uniq from 'lodash/uniq'\n\nimport { cssClasses } from '../globals'\nimport { mixinAsClass } from '../utilities'\nimport { ListenerOrganizerMixin } from '../ListenerOrganizerMixin'\n\n/**\n * This describes the floating directions of an element. It can be an array, then it will move from the center to the\n * first specified direction and after that it moves in the second direction. If it is set to 'fixed' it is not\n * positioned via Positioning.\n * @typedef {string[]|string} Float\n */\n\n/**\n * @typedef {Object} HideableElement\n * @property {Control} control\n * @property {number} importance\n * @property {number} order\n * @property {Float} [float] first and second direction or special value 'fixed'\n * @property {HideableElement[]} [hideableChildren]\n */\n\n/**\n * @typedef {HideableElement} PositionedElement\n * @property {string[]} float first and second direction or special value 'fixed'\n * @property {number} minWidth\n * @property {number} minHeight\n * @property {{width: number, height: number}} size\n */\n\n/**\n * @typedef {object} PositioningOptions\n * @property {number} [padding=5]\n * @property {number} [spacing=10]\n * @property {HTMLElement} viewport\n */\n\nexport class Positioning extends mixinAsClass(ListenerOrganizerMixin) {\n  /**\n   * @param {PositioningOptions} options\n   */\n  constructor (options) {\n    super()\n    /**\n     * @type {jQuery|HTMLElement}\n     * @private\n     */\n    this.$viewport_ = $(options.viewport)\n\n    /**\n     * The padding between the controls\n     * @type {number}\n     * @private\n     */\n    this.padding_ = options.padding || 5\n\n    /**\n     * The space between the controls and the edges of the map\n     * @type {number}\n     * @private\n     */\n    this.spacing_ = options.spacing || 10\n\n    /**\n     * The hidden controle\n     * @type {jQuery}\n     * @private\n     */\n    this.hidden$Elements_ = []\n\n    this.init()\n  }\n\n  init () {\n    this.detachAllListeners()\n\n    /**\n     * @type {HideableElement[]}\n     * @private\n     */\n    this.all_ = []\n\n    /**\n     * All Controls stored according their position on the map\n     * @type {object}\n     * @private\n     */\n    this.corners_ = {\n      'left': {\n        'top': {\n          counterclockwise: [],\n          clockwise: []\n        },\n        'bottom': {\n          counterclockwise: [],\n          clockwise: []\n        }\n      },\n      'right': {\n        'top': {\n          counterclockwise: [],\n          clockwise: []\n        },\n        'bottom': {\n          counterclockwise: [],\n          clockwise: []\n        }\n      }\n    }\n\n    /**\n     * This number tracks the order in which controls are added\n     * @type {number}\n     * @private\n     */\n    this.order_ = 0\n  }\n\n  getArray_ (float) {\n    let x, y, direction\n    switch (float[0]) {\n      case 'top':\n        y = 'top'\n        x = float[1]\n        if (x === 'left') {\n          direction = 'clockwise'\n        } else if (x === 'right') {\n          direction = 'counterclockwise'\n        }\n        break\n      case 'right':\n        x = 'right'\n        y = float[1]\n        if (y === 'top') {\n          direction = 'clockwise'\n        } else if (y === 'bottom') {\n          direction = 'counterclockwise'\n        }\n        break\n      case 'bottom':\n        y = 'bottom'\n        x = float[1]\n        if (x === 'left') {\n          direction = 'counterclockwise'\n        } else {\n          direction = 'clockwise'\n        }\n        break\n      case 'left':\n        x = 'left'\n        y = float[1]\n        if (y === 'top') {\n          direction = 'counterclockwise'\n        } else {\n          direction = 'clockwise'\n        }\n    }\n\n    return this.corners_[x][y][direction]\n  }\n\n  /**\n   * Add a control to the positioning.\n   * @param {Control} control\n   * @param {Object} [parentMeta] the meta information of the parent control\n   */\n  addControl (control, parentMeta) {\n    // check if control needs to be positioned\n    if (control.get$Element().parents().hasClass('ol-viewport')) {\n      if (!parentMeta || !parentMeta.control.isWindowed()) {\n        // gather metainformation\n        /** @type {HideableElement} */\n        let metaElem = {\n          control,\n          order: this.order_++,\n          importance: control.getImportance()\n        }\n\n        control.on('change:visible', e => {\n          let index = this.hidden$Elements_.indexOf(control.get$Element())\n          if (e.oldValue && index > -1) {\n            this.hidden$Elements_.splice(index, 1)\n          }\n          this.positionElements()\n        })\n\n        // repositioning if collapsible elements changes size\n        this.listenAt(control).on('change:size', () => {\n          this.positionElements()\n        })\n\n        if (!parentMeta) {\n          metaElem.float = metaElem.control.getFloat() || ['top', 'left']\n\n          if (metaElem.float === 'fixed') {\n            return\n          }\n\n          this.getArray_(metaElem.float).push(metaElem)\n\n          this.all_.push(metaElem)\n\n          if (metaElem.control.getControls) {\n            metaElem.hideableChildren = []\n            for (let child of metaElem.control.getControls()) {\n              this.addControl(child, metaElem)\n            }\n          }\n        } else if (!parentMeta.control.isWindowed()) {\n          metaElem.importance = control.getImportance()\n          parentMeta.hideableChildren.push(metaElem)\n          this.all_.push(metaElem)\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets the element in a corner\n   * @param {string} x\n   * @param {string} y\n   * @returns {HideableElement}\n   * @private\n   */\n  getCorner_ (x, y) {\n    let cwi = 0\n    let ccwi = 0\n\n    let cwElem = this.corners_[x][y].clockwise[cwi++]\n    let ccwElem = this.corners_[x][y].counterclockwise[ccwi++]\n\n    while (cwElem && !Positioning.isElemVisible_(cwElem)) {\n      cwElem = this.corners_[x][y].clockwise[cwi++]\n    }\n\n    while (ccwElem && !Positioning.isElemVisible_(ccwElem)) {\n      ccwElem = this.corners_[x][y].counterclockwise[ccwi++]\n    }\n\n    if (cwElem || ccwElem) {\n      if (!cwElem) {\n        return ccwElem\n      } else if (!ccwElem) {\n        return cwElem\n      } else {\n        if (cwElem.order < ccwElem.order) {\n          return cwElem\n        } else {\n          return ccwElem\n        }\n      }\n    }\n  }\n\n  static isElemVisible_ (elem) {\n    return elem.control.get$Element().is(':visible')\n  }\n\n  /**\n   * Gets all elements at one edge\n   * @param side\n   * @returns {*|Array.<Element>}\n   * @private\n   */\n  getEdge_ (side) {\n    let x1, x2, y1, y2\n    if (side === 'top') {\n      x1 = 'left'\n      x2 = 'right'\n      y1 = y2 = 'top'\n    } else if (side === 'right') {\n      x1 = x2 = 'right'\n      y1 = 'top'\n      y2 = 'bottom'\n    } else if (side === 'bottom') {\n      x1 = 'right'\n      x2 = 'left'\n      y1 = y2 = 'bottom'\n    } else if (side === 'left') {\n      x1 = x2 = 'left'\n      y1 = 'bottom'\n      y2 = 'top'\n    }\n\n    let clockwise = this.corners_[x1][y1].clockwise.filter(Positioning.isElemVisible_)\n    let counterclockwise = this.corners_[x2][y2].counterclockwise.filter(Positioning.isElemVisible_)\n\n    let arr = []\n    let c = this.getCorner_(x1, y1)\n    if (c) {\n      arr.push(c)\n    }\n    arr.push(...clockwise)\n    arr.push(...counterclockwise)\n    c = this.getCorner_(x2, y2)\n    if (c) {\n      arr.push(c)\n    }\n    return uniq(arr)\n  }\n\n  /**\n   * Initializes all elements\n   * @private\n   */\n  beforePositioning_ () {\n    let elems = new Set(this.all_)\n\n    this.hidden$Elements_.forEach($e => $e.removeClass(cssClasses.hidden))\n    this.hidden$Elements_ = []\n\n    /**\n     * @param {PositionedElement} elem\n     */\n    let forEach = elem => {\n      if (Positioning.isElemVisible_(elem)) {\n        if (elem.control.beforePositioning) {\n          elem.control.beforePositioning()\n        }\n\n        if (elem.hideableChildren) {\n          for (let child of elem.hideableChildren) {\n            forEach(child)\n          }\n        }\n\n        elem.control.get$Element().position({ top: 0, left: 0 })\n        if (elem.control.release) {\n          elem.control.release('height')\n          elem.control.release('width')\n        }\n        elem.size = this.measureExpandedElement_(elem)\n      }\n\n      elems.delete(elem)\n    }\n\n    for (let elem of elems) {\n      forEach(elem)\n    }\n  }\n\n  /**\n   * called after positioning\n   * @private\n   */\n  afterPositioning_ () {\n    let elems = new Set(this.all_)\n\n    /**\n     * @param {PositionedElement} elem\n     */\n    let forEach = elem => {\n      if (elem.control.afterPositioning) {\n        elem.control.afterPositioning()\n      }\n\n      if (elem.hideableChildren) {\n        for (let child of elem.hideableChildren) {\n          forEach(child)\n        }\n      }\n\n      elems.delete(elem)\n    }\n\n    for (let elem of elems) {\n      forEach(elem)\n    }\n  }\n\n  /**\n   * Calculates summed length of all elements on one edge\n   * @param {PositionedElement[]} edgeElems\n   * @param {string} dim\n   * @returns {number}\n   * @private\n   */\n  calculateLength_ (edgeElems, dim) {\n    if (edgeElems.length === 0) {\n      return 0\n    }\n\n    let length = this.padding_ * 2\n\n    let firstElement = true\n\n    for (let elem of edgeElems) {\n      length += elem.size[dim]\n      if (firstElement) {\n        firstElement = false\n      } else {\n        length += this.spacing_\n      }\n    }\n\n    return length\n  }\n\n  calculateSide_ (side, availableSpace) {\n    let dim = (side === 'top' || side === 'bottom') ? 'width' : 'height'\n    let elems = this.getEdge_(side)\n    let wantedSpace = this.calculateLength_(elems, dim)\n    let changed = false\n\n    while (wantedSpace > availableSpace) {\n      if (this.squeezeElements_(elems, dim, wantedSpace - availableSpace)) {\n        break\n      }\n      this.hideLeastImportant_(elems)\n      elems = this.getEdge_(side)\n      wantedSpace = this.calculateLength_(elems, dim)\n      changed = true\n    }\n    return changed\n  }\n\n  positionElementsCorner_ (x, y) {\n    let corner = this.getCorner_(x, y)\n    if (corner) {\n      let xLength = this.padding_\n      let yLength = this.padding_\n      let $elem = corner.control.get$Element()\n\n      $elem.removeClass(cssClasses.hidden).css({[x]: xLength, [y]: yLength})\n\n      xLength += $elem.outerWidth() + this.spacing_\n      yLength += $elem.outerHeight() + this.spacing_\n\n      let xDirection, yDirection\n\n      if (x === 'left' && y === 'top') {\n        xDirection = 'clockwise'\n        yDirection = 'counterclockwise'\n      } else if (x === 'right' && y === 'top') {\n        xDirection = 'counterclockwise'\n        yDirection = 'clockwise'\n      } else if (x === 'right' && y === 'bottom') {\n        xDirection = 'clockwise'\n        yDirection = 'counterclockwise'\n      } else if (x === 'left' && y === 'bottom') {\n        xDirection = 'counterclockwise'\n        yDirection = 'clockwise'\n      }\n\n      // x\n      for (let elem of this.corners_[x][y][xDirection]\n        .filter(el => Positioning.isElemVisible_(el) && el !== corner)) {\n        $elem = elem.control.get$Element()\n        $elem.css({[x]: xLength, [y]: this.padding_})\n        xLength += $elem.outerWidth() + this.spacing_\n      }\n\n      // y\n      for (let elem of this.corners_[x][y][yDirection]\n        .filter(el => Positioning.isElemVisible_(el) && el !== corner)) {\n        $elem = elem.control.get$Element()\n        $elem.css({[x]: this.padding_, [y]: yLength})\n        yLength += $elem.outerHeight() + this.spacing_\n      }\n    }\n  }\n\n  /**\n   * (Re-)Position the controls on the map\n   */\n  positionElements () {\n    let width = this.$viewport_.innerWidth()\n    let height = this.$viewport_.innerHeight()\n\n    this.beforePositioning_()\n\n    // calculation\n    let processSides = new Set(['top', 'left', 'bottom', 'right'])\n\n    while (processSides.size) {\n      if (processSides.has('top')) {\n        if (this.calculateSide_('top', width)) {\n          processSides.add('left')\n          processSides.add('right')\n        }\n\n        processSides.delete('top')\n      }\n\n      if (processSides.has('right')) {\n        if (this.calculateSide_('right', height)) {\n          processSides.add('top')\n          processSides.add('bottom')\n        }\n\n        processSides.delete('right')\n      }\n\n      if (processSides.has('bottom')) {\n        if (this.calculateSide_('bottom', width)) {\n          processSides.add('left')\n          processSides.add('right')\n        }\n\n        processSides.delete('bottom')\n      }\n\n      if (processSides.has('left')) {\n        if (this.calculateSide_('left', height)) {\n          processSides.add('top')\n          processSides.add('bottom')\n        }\n\n        processSides.delete('left')\n      }\n    }\n\n    // positioning\n\n    this.positionElementsCorner_('left', 'top')\n    this.positionElementsCorner_('right', 'top')\n    this.positionElementsCorner_('right', 'bottom')\n    this.positionElementsCorner_('left', 'bottom')\n\n    this.afterPositioning_()\n  }\n\n  /**\n   * Tries to squeeze the elements on one edge to fit the space. Returns true if it did work, false otherwise.\n   * @param {PositionedElement[]} elems\n   * @param {string} side\n   * @param {number} neededSpace\n   * @private\n   * @returns {boolean}\n   */\n  squeezeElements_ (elems, side, neededSpace) {\n    let squeezableElements = []\n\n    function insert (item, x = 0, y = squeezableElements.length) {\n      if (y === x) {\n        squeezableElements.splice(x, 0, item)\n      } else {\n        let p = Math.floor((x + y) / 2)\n        if (item.importance <= squeezableElements[p].importance) {\n          insert(item, x, p)\n        } else {\n          insert(item, p + 1, y)\n        }\n      }\n    }\n\n    /**\n     * @param {PositionedElement[]} elems\n     */\n    function findSqueezables (elems) {\n      for (let elem of elems) {\n        if (elem.control.isSqueezable && elem.control.isSqueezable(side)) {\n          insert(elem)\n        }\n        if (elem.hideableChildren) {\n          findSqueezables(elem.hideableChildren)\n        }\n      }\n    }\n\n    findSqueezables(elems)\n\n    for (let elem of squeezableElements) {\n      neededSpace -= elem.control.squeezeBy(side, neededSpace)\n\n      if (neededSpace <= 0) {\n        return true\n      }\n    }\n\n    for (let elem of squeezableElements) {\n      elem.control.release(side)\n    }\n\n    return false\n  }\n\n  /**\n   * Expands element to maximum size\n   * @param {PositionedElement} elem\n   * @returns {Array}\n   * @private\n   */\n  expandElement_ (elem) {\n    let expanded = []\n\n    if (elem.hideableChildren) {\n      for (let child of elem.hideableChildren) {\n        expanded.push(...this.expandElement_(child))\n      }\n    }\n    if (elem.control.getCollapsible && elem.control.getCollapsible()) {\n      if (elem.control.getCollapsed()) {\n        elem.control.setCollapsed(false, true)\n        expanded.push(elem.control)\n      }\n    }\n\n    return expanded\n  }\n\n  /**\n   * measures size of the element\n   * @param {PositionedElement} elem\n   * @returns {{width: number, height: number}}\n   * @private\n   */\n  measureExpandedElement_ (elem) {\n    // let expanded = this.expandElement_(elem)\n    let $elem = elem.control.get$Element()\n    let size = {width: $elem.outerWidth(), height: $elem.outerHeight()}\n    // for (let exp of expanded) {\n    //   exp.setCollapsed(true, true)\n    // }\n    return size\n  }\n\n  /**\n   * Hides the least important element of the given ones.\n   * @param {PositionedElement[]} elems visible elements\n   * @private\n   */\n  hideLeastImportant_ (elems) {\n    /**\n     * @param {PositionedElement[]} elems\n     * @returns {PositionedElement}\n     */\n    let findLeastImportant = function (elems) {\n      let leastImportant\n      for (let elem of elems) {\n        if (!leastImportant) {\n          leastImportant = elem\n        } else {\n          if (elem.importance < leastImportant.importance) {\n            leastImportant = elem\n          }\n        }\n\n        if (elem.hideableChildren) {\n          let hideableChildren = elem.hideableChildren.filter(el => Positioning.isElemVisible_)\n          if (hideableChildren.length) {\n            let leastImportantChild = findLeastImportant(hideableChildren)\n            if (leastImportantChild.importance < leastImportant.importance) {\n              leastImportant = leastImportantChild\n            }\n          }\n        }\n      }\n      return leastImportant\n    }\n\n    let leastImportant = findLeastImportant(elems)\n    leastImportant.control.get$Element().addClass(cssClasses.hidden)\n    this.hidden$Elements_.push(leastImportant.control.get$Element())\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/configurators/Positioning.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "typedef",
    "name": "Float",
    "memberof": "src/configurators/Positioning.js",
    "static": true,
    "longname": "src/configurators/Positioning.js~Float",
    "access": "public",
    "description": "This describes the floating directions of an element. It can be an array, then it will move from the center to the\nfirst specified direction and after that it moves in the second direction. If it is set to 'fixed' it is not\npositioned via Positioning.",
    "type": {
      "types": [
        "string[]",
        "string"
      ],
      "optional": false,
      "name": "Float"
    }
  },
  {
    "__docId__": 118,
    "kind": "typedef",
    "name": "HideableElement",
    "memberof": "src/configurators/Positioning.js",
    "static": true,
    "longname": "src/configurators/Positioning.js~HideableElement",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Control"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "importance",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "order",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": true,
        "name": "float",
        "description": "first and second direction or special value 'fixed'"
      },
      {
        "nullable": null,
        "types": [
          "HideableElement[]"
        ],
        "spread": false,
        "optional": true,
        "name": "hideableChildren",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "HideableElement"
    }
  },
  {
    "__docId__": 119,
    "kind": "typedef",
    "name": "PositionedElement",
    "memberof": "src/configurators/Positioning.js",
    "static": true,
    "longname": "src/configurators/Positioning.js~PositionedElement",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "float",
        "description": "first and second direction or special value 'fixed'"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "minWidth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "minHeight",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{width: number, height: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "HideableElement"
      ],
      "optional": false,
      "name": "PositionedElement"
    }
  },
  {
    "__docId__": 120,
    "kind": "typedef",
    "name": "PositioningOptions",
    "memberof": "src/configurators/Positioning.js",
    "static": true,
    "longname": "src/configurators/Positioning.js~PositioningOptions",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5",
        "defaultRaw": 5,
        "name": "padding",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "10",
        "defaultRaw": 10,
        "name": "spacing",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "viewport",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "PositioningOptions"
    }
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/configurators/UIConfigurator.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport {Positioning} from './Positioning'\n\nimport {Move} from '../Move'\nimport {FeaturePopup} from '../FeaturePopup'\nimport {FeatureTooltip} from '../FeatureTooltip'\n\nimport {Shield} from '../html/Shield'\n\nimport {ControlFactory} from './ControlFactory'\n\nimport {Debug} from '../Debug'\n\nimport {copyDeep} from '../utilitiesObject'\nimport {checkFor, getConfig, urlDirname, urlJoin} from '../utilities'\n\nimport {MeasurementButton} from '../controls/MeasurementButton'\nimport {PrintButton} from '../controls/PrintButton'\n\nimport {cssClasses} from '../globals'\n\nimport {FeatureSelect} from '../interactions/FeatureSelect'\n\nimport {parseCSSColor} from 'csscolorparser'\nimport {FunctionCallBuffer} from '../FunctionCallBuffer'\nimport {ShowWMSFeatureInfo} from '../ShowWMSFeatureInfo'\n\nimport {History} from '../html/History'\n\n/**\n * This class configures the UI of a map according to its mapconfig\n */\nexport class UIConfigurator {\n  /**\n   * @param {G4UMap} map\n   */\n  constructor (map) {\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = map\n    this.map_.on('change:mapConfig', this.configureUI.bind(this))\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.initialized_ = false\n\n    /**\n     * Counts how many cssFiles are getting loaded\n     * @type {number}\n     * @private\n     */\n    this.pending_ = 0\n  }\n\n  /**\n   * Fill the given css String with the rigth colors\n   * @param {string} css\n   * @param {Color[]} colors\n   * @returns {string}\n   */\n  static templateCSS (css, colors) {\n    // find the used index of the color template\n    let colorTemplateIndex = (c) => {\n      let channels = 0\n      let index = -1\n      for (let i = 0; i < 3; i++) {\n        if (c[i] !== 0) {\n          channels++\n          index = i\n        }\n      }\n      if (channels > 1) {\n        return -1\n      } else {\n        return index\n      }\n    }\n\n    let regExp = /(rgba?\\([^)]*\\))|(#[0-9a-f]{6})/g\n\n    colors = colors.map(parseCSSColor)\n\n    return css.replace(regExp, match => {\n      let templateColor = parseCSSColor(match)\n      let index = colorTemplateIndex(templateColor)\n      if (index > -1) {\n        let aFac = templateColor[3]\n        let cFac = templateColor[index] / 120\n        let newColor = [\n          colors[index][0] * cFac,\n          colors[index][1] * cFac,\n          colors[index][2] * cFac,\n          colors[index][3] * aFac\n        ]\n        return `rgba(${newColor[0]}, ${newColor[1]}, ${newColor[2]}, ${newColor[3]})`\n      }\n      return match\n    })\n  }\n\n  /**\n   * Fixes all urls in the css string to the right path\n   * @param css\n   * @param cssPath\n   * @returns {string}\n   */\n  static fixUrls (css, cssPath) {\n    let dirname = urlDirname(cssPath)\n    return css.replace(/url\\(\"([^\"]*)\"\\)/g, (match, url) => {\n      return `url(\"${urlJoin(dirname, url)}\")`\n    })\n  }\n\n  /**\n   * Loads the from cssFile the given conf (if any is given) and inserts into a style tag in the head of the document\n   * @param {MapConfig} conf\n   * @returns {Promise}\n   */\n  loadCSS (conf) {\n    return new Promise(resolve => {\n      if (conf.hasOwnProperty('cssFile')) {\n        const id = 'g4u-css'\n        let $style = $('#' + id)\n\n        if ($style.length === 0) {\n          $style = $('<style>', {\n            'id': id\n          })\n          $('head').append($style)\n        }\n\n        const same = this.cssFile_ === conf.cssFile\n        if (!same) {\n          $.ajax(conf.cssFile).done(data => {\n            $style.empty()\n            data = UIConfigurator.fixUrls(data, conf.cssFile)\n            if (conf.hasOwnProperty('cssTemplate')) {\n              this.map_.set('cssTemplateFile', data)\n              $style.html(UIConfigurator.templateCSS(data, conf.cssTemplate))\n            } else {\n              $style.html(data)\n            }\n            resolve()\n          }).fail(() => {\n            Debug.error('Failed to load css file.')\n            resolve()\n          })\n          this.cssFile_ = conf.cssFile\n        } else {\n          if (conf.hasOwnProperty('cssTemplate')) {\n            $style.html(UIConfigurator.templateCSS(this.map_.get('cssTemplateFile'), conf.cssTemplate))\n          }\n          resolve()\n        }\n      } else {\n        resolve()\n      }\n    })\n  }\n\n  /**\n   * This functions is called the first time the configureUI function is called\n   * @param {MapConfig} mapConfigCopy\n   * @private\n   */\n  initialize_ (mapConfigCopy) {\n    //\n    // Control positioning\n    //\n\n    /**\n     * @type {PositioningOptions}\n     */\n    let positioningOptions = mapConfigCopy.positioning || {}\n    positioningOptions.viewport = this.map_.getViewport()\n\n    this.map_.set('controlPositioning', new Positioning(positioningOptions))\n\n    let positionCallBuffer = new FunctionCallBuffer(() => {\n      return this.map_.get('controlPositioning').positionElements()\n    })\n\n    this.map_.on('ready', () => positionCallBuffer.call())\n\n    this.map_.asSoonAs('ready', true, () => {\n      this.map_.on('resize', () => positionCallBuffer.call())\n      this.map_.on('ready:ui', () => {\n        if (this.map_.get('ready:ui')) {\n          positionCallBuffer.call()\n        }\n      })\n      this.map_.on('change:mobile', () => positionCallBuffer.call())\n\n      this.map_.on('ready:layers', () => {\n        positionCallBuffer.call()\n        this.map_.getLayerGroup().forEachOn('change:visible', () => setTimeout(() => positionCallBuffer.call(), 200))\n      })\n\n      this.map_.getLayerGroup().forEachOn('change:visible', () => setTimeout(() => positionCallBuffer.call(), 200))\n    })\n\n    //\n    //  Responsiveness / Mobile Layout\n    //\n\n    this.map_.set('mobile', false)\n    $(this.map_.getTarget()).children().addClass(cssClasses.desktop)\n\n    this.map_.set('scaleIcons', mapConfigCopy.scaleIcons)\n\n    this.map_.once('ready', () => {\n      this.map_.set('desktopLayout', {\n        animations: this.map_.get('move').getAnimations(),\n        scaleIcons: this.map_.get('scaleIcons'),\n        hitTolerance: this.map_.get('hitTolerance')\n      })\n    })\n\n    let checkMobileLayoutQuery = () => {\n      /**\n       * @type {MobileLayoutOptions}\n       */\n      let mobileLayout = this.map_.get('mobileLayout')\n\n      if (mobileLayout && mobileLayout.mediaQueries && window.matchMedia) {\n        this.map_.set('mobile', mobileLayout.mediaQueries.some(query => {\n          return window.matchMedia(query).matches\n        }))\n      }\n    }\n\n    this.map_.on('change:mobile', this.getHandleMobileChange_())\n\n    //\n    // Enabling/Disabling responsiveness\n    //\n\n    let oldResponsive\n\n    let onChangeResponsive = () => {\n      if (this.map_.get('responsive') !== oldResponsive) {\n        if (this.map_.get('responsive')) {\n          checkMobileLayoutQuery()\n          this.map_.on('resize', checkMobileLayoutQuery)\n        } else {\n          this.map_.un('resize', checkMobileLayoutQuery)\n        }\n        oldResponsive = this.map_.get('responsive')\n      }\n    }\n\n    this.map_.once('ready', onChangeResponsive)\n\n    this.map_.on('change:responsive', onChangeResponsive)\n\n    this.map_.on('ready:ui', onChangeResponsive)\n\n    this.initialized_ = true\n  }\n\n  applyLayout (layout) {\n    if (layout.hasOwnProperty('animations')) {\n      this.map_.get('move').setAnimations(layout.animations)\n    }\n\n    if (layout.hasOwnProperty('scaleIcons')) {\n      this.map_.set('scaleIcons', layout.scaleIcons)\n      this.map_.get('styling').setGlobalIconScale(layout.scaleIcons)\n      this.map_.getLayerGroup().recursiveForEach(l => {\n        if (l.getVisible()) {\n          l.changed()\n        }\n      })\n    }\n\n    if (layout.hasOwnProperty('hitTolerance')) {\n      this.map_.set('hitTolerance', layout.hitTolerance)\n    }\n\n    let featurePopup = this.map_.get('featurePopup')\n    let wmsFeatureInfo = this.map_.get('showWMSFeatureInfo')\n\n    let restoreWmsFeatureInfoPoint = wmsFeatureInfo && wmsFeatureInfo.getPointVisible()\n\n    if (featurePopup && featurePopup.getVisible()) {\n      featurePopup.setVisible(false)\n      setTimeout(() => {\n        featurePopup.setVisible(true)\n        if (restoreWmsFeatureInfoPoint) {\n          wmsFeatureInfo.setPointVisible(true)\n        }\n      }, 0)\n    }\n  }\n\n  getHandleMobileChange_ () {\n    if (!this.handleMobileChange__) {\n      this.handleMobileChange__ = () => {\n        if (this.map_.get('mobile')) {\n          $(this.map_.getTarget()).children().addClass(cssClasses.mobile)\n          $(this.map_.getTarget()).children().removeClass(cssClasses.desktop)\n\n          this.applyLayout(this.map_.get('mobileLayout'))\n        } else {\n          $(this.map_.getTarget()).children().addClass(cssClasses.desktop)\n          $(this.map_.getTarget()).children().removeClass(cssClasses.mobile)\n\n          this.applyLayout(this.map_.get('desktopLayout'))\n        }\n      }\n    }\n    return this.handleMobileChange__\n  }\n\n  /**\n   * @public\n   */\n  configureUI () {\n    this.map_.set('ready:ui', false)\n    this.pending_++\n\n    let mapConfigCopy = copyDeep(this.map_.get('mapConfig'))\n\n    if (!this.initialized_) {\n      this.initialize_(mapConfigCopy)\n    }\n\n    let curConfig\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                              Load CSS if neccessary                                      //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    this.loadCSS(mapConfigCopy).then(() => {\n      this.pending_--\n      if (this.pending_ === 0) {\n        // clear\n        this.map_.removeControls()\n        this.map_.controlsByName = {}\n        this.map_.removeInteractions()\n\n        this.map_.get('controlPositioning').init()\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                           Move Class (before mobileLayout)                               //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        let moveOptions = copyDeep(getConfig(mapConfigCopy, 'move'))\n        moveOptions.map = this.map_\n\n        this.map_.set('move', new Move(moveOptions))\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                     HTML-Shield                                          //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        if (!this.map_.get('shield')) {\n          this.map_.set('shield', new Shield({ map: this.map_ }))\n        }\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                MobileLayoutMediaQuery                                    //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        this.map_.set('mobileLayout', mapConfigCopy.mobileLayout)\n\n        this.map_.set('responsive', this.map_.get('responsive') || !!this.map_.get('mobileLayout'))\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                       MODULES                                            //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        // should be before adding controls so the controls don't have to wait for any other ui elements\n\n        for (let module of this.map_.getModules()) {\n          module.configureUI(mapConfigCopy)\n        }\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                       Controls                                           //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        if (!this.controlFactory) {\n          this.controlFactory = new ControlFactory({\n            map: this.map_,\n            localiser: this.map_.get('localiser')\n          })\n        } else {\n          this.controlFactory.setLocaliser(this.map_.get('localiser'))\n        }\n\n        this.controlFactory.addControls()\n\n        let deactivate = control => {\n          if (control.setActive) {\n            control.setActive(false)\n          }\n          if (control.getControls) {\n            control.getControls().forEach(deactivate)\n          }\n        }\n\n        this.map_.on('change:mobile', () => this.map_.getControls().forEach(deactivate))\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                     Interactions                                         //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        if (checkFor(mapConfigCopy, 'interactions')) {\n          if (checkFor(mapConfigCopy.interactions, 'doubleClickZoom')) {\n            this.map_.addDefaultInteraction('dblclick', new ol.interaction.DoubleClickZoom())\n          }\n\n          if (checkFor(mapConfigCopy.interactions, 'dragPan')) {\n            if (mapConfigCopy.kinetic !== false) {\n              let decay = -0.002\n              let minVelocity = 0.02\n              let delay = 100\n              if (typeof mapConfigCopy.kinetic === 'object') {\n                decay = mapConfigCopy.kinetic.decay || decay\n                minVelocity = mapConfigCopy.kinetic.minVelocity || minVelocity\n                delay = mapConfigCopy.kinetic.delay || delay\n              }\n              this.map_.addDefaultInteraction('drag', new ol.interaction.DragPan({\n                kinetic: new ol.Kinetic(decay, minVelocity, delay)\n              }))\n            } else {\n              this.map_.addDefaultInteraction('drag', new ol.interaction.DragPan())\n            }\n          }\n\n          if (checkFor(mapConfigCopy.interactions, 'dragRotate')) {\n            // using default condition: ol.events.condition.altShiftKeysOnly\n            this.map_.addDefaultInteraction('altShiftDrag', new ol.interaction.DragRotate())\n          }\n\n          if (checkFor(mapConfigCopy.interactions, 'dragZoom')) {\n            // using default condition: ol.events.condition.shiftKeyOnly\n            this.map_.addDefaultInteraction('shiftDrag', new ol.interaction.DragZoom())\n          }\n\n          if (checkFor(mapConfigCopy.interactions, 'keyboardPan')) {\n            this.map_.addDefaultInteraction('keyboard', new ol.interaction.KeyboardPan())\n          }\n\n          if (checkFor(mapConfigCopy.interactions, 'keyboardZoom')) {\n            this.map_.addDefaultInteraction('keyboard', new ol.interaction.KeyboardZoom())\n          }\n\n          if (checkFor(mapConfigCopy.interactions, 'mouseWheelZoom')) {\n            this.map_.addDefaultInteraction('mouseWheel', new ol.interaction.MouseWheelZoom())\n          }\n\n          if (checkFor(mapConfigCopy.interactions, 'pinchRotate')) {\n            this.map_.addDefaultInteraction('pinchRotate', new ol.interaction.PinchRotate())\n          }\n\n          if (checkFor(mapConfigCopy.interactions, 'pinchZoom')) {\n            this.map_.addDefaultInteraction('pinchZoom', new ol.interaction.PinchZoom())\n          }\n        }\n\n        this.map_.addDefaultInteraction('singleclick', new FeatureSelect({\n          condition: e => ol.events.condition.singleClick(e) && $(e.originalEvent.target).is('canvas'),\n          style: null,\n          multi: true\n        }))\n\n        let moveInteraction = new FeatureSelect({\n          condition: e => ol.events.condition.pointerMove(e) && $(e.originalEvent.target).is('canvas'),\n          style: null,\n          multi: true\n        })\n        this.map_.addDefaultInteraction('pointermove', moveInteraction)\n\n        let $viewport = $(this.map_.getViewport())\n\n        // if the map is left the features should get deselected\n        $viewport.find('canvas').on('mouseleave', e => {\n          if (!$(e.relatedTarget).is('canvas')) {\n            if (moveInteraction.getFeatures().getLength() > 0) {\n              moveInteraction.deselect(moveInteraction.getFeatures().getArray())\n            }\n          }\n        })\n\n        // hitTolerance\n        let updateHitTolerance = () => {\n          let hitTolerance = this.map_.get('hitTolerance')\n          for (let interaction of this.map_.getInteractions().getArray()) {\n            if (interaction.setHitTolerance) {\n              interaction.setHitTolerance(hitTolerance)\n            }\n          }\n        }\n\n        this.map_.set('hitTolerance', mapConfigCopy.hitTolerance || 0)\n\n        updateHitTolerance()\n        this.map_.on('change:hitTolerance', updateHitTolerance)\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                     Feature Popups                                       //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        let featurePopup = this.map_.get('featurePopup')\n        if (featurePopup) {\n          featurePopup.setMap(null)\n        }\n        curConfig = getConfig(mapConfigCopy, 'featurePopup')\n        if (curConfig) {\n          featurePopup = new FeaturePopup(curConfig)\n          featurePopup.setMap(this.map_)\n          this.map_.set('featurePopup', featurePopup)\n        } else {\n          this.map_.set('featurePopup', undefined)\n        }\n\n        let featureTooltip = this.map_.get('featureTooltip')\n        if (featureTooltip) {\n          featureTooltip.setMap(null)\n        }\n        curConfig = getConfig(mapConfigCopy, 'featureTooltip')\n        if (curConfig) {\n          featureTooltip = new FeatureTooltip(curConfig)\n          featureTooltip.setMap(this.map_)\n          this.map_.set('featureTooltip', featureTooltip)\n        } else {\n          this.map_.set('featureTooltip', undefined)\n        }\n\n        let showWMSFeatureInfo = this.map_.get('showWMSFeatureInfo')\n        if (showWMSFeatureInfo) {\n          showWMSFeatureInfo.setMap(null)\n        }\n        curConfig = getConfig(mapConfigCopy, 'showWMSFeatureInfo')\n        if (curConfig) {\n          showWMSFeatureInfo = new ShowWMSFeatureInfo(curConfig)\n          showWMSFeatureInfo.setMap(this.map_)\n          this.map_.set('showWMSFeatureInfo', showWMSFeatureInfo)\n        } else {\n          this.map_.set('showWMSFeatureInfo', undefined)\n        }\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                    Custom History                                        //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        this.map_.set('history', new History())\n\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                     UserExit (2/2)                                       //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        if (this.map_.get('userActionTracking')) {\n          let map = this.map_\n\n          this.map_.on('moveend', function () {\n            map.dispatchEvent({\n              type: 'userActionTracking',\n              action: 'move'\n            })\n          })\n\n          this.map_.get('baseLayers').getLayers().forEach(function (layer) {\n            layer.on('change:visible', function () {\n              if (layer.getVisible()) { // only if changed to visible\n                map.dispatchEvent({\n                  type: 'userActionTracking',\n                  action: 'baseLayerChange',\n                  value: layer.get('title')\n                })\n              }\n            })\n          })\n\n          this.map_.get('featureLayers').recursiveForEach(function (layer) {\n            layer.on('change:visible', function () {\n              if (layer.getVisible()) { // only if changed to visible\n                map.dispatchEvent({\n                  type: 'userActionTracking',\n                  action: 'featureLayerChange',\n                  value: layer.get('title')\n                })\n              }\n            })\n          })\n\n          if (this.map_.get('featurePopup')) {\n            this.map_.get('featurePopup').on('change:visible', function () {\n              if (this.getVisible()) { // only if changed to visible\n                map.dispatchEvent({\n                  type: 'userActionTracking',\n                  action: 'popupOpen',\n                  value: this.getFeature().get('name')\n                })\n              }\n            })\n          }\n\n          for (let module of this.map_.getModules()) {\n            module.enableUserActionTracking()\n          }\n\n          this.map_.getControls().forEach(function (control) {\n            if (control instanceof PrintButton) {\n              control.on('click', function () {\n                map.dispatchEvent({\n                  type: 'userActionTracking',\n                  action: 'print'\n                })\n              })\n            }\n\n            if (control instanceof MeasurementButton) {\n              if (control.getType() === 'LineString') {\n                control.on('measurement', function () {\n                  map.dispatchEvent({\n                    type: 'userActionTracking',\n                    action: 'measureLine'\n                  })\n                })\n              } else if (control.getType() === 'Polygon') {\n                control.on('measurement', function () {\n                  map.dispatchEvent({\n                    type: 'userActionTracking',\n                    action: 'measureArea'\n                  })\n                })\n              }\n            }\n          })\n        }\n        this.map_.set('ready:ui', true)\n      }\n    }).catch(function (reason) {\n      Debug.error(reason)\n    })\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/configurators/UIConfigurator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "class",
    "name": "UIConfigurator",
    "memberof": "src/configurators/UIConfigurator.js",
    "static": true,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/configurators/UIConfigurator.js",
    "importStyle": "{UIConfigurator}",
    "description": "This class configures the UI of a map according to its mapconfig",
    "lineNumber": 35,
    "interface": false
  },
  {
    "__docId__": 123,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "map_",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#map_",
    "access": "private",
    "description": "",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "initialized_",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#initialized_",
    "access": "private",
    "description": "",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "pending_",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#pending_",
    "access": "private",
    "description": "Counts how many cssFiles are getting loaded",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "templateCSS",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator.templateCSS",
    "access": "public",
    "description": "Fill the given css String with the rigth colors",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "css",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Color[]"
        ],
        "spread": false,
        "optional": false,
        "name": "colors",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "fixUrls",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator.fixUrls",
    "access": "public",
    "description": "Fixes all urls in the css string to the right path",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "css",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cssPath",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "loadCSS",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#loadCSS",
    "access": "public",
    "description": "Loads the from cssFile the given conf (if any is given) and inserts into a style tag in the head of the document",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MapConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "conf",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "cssFile_",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#cssFile_",
    "access": "public",
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "initialize_",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#initialize_",
    "access": "private",
    "description": "This functions is called the first time the configureUI function is called",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "MapConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "mapConfigCopy",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "applyLayout",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#applyLayout",
    "access": "public",
    "description": null,
    "lineNumber": 267,
    "undocument": true,
    "params": [
      {
        "name": "layout",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "getHandleMobileChange_",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#getHandleMobileChange_",
    "access": "public",
    "description": null,
    "lineNumber": 302,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "handleMobileChange__",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#handleMobileChange__",
    "access": "public",
    "description": null,
    "lineNumber": 304,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "configureUI",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#configureUI",
    "access": "public",
    "description": "",
    "lineNumber": 324,
    "params": [],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "controlFactory",
    "memberof": "src/configurators/UIConfigurator.js~UIConfigurator",
    "static": false,
    "longname": "src/configurators/UIConfigurator.js~UIConfigurator#controlFactory",
    "access": "public",
    "description": null,
    "lineNumber": 390,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/controls/ActivatableMixin.js",
    "content": "export class ActivatableMixin {\n  /**\n   * @param {object} options\n   * @param {boolean} options.active\n   */\n  initialize (options = {}) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.activate_ = options.active === true\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = false\n  }\n\n  activateOnMapChange () {\n    this.setActive(this.activate_)\n  }\n\n  /**\n   * @param {boolean} active\n   */\n  setActive (active) {\n    let oldValue = this.active_\n    if (oldValue !== active) {\n      this.active_ = active\n      let changeEvent = {\n        type: 'change:active',\n        oldValue: oldValue\n      }\n      this.dispatchEvent(changeEvent)\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getActive () {\n    return this.active_\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/ActivatableMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "class",
    "name": "ActivatableMixin",
    "memberof": "src/controls/ActivatableMixin.js",
    "static": true,
    "longname": "src/controls/ActivatableMixin.js~ActivatableMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/ActivatableMixin.js",
    "importStyle": "{ActivatableMixin}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/controls/ActivatableMixin.js~ActivatableMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ActivatableMixin.js~ActivatableMixin#initialize",
    "access": "public",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.active",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "member",
    "name": "activate_",
    "memberof": "src/controls/ActivatableMixin.js~ActivatableMixin",
    "static": false,
    "longname": "src/controls/ActivatableMixin.js~ActivatableMixin#activate_",
    "access": "private",
    "description": "",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "active_",
    "memberof": "src/controls/ActivatableMixin.js~ActivatableMixin",
    "static": false,
    "longname": "src/controls/ActivatableMixin.js~ActivatableMixin#active_",
    "access": "private",
    "description": "",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "activateOnMapChange",
    "memberof": "src/controls/ActivatableMixin.js~ActivatableMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ActivatableMixin.js~ActivatableMixin#activateOnMapChange",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "setActive",
    "memberof": "src/controls/ActivatableMixin.js~ActivatableMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ActivatableMixin.js~ActivatableMixin#setActive",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "active",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "getActive",
    "memberof": "src/controls/ActivatableMixin.js~ActivatableMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ActivatableMixin.js~ActivatableMixin#getActive",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "src/controls/ActiveGroup.js",
    "content": "/**\n * This class organizes controls in an active group in which only one control can bea active at a time.\n * This specified and configured via a property 'activeGroup' in the config object of the control and\n * a matching string for all controls which should be in this group\n */\nexport class ActiveGroup {\n  /**\n   * @param {Control[]} controls\n   */\n  constructor (controls = []) {\n    /**\n     * @type {Control[]}\n     * @private\n     */\n    this.controls_ = controls\n    for (let control of this.controls_) {\n      this.addControl(control)\n    }\n  }\n\n  /**\n   * @param {Control} control\n   */\n  addControl (control) {\n    this.controls_.push(control)\n    control.on('change:active', () => {\n      if (control.getActive()) {\n        if (this.activeControl_) {\n          this.activeControl_.setActive(false)\n        }\n        this.activeControl_ = control\n      } else {\n        this.activeControl_ = null\n      }\n    })\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/ActiveGroup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "ActiveGroup",
    "memberof": "src/controls/ActiveGroup.js",
    "static": true,
    "longname": "src/controls/ActiveGroup.js~ActiveGroup",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/ActiveGroup.js",
    "importStyle": "{ActiveGroup}",
    "description": "This class organizes controls in an active group in which only one control can bea active at a time.\nThis specified and configured via a property 'activeGroup' in the config object of the control and\na matching string for all controls which should be in this group",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 149,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/ActiveGroup.js~ActiveGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ActiveGroup.js~ActiveGroup#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Control[]"
        ],
        "spread": false,
        "optional": false,
        "name": "controls",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "controls_",
    "memberof": "src/controls/ActiveGroup.js~ActiveGroup",
    "static": false,
    "longname": "src/controls/ActiveGroup.js~ActiveGroup#controls_",
    "access": "private",
    "description": "",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Control[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "addControl",
    "memberof": "src/controls/ActiveGroup.js~ActiveGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ActiveGroup.js~ActiveGroup#addControl",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Control"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "activeControl_",
    "memberof": "src/controls/ActiveGroup.js~ActiveGroup",
    "static": false,
    "longname": "src/controls/ActiveGroup.js~ActiveGroup#activeControl_",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "src/controls/ArrowButtons.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport { merge } from '../utilitiesObject'\nimport {Control} from './Control'\nimport {addTooltip} from '../html/html'\n\nimport '../../less/arrowbuttons.less'\n\n/**\n * @typedef {g4uControlOptions} ArrowButtonOptions\n * @property {number} [pixelDelta=128] how many pixels should one click move the map\n * @property {ol.Extent|undefined} [initExtent=undefined] the initial Extent to move the map back to (center button)\n * @property {number} [animationDuration=100] duration of the animation\n * @property {boolean} [animated=true] if the move should be done with an animation or without\n * @property {{up: string, right: string, down: string, left: string, center: string}|{}} [labels={}]\n *  unicode labels for the buttons (only shown if pictures are not loaded)\n */\n\n/**\n * ArrowButtons shows Buttons on the map which let you move in all 4 directions and a button to return to the initial\n * position of the map. It provides an Interface class with an produceOlControl returning an\n * {ol.control.Control} - Object. This can be added as normal controls to the map\n * (e.g. ``map.addControl(arrowButtons.produceOlControl)`` ).\n *\n * The Options are passed as an Object (e.g. ``{ initCenter : map.getView().getCenter(),\n *      initZoom : map.getView().getZoom() }``.\n */\nexport class ArrowButtons extends Control {\n  /**\n   * @param {ArrowButtonOptions} [options={}]\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-arrowbuttons'\n    options.element = $('<div class=\"ol-unselectable ol-control\"></div>')[0]\n    options.singleButton = false\n\n    super(options)\n\n    let description = {\n      'left': this.getLocaliser().localiseUsingDictionary('ArrowButtons leftward'),\n      'right': this.getLocaliser().localiseUsingDictionary('ArrowButtons rightward'),\n      'up': this.getLocaliser().localiseUsingDictionary('ArrowButtons upward'),\n      'down': this.getLocaliser().localiseUsingDictionary('ArrowButtons downward'),\n      'center': this.getLocaliser().localiseUsingDictionary('ArrowButtons centerward')\n    }\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelDelta_ = options.pixelDelta || 128\n\n    /**\n     * @type {ol.Extent|undefined}\n     * @private\n     */\n    this.initExtent_ = options.initExtent || undefined\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.animationDuration_ = options.animationDuration || 100\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.animated_ = options.animated || true\n\n    /**\n     * @type {string[]}\n     * @private\n     */\n    this.directions_ = ['center', 'left', 'up', 'right', 'down']\n\n    /**\n     * @type {{left: number[], up: number[], right: number[], down: number[]}}\n     * @private\n     */\n    this.vectors_ = {left: [-1, 0], up: [0, 1], right: [1, 0], down: [0, -1]}\n\n    /**\n     * @type {{up: string, right: string, down: string, left: string, center: string}}\n     * @private\n     */\n    this.labels_ = merge(options.labels || {}, {\n      left: '&#9665;',\n      up: '&#9651;',\n      right: '&#9655;',\n      down: '&#9661;',\n      center: '&#9675;'\n    })\n\n    // creating the HTML-Elements and registering Event-Handlers\n\n    for (let direction of this.directions_) {\n      // HTML\n\n      let $button = $('<button>')\n        .addClass(this.className_ + '-' + direction)\n        .html(this.labels_[direction])\n\n      addTooltip($button, description[direction])\n\n      // Handler\n      $button.on('click', () => {\n        this.onClick_(direction)\n        $button.blur()\n      })\n\n      // adding button\n      this.get$Element().append($button)\n    }\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    super.setMap(map)\n\n    if (map) {\n      if (!this.initExtent_) {\n        this.initExtent_ = map.getView().calculateExtent(map.getSize())\n      }\n    }\n  }\n\n  /**\n   * This method is called when a button is clicked and makes a move on the map corresponding to the direction.\n   * @param {string} direction\n   * @private\n   */\n  onClick_ (direction) {\n    let map = this.getMap()\n    let view = map.getView()\n\n    if (direction === 'center') {\n      map.get('move').toExtent(this.initExtent_, { animated: this.animated_ })\n    } else {\n      let resolution = view.getResolution()\n      let rotation = view.getRotation()\n\n      // a vector that points in the direction the move should be going\n      let dirVec = this.vectors_[direction]\n\n      // this calculates the 'move'-vector out of the direction and pixelDelta (-> length, how many pixels per move)\n      let delta = [dirVec[0] * resolution * this.pixelDelta_, dirVec[1] * resolution * this.pixelDelta_]\n\n      // this rotates if needed\n      ol.coordinate.rotate(delta, rotation)\n\n      let oldPosition = view.getCenter()\n\n      // adding the delta to the actual center\n\n      let constrainedCenter = view.constrainCenter([oldPosition[0] + delta[0], oldPosition[1] + delta[1]])\n\n      if (this.animated_) {\n        // creating a pan-animation\n        view.animate({\n          center: constrainedCenter,\n          duration: this.animationDuration_\n        })\n      } else {\n        view.setCenter(constrainedCenter)\n      }\n    }\n    $(map.getViewport()).focus()\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/ArrowButtons.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "typedef",
    "name": "ArrowButtonOptions",
    "memberof": "src/controls/ArrowButtons.js",
    "static": true,
    "longname": "src/controls/ArrowButtons.js~ArrowButtonOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "128",
        "defaultRaw": 128,
        "name": "pixelDelta",
        "description": "how many pixels should one click move the map"
      },
      {
        "nullable": null,
        "types": [
          "ol.Extent",
          "undefined"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "initExtent",
        "description": "the initial Extent to move the map back to (center button)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "100",
        "defaultRaw": 100,
        "name": "animationDuration",
        "description": "duration of the animation"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "animated",
        "description": "if the move should be done with an animation or without"
      },
      {
        "nullable": null,
        "types": [
          "{up: string, right: string, down: string, left: string, center: string}|{}"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "labels",
        "description": "unicode labels for the buttons (only shown if pictures are not loaded)"
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "ArrowButtonOptions"
    }
  },
  {
    "__docId__": 156,
    "kind": "class",
    "name": "ArrowButtons",
    "memberof": "src/controls/ArrowButtons.js",
    "static": true,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/ArrowButtons.js",
    "importStyle": "{ArrowButtons}",
    "description": "ArrowButtons shows Buttons on the map which let you move in all 4 directions and a button to return to the initial\nposition of the map. It provides an Interface class with an produceOlControl returning an\n{ol.control.Control} - Object. This can be added as normal controls to the map\n(e.g. ``map.addControl(arrowButtons.produceOlControl)`` ).\n\nThe Options are passed as an Object (e.g. ``{ initCenter : map.getView().getCenter(),\n     initZoom : map.getView().getZoom() }``.",
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "src/controls/Control.js~Control"
    ]
  },
  {
    "__docId__": 157,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "ArrowButtonOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "pixelDelta_",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#pixelDelta_",
    "access": "private",
    "description": "",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "initExtent_",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#initExtent_",
    "access": "private",
    "description": "",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "ol.Extent",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "animationDuration_",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#animationDuration_",
    "access": "private",
    "description": "",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "animated_",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#animated_",
    "access": "private",
    "description": "",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "directions_",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#directions_",
    "access": "private",
    "description": "",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "vectors_",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#vectors_",
    "access": "private",
    "description": "",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "{left: number[], up: number[], right: number[], down: number[]}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "labels_",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#labels_",
    "access": "private",
    "description": "",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "{up: string, right: string, down: string, left: string, center: string}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "onClick_",
    "memberof": "src/controls/ArrowButtons.js~ArrowButtons",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ArrowButtons.js~ArrowButtons#onClick_",
    "access": "private",
    "description": "This method is called when a button is clicked and makes a move on the map corresponding to the direction.",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/controls/Attribution.js",
    "content": "import $ from 'jquery'\nimport { groupBy, map } from 'lodash/collection'\n\nimport { Control } from './Control'\nimport { ListenerOrganizerMixin } from '../ListenerOrganizerMixin'\nimport { mixin } from '../utilities'\nimport { cssClasses } from '../globals'\nimport { addTooltip } from '../html/html'\nimport { GroupLayer } from '../layers/GroupLayer'\n\nimport '../../less/attribution.less'\nimport { uniq } from 'lodash/array'\nimport { FunctionCallBuffer } from '../FunctionCallBuffer'\n\nfunction groupByChain (col) {\n  return {\n    groupBy: (cb) => {\n      return groupByChain(groupBy(col, cb))\n    },\n    forEach: (cb) => {\n      return groupByChain(col.forEach(cb))\n    },\n    map: (cb) => {\n      return groupByChain(map(col, cb))\n    }\n  }\n}\n\nexport class Attribution extends mixin(Control, ListenerOrganizerMixin) {\n  constructor (options) {\n    options.className = options.className || 'g4u-attribution'\n    options.singleButton = false\n    options.element = $('<div>').get(0)\n\n    super(options)\n\n    this.setTipLabel(this.getTipLabel() || this.getLocaliser().localiseUsingDictionary('Attribution tipLabel'))\n\n    /**\n     * Pairs of layer title and attribution\n     * @type {[string, string][]}\n     * @private\n     */\n    this.visibleAttributions_ = []\n\n    this.createStaticHTML(options)\n\n    this.setCollapsed(options.collapsed === true)\n\n    this.updateListCallBuffer = new FunctionCallBuffer(() => this.updateList())\n  }\n\n  setCollapsed (collapsed, silent) {\n    let oldValue = this.collapsed_\n    if (oldValue !== collapsed) {\n      this.collapsed_ = collapsed\n      this.dispatchEvent({\n        type: 'change:collapsed',\n        oldValue\n      })\n      if (!silent) {\n        this.dispatchEvent('change:size')\n      }\n      this.get$Element().toggleClass(cssClasses.collapsed, collapsed)\n    }\n  }\n\n  getCollapsed () {\n    return this.collapsed_\n  }\n\n  createStaticHTML (options) {\n    let $button = $('<button>')\n      .on('click', () => {\n        this.setCollapsed(!this.getCollapsed())\n      })\n    addTooltip($button, this.getTipLabel())\n\n    this.$list_ = $('<ul>')\n\n    this.get$Element()\n      .append($button)\n      .append(this.$list_)\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.showPoweredBy_ = options.poweredBy !== false\n    if (this.showPoweredBy_) {\n      let content = (options.poweredBy === undefined)\n        ? '<a href=\"https://github.com/KlausBenndorf/guide4you\" target=\"_blank\">Guide4You</a>'\n        : this.getLocaliser().selectL10N(options.poweredBy)\n\n      if (!Array.isArray(content)) {\n        content = [content]\n      }\n\n      /**\n       * @type {jQuery}\n       * @private\n       */\n      this.$poweredBy_ = content.map(c => $('<li>')\n        .append(c)\n        .addClass(this.className_ + '-poweredby'))\n    }\n  }\n\n  updateList () {\n    this.scanLayers()\n\n    this.$list_.empty()\n    if (this.showPoweredBy_) {\n      this.$list_.append(this.$poweredBy_)\n    }\n\n    groupByChain(this.visibleAttributions_)\n      .groupBy(([layerTitle, attribution]) => {\n        return layerTitle\n      }) // -> { layerTitle: [[layerTitle, attribution]*] }\n      .map((val, key) => {\n        return [key, val.map(p => p[1])]\n      }) // -> [[layerTitle, attribution*]*]\n      .groupBy(([layerTitle, attributions]) => {\n        attributions = uniq(attributions)\n        if (attributions.length === 1) {\n          return attributions[0]\n        } else {\n          return attributions.join(' & ')\n        }\n      })\n      .map((val, key) => {\n        return [val.map(p => p[0]), key]\n      })\n      .forEach(([layerTitles, attributionText]) => {\n        let text\n        if (layerTitles.length === 1) {\n          text = layerTitles[0]\n        } else {\n          text = layerTitles.slice(0, -1).join(', ') + ' & ' + layerTitles[layerTitles.length - 1]\n        }\n        text += ': ' + attributionText\n        this.$list_.append($('<li>').html(text))\n        if (!this.getCollapsed()) {\n          this.dispatchEvent('change:size')\n        }\n      })\n  }\n\n  scanLayers () {\n    if (this.getMap()) {\n      this.visibleAttributions_ = []\n      this.scanLayer(this.getMap().getLayerGroup())\n    }\n  }\n\n  scanLayer (layer, layerTitle = null) {\n    if (layer.getVisible()) {\n      if (layer.getLayers) {\n        let silentGroup = !(layer instanceof GroupLayer)\n        layer.getLayers().forEach(l => this.scanLayer(l, silentGroup ? layer.get('title') : null))\n      } else {\n        if (layer.getVisible()) {\n          let label = layer.isBaseLayer\n            ? this.getLocaliser().localiseUsingDictionary('Attribution baseLayerLabel')\n            : (layerTitle || layer.get('title'))\n          this.addLayer(layer, label)\n        }\n      }\n    }\n  }\n\n  attachListeners (layer) {\n    if (layer.getLayers) {\n      layer.getLayers().forEach(l => this.attachListeners(l))\n      this.listenAt(layer.getLayers())\n        .on('add', e => {\n          this.attachListeners(e.element)\n          this.updateListCallBuffer.call()\n        })\n        .on('remove', e => {\n          this.detachFrom(e.element)\n          this.updateListCallBuffer.call()\n        })\n    }\n\n    if (!(layer instanceof GroupLayer)) {\n      this.listenAt(layer)\n        .on('change:visible', () => {\n          this.updateListCallBuffer.call()\n        })\n        .on('change:source', () => {\n          if (layer.getVisible()) {\n            this.updateListCallBuffer.call()\n          }\n        })\n    }\n  }\n\n  addLayer (layer, label) {\n    if (layer.getSource && layer.getSource()) {\n      let attributions = layer.getSource().getAttributions()\n      if (attributions) {\n        for (let attribution of attributions) {\n          this.visibleAttributions_.push([label, attribution.getHTML()])\n        }\n      }\n    }\n  }\n\n  updateRtl () {\n    if (this.getMap().get('localiser').isRtl()) {\n      this.$list_.prop('dir', 'rtl')\n    } else {\n      this.$list_.prop('dir', undefined)\n    }\n  }\n\n  setMap (map) {\n    if (this.getMap()) {\n      this.visibleAttributions_ = []\n      this.detachAllListeners()\n    }\n\n    super.setMap(map)\n\n    if (map) {\n      setTimeout(() => {\n        this.attachListeners(map.getLayerGroup())\n        this.updateListCallBuffer.call()\n        this.updateRtl()\n        this.listenAt(map.get('localiser')).on('change:language', () => {\n          this.updateRtl()\n        })\n      }, 0)\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/Attribution.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "groupByChain",
    "memberof": "src/controls/Attribution.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/Attribution.js~groupByChain",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/controls/Attribution.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "col",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"groupBy\": *, \"forEach\": *, \"map\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "Attribution",
    "memberof": "src/controls/Attribution.js",
    "static": true,
    "longname": "src/controls/Attribution.js~Attribution",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/Attribution.js",
    "importStyle": "{Attribution}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "interface": false,
    "expressionExtends": "mixin(Control, ListenerOrganizerMixin)"
  },
  {
    "__docId__": 171,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "visibleAttributions_",
    "memberof": "src/controls/Attribution.js~Attribution",
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#visibleAttributions_",
    "access": "private",
    "description": "Pairs of layer title and attribution",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "[string, string][]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "updateListCallBuffer",
    "memberof": "src/controls/Attribution.js~Attribution",
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#updateListCallBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "setCollapsed",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#setCollapsed",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "collapsed",
        "types": [
          "*"
        ]
      },
      {
        "name": "silent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "collapsed_",
    "memberof": "src/controls/Attribution.js~Attribution",
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#collapsed_",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "getCollapsed",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#getCollapsed",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "createStaticHTML",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#createStaticHTML",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 178,
    "kind": "member",
    "name": "$list_",
    "memberof": "src/controls/Attribution.js~Attribution",
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#$list_",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "showPoweredBy_",
    "memberof": "src/controls/Attribution.js~Attribution",
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#showPoweredBy_",
    "access": "private",
    "description": "",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 180,
    "kind": "member",
    "name": "$poweredBy_",
    "memberof": "src/controls/Attribution.js~Attribution",
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#$poweredBy_",
    "access": "private",
    "description": "",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "updateList",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#updateList",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "scanLayers",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#scanLayers",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "scanLayer",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#scanLayer",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "params": [
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerTitle",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": null
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "attachListeners",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#attachListeners",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "params": [
      {
        "name": "layer",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "addLayer",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#addLayer",
    "access": "public",
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "params": [
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "label",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "updateRtl",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#updateRtl",
    "access": "public",
    "description": null,
    "lineNumber": 211,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/Attribution.js~Attribution",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Attribution.js~Attribution#setMap",
    "access": "public",
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "src/controls/CombinedZoom.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport {ComposedControl} from './ComposedControl'\nimport { cssClasses } from '../globals'\nimport { copy } from '../utilitiesObject'\n\nimport '../../less/zoom.less'\nimport {mixin} from '../utilities'\nimport {RewireMixin} from './RewireMixin'\n\n/**\n * @typedef {ComposedControlOptions} CombinedZoomOptions\n * @property {boolean} [buttons=true] visibility of the zoombuttons\n * @property {boolean} [slider=true] visibility of the zoomslider\n * @property {number} [buttonImportance] importance of the buttons\n * @property {number} [sliderImportance] importance of the slider\n * @property {string} [zoomInTipLabel]\n * @property {string} [zoomOutTipLabel]\n */\n\n/**\n * This combines the two zoom controls (zoomslider and zoombuttons)\n */\nexport class CombinedZoom extends ComposedControl {\n  /**\n   * @param {CombinedZoomOptions} [options={}]\n   */\n  constructor (options = {}) {\n    options.element = $('<div>').get(0)\n    options.className = options.className || 'g4u-zoom'\n    options.singleButton = false\n\n    super(options)\n\n    delete options.element\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasButtons_ = options.buttons || !options.hasOwnProperty('buttons')\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSlider_ = options.slider || !options.hasOwnProperty('slider')\n\n    if (this.hasButtons_) {\n      this.zoomButtonOptions = copy(options)\n      this.zoomButtonOptions.importance = options.buttonImportance || options.importance\n      this.zoomButtonOptions.zoomInTipLabel = (options.hasOwnProperty('zoomInTipLabel'))\n        ? this.getLocaliser().selectL10N(options.zoomInTipLabel)\n        : this.getLocaliser().localiseUsingDictionary('Zoom zoomInTipLabel')\n\n      this.zoomButtonOptions.zoomOutTipLabel = (options.hasOwnProperty('zoomOutTipLabel'))\n        ? this.getLocaliser().selectL10N(options.zoomOutTipLabel)\n        : this.getLocaliser().localiseUsingDictionary('Zoom zoomOutTipLabel')\n    }\n\n    if (this.hasSlider_) {\n      this.zoomSliderOptions = copy(options)\n      this.zoomSliderOptions.importance = options.sliderImportance\n      this.zoomSliderOptions.className = 'g4u-zoomslider'\n    }\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    super.setMap(map)\n\n    if (map) {\n      if (this.hasSlider_) {\n        this.addZoomSlider()\n      }\n\n      if (this.hasButtons_) {\n        this.addZoomButtons()\n      }\n    }\n  }\n\n  addZoomButtons () {\n    /**\n     * @type {Zoom}\n     * @private\n     */\n    this.zoomButtons_ = new Zoom(this.zoomButtonOptions)\n\n    this.addControl(this.zoomButtons_, {wrap: false})\n\n    let $zoomIn = this.zoomButtons_.get$Element().children('.g4u-zoom-in')\n    let $zoomOut = this.zoomButtons_.get$Element().children('.g4u-zoom-out')\n\n    this.get$Container().prepend($zoomIn)\n    this.get$Container().append($zoomOut)\n\n    this.zoomButtons_.get$Element().remove()\n  }\n\n  addZoomSlider () {\n    /**\n     * @type {ZoomSlider}\n     * @private\n     */\n    this.zoomSlider_ = new ZoomSlider(this.zoomSliderOptions)\n\n    this.addControl(this.zoomSlider_, {wrap: false})\n\n    let $zoomSlider = this.zoomSlider_.get$Element()\n\n    $zoomSlider.on('mousedown', function () {\n      $zoomSlider.addClass(cssClasses.mousedown)\n    })\n    $zoomSlider.on('mouseup', function () {\n      $zoomSlider.removeClass(cssClasses.mousedown)\n    })\n\n    let $zoomIn = this.get$Container().filter('.g4u-zoom-in')\n\n    if ($zoomIn.length) {\n      $zoomSlider.insertAfter($zoomIn)\n    } else {\n      this.get$Container().append($zoomSlider)\n    }\n  }\n}\n\n/**\n * @typedef {g4uControlOptions} ZoomOptions\n * @property {Localizable} [zoomInTipLabel]\n * @property {Localizable} [zoomOutTipLabel]\n */\n\n/**\n * @extends Control\n */\nexport class Zoom extends mixin(ol.control.Zoom, RewireMixin) {\n  /**\n   * @param {g4uControlOptions} [options={}]\n   */\n  constructor (options = {}) {\n    options.className = (options.hasOwnProperty('className')) ? options.className : 'g4u-zoom'\n\n    options.zoomInTipLabel = (options.hasOwnProperty('zoomInTipLabel'))\n      ? options.localiser.selectL10N(options.zoomInTipLabel)\n      : options.localiser.localiseUsingDictionary('Zoom zoomInTipLabel')\n\n    options.zoomOutTipLabel = (options.hasOwnProperty('zoomOutTipLabel'))\n      ? options.localiser.selectL10N(options.zoomOutTipLabel)\n      : options.localiser.localiseUsingDictionary('Zoom zoomOutTipLabel')\n\n    super(options)\n  }\n}\n\n/**\n * @extends Control\n */\nexport class ZoomSlider extends mixin(ol.control.ZoomSlider, RewireMixin) {\n  /**\n   * @param {g4uControlOptions} [options={}]\n   */\n  constructor (options = {}) {\n    options.className = (options.hasOwnProperty('className')) ? options.className : 'g4u-zoomslider'\n\n    super(options)\n  }\n\n  rewire () {\n    super.rewire()\n\n    this.get$Element().on('mousedown', function () {\n      $(this).addClass(cssClasses.mousedown)\n    })\n    this.get$Element().on('mouseup', function () {\n      $(this).removeClass(cssClasses.mousedown)\n    })\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/CombinedZoom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "typedef",
    "name": "CombinedZoomOptions",
    "memberof": "src/controls/CombinedZoom.js",
    "static": true,
    "longname": "src/controls/CombinedZoom.js~CombinedZoomOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "buttons",
        "description": "visibility of the zoombuttons"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "slider",
        "description": "visibility of the zoomslider"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "buttonImportance",
        "description": "importance of the buttons"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "sliderImportance",
        "description": "importance of the slider"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "zoomInTipLabel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "zoomOutTipLabel",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "ComposedControlOptions"
      ],
      "optional": false,
      "name": "CombinedZoomOptions"
    }
  },
  {
    "__docId__": 192,
    "kind": "class",
    "name": "CombinedZoom",
    "memberof": "src/controls/CombinedZoom.js",
    "static": true,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/CombinedZoom.js",
    "importStyle": "{CombinedZoom}",
    "description": "This combines the two zoom controls (zoomslider and zoombuttons)",
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "src/controls/ComposedControl.js~ComposedControl"
    ]
  },
  {
    "__docId__": 193,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "CombinedZoomOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "hasButtons_",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#hasButtons_",
    "access": "private",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "hasSlider_",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#hasSlider_",
    "access": "private",
    "description": "",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "zoomButtonOptions",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#zoomButtonOptions",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "zoomSliderOptions",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#zoomSliderOptions",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "addZoomButtons",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#addZoomButtons",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "zoomButtons_",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#zoomButtons_",
    "access": "private",
    "description": "",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "Zoom"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "addZoomSlider",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#addZoomSlider",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "zoomSlider_",
    "memberof": "src/controls/CombinedZoom.js~CombinedZoom",
    "static": false,
    "longname": "src/controls/CombinedZoom.js~CombinedZoom#zoomSlider_",
    "access": "private",
    "description": "",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "ZoomSlider"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 203,
    "kind": "typedef",
    "name": "ZoomOptions",
    "memberof": "src/controls/CombinedZoom.js",
    "static": true,
    "longname": "src/controls/CombinedZoom.js~ZoomOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": true,
        "name": "zoomInTipLabel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": true,
        "name": "zoomOutTipLabel",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "ZoomOptions"
    }
  },
  {
    "__docId__": 204,
    "kind": "class",
    "name": "Zoom",
    "memberof": "src/controls/CombinedZoom.js",
    "static": true,
    "longname": "src/controls/CombinedZoom.js~Zoom",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/CombinedZoom.js",
    "importStyle": "{Zoom}",
    "description": "",
    "lineNumber": 141,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 205,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/CombinedZoom.js~Zoom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/CombinedZoom.js~Zoom#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 206,
    "kind": "class",
    "name": "ZoomSlider",
    "memberof": "src/controls/CombinedZoom.js",
    "static": true,
    "longname": "src/controls/CombinedZoom.js~ZoomSlider",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/CombinedZoom.js",
    "importStyle": "{ZoomSlider}",
    "description": "",
    "lineNumber": 163,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 207,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/CombinedZoom.js~ZoomSlider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/CombinedZoom.js~ZoomSlider#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "rewire",
    "memberof": "src/controls/CombinedZoom.js~ZoomSlider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/CombinedZoom.js~ZoomSlider#rewire",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 209,
    "kind": "file",
    "name": "src/controls/ComposedControl.js",
    "content": "import $ from 'jquery'\n\nimport {Window} from '../html/Window'\nimport {Control} from './Control'\nimport {cssClasses} from '../globals'\n\nimport '../../less/toolbox.less'\nimport '../../less/layermenu.less'\n\n/**\n * @typedef {g4uControlOptions} ComposedControlOptions\n * @property {string} [containerClassName]\n */\n\n/**\n * This is a class ComposedControl which provides some functionality for controls which are composed out of several\n * other controls. It makes use of the composite pattern.\n */\n\nexport class ComposedControl extends Control {\n  /**\n   * @param {ComposedControlOptions} [options={}]\n   */\n  constructor (options = {}) {\n    let $container = $('<div>')\n\n    if (options.hasOwnProperty('element')) {\n      $(options.element).append($container)\n    } else {\n      options.element = $container.get(0)\n    }\n\n    options.singleButton = false\n\n    super(options)\n\n    /**\n     * @type {Control[]}\n     * @private\n     */\n    this.controls_ = []\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$container_ = $container\n\n    if (options.hasOwnProperty('containerClassName')) {\n      this.$container_.addClass(options.containerClassName)\n    }\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameItem_ = this.getClassName() + '-item'\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameItemFirst_ = this.classNameItem_ + '-first'\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameItemLast_ = this.classNameItem_ + '-last'\n  }\n\n  /**\n   * @returns {Control[]}\n   */\n  getControls () {\n    return this.controls_\n  }\n\n  /**\n   * @returns {jQuery}\n   */\n  get$Container () {\n    return this.$container_\n  }\n\n  /**\n   * @param {Control} control\n   * @private\n   */\n  setWindowForControl_ (control) {\n    let aWindow = new Window({$context: $(this.getMap().getViewport())})\n    control.setWindow(aWindow, true)\n  }\n\n  /**\n   * This method adds some helping css classes to the items\n   * @param {jQuery} $item\n   * @returns {jQuery}\n   * @private\n   */\n  addClasses_ ($item) {\n    $item.addClass(this.classNameItemLast_)\n\n    if (this.$container_.children().length === 0) {\n      $item.addClass(this.classNameItemFirst_)\n    } else {\n      this.$container_.children(':last-child').removeClass(this.classNameItemLast_)\n    }\n\n    return $item\n  }\n\n  /**\n   *\n   * @param {Control} control\n   * @param {Object} options\n   * @param {Boolean} [options.claim=true] if claim is set to false the control won't add anything to the container\n   * @param {Boolean} [options.wrap=true] if wrap is set to true a span will be put arround the element\n   *    if set to false the element of the control will be inserted directly\n   * @param {Boolean} [options.cssPosition=true] if this is set to true the wrap or the element will get css classes\n   *    indicating its position inside the container\n   * @param {HTMLElement} [options.element] if this is set it will be put inside the container instead calling\n   *    control.set$Target()\n   */\n  addControl (control, options = {}) {\n    let map = this.getMap()\n    if (map) {\n      map.addControl(control)\n    } else {\n      throw new Error('composed controls needs to be added to the map before they can get any controls')\n    }\n\n    if (control.setWindow) {\n      this.setWindowForControl_(control)\n    }\n\n    if (!(options.hasOwnProperty('claim')) || !options.claim) {\n      if (!(options.hasOwnProperty('wrap')) || options.wrap) {\n        let $wrap = $('<div>')\n\n        if (options.hasOwnProperty('element')) {\n          $wrap.append($(options.element))\n        } else {\n          control.set$Target($wrap)\n        }\n\n        $wrap.addClass(this.classNameItem_)\n\n        if (!(options.hasOwnProperty('cssPosition')) || options.cssPosition) {\n          this.addClasses_($wrap)\n        }\n\n        if (!control.getVisible()) {\n          $wrap.addClass(cssClasses.hidden)\n        }\n\n        control.on('change:visible', () => {\n          $wrap.toggleClass(cssClasses.hidden, !control.getVisible())\n        })\n\n        this.$container_.append($wrap)\n      } else {\n        $(options.element).addClass(this.classNameItem_)\n\n        if (!(options.hasOwnProperty('cssPosition')) || options.cssPosition) {\n          this.addClasses_($(options.element))\n        }\n\n        if (options.hasOwnProperty('element')) {\n          this.$container_.append($(options.element))\n        } else {\n          control.set$Target(this.$container_)\n        }\n      }\n    }\n\n    control.on('change:visible', () => this.updateVisibility())\n    control.on('change', e => this.dispatchEvent(e))\n    control.on('change:size', e => this.dispatchEvent(e))\n\n    this.controls_.push(control)\n\n    this.changed()\n    this.updateVisibility()\n  }\n\n  /**\n   * @param {Control} control\n   */\n  removeControl (control) {\n    if (control.get$Element().hasClass(this.classNameItem_)) {\n      control.get$Element().remove()\n    } else if (control.get$Element().parent().hasClass(this.classNameItem_)) {\n      control.get$Element().parent().remove()\n    }\n\n    this.controls_.splice(this.controls_.indexOf(control), 1)\n    this.getMap().removeControl(control)\n\n    this.changed()\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (this.getMap()) {\n      this.controls_.forEach(control => {\n        this.getMap().removeControl(control)\n      })\n\n      this.controls_ = []\n    }\n\n    super.setMap(map)\n  }\n\n  updateVisibility () {\n    this.setVisible(this.controls_.some(c => c.getVisible()))\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/ComposedControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 210,
    "kind": "typedef",
    "name": "ComposedControlOptions",
    "memberof": "src/controls/ComposedControl.js",
    "static": true,
    "longname": "src/controls/ComposedControl.js~ComposedControlOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "containerClassName",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "ComposedControlOptions"
    }
  },
  {
    "__docId__": 211,
    "kind": "class",
    "name": "ComposedControl",
    "memberof": "src/controls/ComposedControl.js",
    "static": true,
    "longname": "src/controls/ComposedControl.js~ComposedControl",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/ComposedControl.js",
    "importStyle": "{ComposedControl}",
    "description": "This is a class ComposedControl which provides some functionality for controls which are composed out of several\nother controls. It makes use of the composite pattern.",
    "lineNumber": 20,
    "interface": false,
    "extends": [
      "src/controls/Control.js~Control"
    ]
  },
  {
    "__docId__": 212,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "ComposedControlOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 213,
    "kind": "member",
    "name": "controls_",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#controls_",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Control[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "$container_",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#$container_",
    "access": "private",
    "description": "",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "classNameItem_",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#classNameItem_",
    "access": "private",
    "description": "",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "classNameItemFirst_",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#classNameItemFirst_",
    "access": "private",
    "description": "",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "classNameItemLast_",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#classNameItemLast_",
    "access": "private",
    "description": "",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "getControls",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#getControls",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Control[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Control[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "get$Container",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#get$Container",
    "access": "public",
    "description": "",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "setWindowForControl_",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#setWindowForControl_",
    "access": "private",
    "description": "",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Control"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "addClasses_",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#addClasses_",
    "access": "private",
    "description": "This method adds some helping css classes to the items",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "addControl",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#addControl",
    "access": "public",
    "description": "",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "Control"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.claim",
        "description": "if claim is set to false the control won't add anything to the container"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.wrap",
        "description": "if wrap is set to true a span will be put arround the element\n   if set to false the element of the control will be inserted directly"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.cssPosition",
        "description": "if this is set to true the wrap or the element will get css classes\n   indicating its position inside the container"
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": true,
        "name": "options.element",
        "description": "if this is set it will be put inside the container instead calling\n   control.set$Target()"
      }
    ],
    "return": null
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "removeControl",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#removeControl",
    "access": "public",
    "description": "",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "Control"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 204,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "updateVisibility",
    "memberof": "src/controls/ComposedControl.js~ComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ComposedControl.js~ComposedControl#updateVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 227,
    "kind": "file",
    "name": "src/controls/Control.js",
    "content": "import ol from 'openlayers'\nimport { mixin } from '../utilities'\nimport {ControlLogicMixin} from './ControlLogicMixin'\n\n/**\n * @typedef {object} g4uControlOptions\n * @property {string} [controlType] the type of the control. If not given the name of the control is used\n * @property {number} [importance] how important the control is on the map. the higher this value is, the longer it\n *    will be kept on the map if the viewport gets smaller.\n * @property {string} [activeGroup] if controls are in the same active group only one of them can be active at the same\n *    time\n * @property {string} [className]\n * @property {HTMLElement} element\n * @property {L10N} localiser the localiser to use by the control.\n * @property {string} controlName the name of the control.\n * @property {boolean} [singleButton=false] if the control only consists of one button\n * @property {String|HTMLElement|jQuery} [target]\n * @property {Localizable} [title] not used by every control\n * @property {Localizable} [tipLabel] not used by every control\n * @property {Float} [float]\n * @property {boolean} [windowed=false] whether the control resides inside a window or not\n */\n\n/**\n * This is a customized ol.control.Control class, all logic is in the ol.control.ControlLogic\n * @class Control\n * @extends {ControlLogicMixin}\n * @extends {ol.control.Control}\n */\n\nexport const Control = mixin(ol.control.Control, ControlLogicMixin)\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/Control.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "typedef",
    "name": "g4uControlOptions",
    "memberof": "src/controls/Control.js",
    "static": true,
    "longname": "src/controls/Control.js~g4uControlOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "controlType",
        "description": "the type of the control. If not given the name of the control is used"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "importance",
        "description": "how important the control is on the map. the higher this value is, the longer it\n   will be kept on the map if the viewport gets smaller."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "activeGroup",
        "description": "if controls are in the same active group only one of them can be active at the same\n   time"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "className",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "L10N"
        ],
        "spread": false,
        "optional": false,
        "name": "localiser",
        "description": "the localiser to use by the control."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "controlName",
        "description": "the name of the control."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "singleButton",
        "description": "if the control only consists of one button"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "HTMLElement",
          "jQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": true,
        "name": "title",
        "description": "not used by every control"
      },
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": true,
        "name": "tipLabel",
        "description": "not used by every control"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": true,
        "name": "float",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "windowed",
        "description": "whether the control resides inside a window or not"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "g4uControlOptions"
    }
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "Control",
    "memberof": "src/controls/Control.js",
    "static": true,
    "longname": "src/controls/Control.js~Control",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/Control.js",
    "importStyle": "{Control}",
    "description": "This is a customized ol.control.Control class, all logic is in the ol.control.ControlLogic",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Control"
      },
      {
        "tagName": "@extends",
        "tagValue": "{ControlLogicMixin}"
      },
      {
        "tagName": "@extends",
        "tagValue": "{ol.control.Control}"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/controls/ControlLogicMixin.js",
    "content": "import $ from 'jquery'\nimport {cssClasses} from '../globals'\n\n/**\n * This class contains logic which should be part of any Control in the Software. Any custom controls\n * should inherit from Control which inherits from this class AND from ol.cont\n */\nexport class ControlLogicMixin {\n  /**\n   * @param {g4uControlOptions} options\n   */\n  initialize (options = {}) {\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = options.hasOwnProperty('className')\n      ? options.className\n      : ''\n\n    if (options.hasOwnProperty('target')) {\n      let $target\n      if (typeof options.target === 'string' && options.target[ 0 ] !== '#') {\n        $target = $('#' + options.target)\n      } else {\n        $target = $(options.target)\n      }\n      this.set$Target($target)\n    }\n\n    if (options.hasOwnProperty('element')) {\n      $(options.element).addClass(this.className_).addClass('ol-unselectable ol-control')\n    }\n\n    /**\n     * @type {boolean}\n     */\n    this.singleButton = (options.singleButton === true)\n    if (this.singleButton) {\n      $(options.element).addClass(cssClasses.mainButton)\n    }\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.controlName_ = options.controlName\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.windowed_ = options.hasOwnProperty('windowed')\n      ? options.windowed\n      : false\n\n    /**\n     * @type {L10N}\n     * @private\n     */\n    this.localiser_ = options.localiser\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.title_ = options.hasOwnProperty('title') ? this.getLocaliser().selectL10N(options.title) : undefined\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.tipLabel_ = options.hasOwnProperty('tipLabel') ? this.getLocaliser().selectL10N(options.tipLabel) : undefined\n\n    /**\n     * @type {string[]| string}\n     * @private\n     */\n    this.float_ = (options.float === undefined) ? [ 'top', 'left' ] : options.float\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.importance_ = options.importance || 0\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = true\n  }\n\n  /**\n   * Returns the floating directions of the control\n   * @returns {string[]|string}\n   */\n  getFloat () {\n    return this.float_\n  }\n\n  /**\n   * @returns {number}\n   */\n  getImportance () {\n    return this.importance_\n  }\n\n  /**\n   * @returns {L10N}\n   */\n  getLocaliser () {\n    return this.localiser_\n  }\n\n  /**\n   * Returns true if the element consists only of a single button\n   * @returns {Boolean} element it is created in\n   */\n  isSingleButton () {\n    return this.singleButton\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isWindowed () {\n    return this.windowed_\n  }\n\n  /**\n   * Returns the name of the control if given to the constructor\n   * @returns {string}\n   */\n  getControlName () {\n    return this.controlName_\n  }\n\n  /**\n   * Returns the title of the control if given to the constructor\n   * @returns {string}\n   */\n  getTitle () {\n    return this.title_\n  }\n\n  /**\n   * @param {Localizable} title\n   */\n  setTitle (title) {\n    this.title_ = this.getLocaliser().selectL10N(title)\n  }\n\n  /**\n   * Returns the tipLabel of the control if given to the constructor\n   * @returns {string} title\n   */\n  getTipLabel () {\n    return this.tipLabel_\n  }\n\n  /**\n   * @param {Localizable} tipLabel\n   */\n  setTipLabel (tipLabel) {\n    this.tipLabel_ = this.getLocaliser().selectL10N(tipLabel)\n  }\n\n  /**\n   * Returns the element of the control\n   * @returns {jQuery} element it is created in\n   */\n  get$Element () {\n    return $(this.element)\n  }\n\n  /**\n   * Returns the target of the control\n   * @returns {jQuery} element it is created in\n   */\n  get$Target () {\n    if (this.catched$Target_) {\n      return this.catched$Target_\n    } else if (this.getMap()) {\n      this.catched$Target_ = $(this.getMap().getViewport()).children('.ol-overlaycontainer-stopevent')\n      return this.catched$Target_\n    }\n  }\n\n  /**\n   * Returns the CSS-className of the control\n   * @returns {string} CSS-className\n   */\n  getClassName () {\n    return this.className_\n  }\n\n  /**\n   * Sets a new target for the control\n   * @param {jQuery} $target element it is moved to\n   */\n  set$Target ($target) {\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.catched$Target_ = $target\n    this.setTarget($target[ 0 ])\n    $target.append(this.get$Element())\n  }\n\n  /**\n   * @param {boolean} visible\n   */\n  setVisible (visible) {\n    if (visible !== this.visible_) {\n      this.get$Element().toggleClass(cssClasses.hidden, !visible)\n      this.visible_ = visible\n      this.dispatchEvent('change:visible')\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getVisible () {\n    return this.visible_\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/ControlLogicMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "class",
    "name": "ControlLogicMixin",
    "memberof": "src/controls/ControlLogicMixin.js",
    "static": true,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/ControlLogicMixin.js",
    "importStyle": "{ControlLogicMixin}",
    "description": "This class contains logic which should be part of any Control in the Software. Any custom controls\nshould inherit from Control which inherits from this class AND from ol.cont",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#initialize",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "className_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#className_",
    "access": "private",
    "description": "",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "singleButton",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#singleButton",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "controlName_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#controlName_",
    "access": "private",
    "description": "",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "windowed_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#windowed_",
    "access": "private",
    "description": "",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "localiser_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#localiser_",
    "access": "private",
    "description": "",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "L10N"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "title_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#title_",
    "access": "private",
    "description": "",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "tipLabel_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#tipLabel_",
    "access": "private",
    "description": "",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "float_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#float_",
    "access": "private",
    "description": "",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "string[]",
        " string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "importance_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#importance_",
    "access": "private",
    "description": "",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "visible_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#visible_",
    "access": "private",
    "description": "",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "getFloat",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#getFloat",
    "access": "public",
    "description": "Returns the floating directions of the control",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]|string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]",
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "getImportance",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#getImportance",
    "access": "public",
    "description": "",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "getLocaliser",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#getLocaliser",
    "access": "public",
    "description": "",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{L10N}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "L10N"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "isSingleButton",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#isSingleButton",
    "access": "public",
    "description": "Returns true if the element consists only of a single button",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} element it is created in"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "element it is created in"
    },
    "params": []
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "isWindowed",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#isWindowed",
    "access": "public",
    "description": "",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "getControlName",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#getControlName",
    "access": "public",
    "description": "Returns the name of the control if given to the constructor",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "getTitle",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#getTitle",
    "access": "public",
    "description": "Returns the title of the control if given to the constructor",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "setTitle",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#setTitle",
    "access": "public",
    "description": "",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "getTipLabel",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#getTipLabel",
    "access": "public",
    "description": "Returns the tipLabel of the control if given to the constructor",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} title"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "title"
    },
    "params": []
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "setTipLabel",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#setTipLabel",
    "access": "public",
    "description": "",
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": false,
        "name": "tipLabel",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "get$Element",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#get$Element",
    "access": "public",
    "description": "Returns the element of the control",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery} element it is created in"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": "element it is created in"
    },
    "params": []
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "get$Target",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#get$Target",
    "access": "public",
    "description": "Returns the target of the control",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery} element it is created in"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": "element it is created in"
    },
    "params": []
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "catched$Target_",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#catched$Target_",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "getClassName",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#getClassName",
    "access": "public",
    "description": "Returns the CSS-className of the control",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} CSS-className"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "CSS-className"
    },
    "params": []
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "set$Target",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#set$Target",
    "access": "public",
    "description": "Sets a new target for the control",
    "lineNumber": 202,
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$target",
        "description": "element it is moved to"
      }
    ],
    "return": null
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "setVisible",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#setVisible",
    "access": "public",
    "description": "",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "getVisible",
    "memberof": "src/controls/ControlLogicMixin.js~ControlLogicMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ControlLogicMixin.js~ControlLogicMixin#getVisible",
    "access": "public",
    "description": "",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 264,
    "kind": "file",
    "name": "src/controls/GeoLocationButton.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport {Control} from './Control'\nimport { addTooltip } from '../html/html'\nimport {VectorLayer} from '../layers/VectorLayer'\nimport {MessageDisplay} from '../MessageDisplay'\nimport {cssClasses} from '../globals'\n\nimport '../../less/geolocation.less'\nimport { ActivatableMixin } from './ActivatableMixin'\nimport { ListenerOrganizerMixin } from '../ListenerOrganizerMixin'\nimport { mixin } from '../utilities'\n\n/**\n * @typedef {g4uControlOptions} GeolocationButtonOptions\n * @property {boolean} [animated] if the move on the map to the geoposition should be animated\n * @property {StyleLike} [style='#defaultStyle']\n * @property {number} [maxZoom]\n * @property {boolean} [active=false]\n */\n\n/**\n * This class provides a button to center the view on your current geoposition.\n */\nexport class GeolocationButton extends mixin(Control, [ActivatableMixin, ListenerOrganizerMixin]) {\n  /**\n   * @param {GeolocationButtonOptions} [options={}]\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-geolocation'\n    options.singleButton = true\n    options.element = $('<button>').get(0)\n\n    super(options)\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNamePushed_ = this.className_ + '-pushed'\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.animated_ = options.animated\n\n    /**\n     * @type {StyleLike}\n     * @private\n     */\n    this.style_ = options.style || '#defaultStyle'\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxZoom_ = options.maxZoom\n\n    this.setTitle(this.getTitle() || this.getLocaliser().localiseUsingDictionary('GeolocationButton title'))\n\n    this.setTipLabel(this.getTipLabel() || this.getLocaliser().localiseUsingDictionary('GeolocationButton tipLabel'))\n\n    this.get$Element()\n      .addClass(this.className_)\n      .addClass(cssClasses.mainButton)\n      .html(this.getTitle())\n\n    addTooltip(this.get$Element(), this.getTipLabel())\n\n    /**\n     * @type {MessageDisplay}\n     * @private\n     */\n    this.buttonMessageDisplay_ = new MessageDisplay(this.get$Element())\n\n    this.get$Element().on('click touch', () => {\n      if (ol.has.GEOLOCATION) {\n        this.setActive(!this.getActive())\n      } else {\n        this.buttonMessageDisplay_.error(\n          this.getLocaliser().localiseUsingDictionary('geolocation geolocation-not-possible'),\n          this.getMap().get('mobile') ? {position: 'top middle'} : {}\n        )\n      }\n    })\n\n    this.layer_ = null\n    let geolocationOptions = { tracking: false }\n    if (options.hasOwnProperty('trackingOptions')) {\n      geolocationOptions.trackingOptions = options.trackingOptions\n    }\n    if (options.hasOwnProperty('projection')) {\n      geolocationOptions.projection = options.projection\n    }\n    this.followLocation_ = options.followLocation || false\n    this.geolocation_ = new ol.Geolocation(geolocationOptions)\n    this.geolocation_.on('error', () => {\n      this.buttonMessageDisplay_.error(\n        this.getLocaliser().localiseUsingDictionary('geolocation geolocation-not-possible'),\n        this.getMap().get('mobile') ? {position: 'top middle'} : {}\n      )\n      this.setActive(false)\n    })\n\n    this.on('change:active', e => this.activeChangeHandler_(e))\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (this.getMap()) {\n      this.getMap().getLayers().remove(this.layer_)\n    }\n\n    super.setMap(map)\n\n    if (map) {\n      let projection = map.getView().getProjection()\n      this.geolocation_.setProjection(projection)\n\n      let layerOptions = {source: new ol.source.Vector({projection: projection}), visible: true}\n      this.layer_ = new VectorLayer(layerOptions)\n\n      this.layer_.setStyle(map.get('styling').getStyle(this.style_))\n      map.get('styling').manageLayer(this.layer_)\n      map.getLayers().insertAt(1, this.layer_) // 0 is where the baseLayers are\n\n      this.activateOnMapChange()\n    }\n  }\n\n  changeHandler_ (options) {\n    let source = this.layer_.getSource()\n    source.clear()\n    let position = this.geolocation_.getPosition()\n    source.addFeature(new ol.Feature({geometry: new ol.geom.Point(position)}))\n\n    let circle = this.geolocation_.getAccuracyGeometry()\n    source.addFeature(new ol.Feature({geometry: circle}))\n    if (options.hasOwnProperty('initialRun') && options.initialRun) {\n      this.getMap().get('move').toExtent(circle.getExtent(), {animated: this.animated_, maxZoom: this.maxZoom_})\n    } else {\n      if (this.animated_) {\n        this.getMap().getView().animate({'center': position})\n      } else {\n        this.getMap().getView().setCenter(position)\n      }\n    }\n    if (options.hasOwnProperty('stopTracking')) {\n      this.geolocation_.setTracking(!options.stopTracking)\n    }\n  }\n\n  /**\n   * Show/Hide the geolocation on the map as point with a circle in the size of the accuracy around\n   */\n  activeChangeHandler_ () {\n    let active = this.getActive()\n    this.get$Element().toggleClass(this.classNamePushed_, active)\n    if (active) {\n      this.geolocation_.setTracking(true)\n      let position = this.geolocation_.getPosition()\n      if (position) {\n        this.changeHandler_({'stopTracking': !this.followLocation_, 'initialRun': true})\n        if (this.followLocation_) {\n          this.listenAt(this.geolocation_).on('change', e => this.changeHandler_(e))\n        }\n      } else {\n        this.listenAt(this.geolocation_).once('change', () => {\n          this.changeHandler_({'stopTracking': !this.followLocation_, 'initialRun': true})\n          if (this.followLocation_) {\n            this.listenAt(this.geolocation_).on('change', e => this.changeHandler_(e))\n          }\n        })\n      }\n    } else {\n      this.layer_.getSource().clear()\n      this.detachFrom(this.geolocation_, 'change')\n      this.geolocation_.setTracking(false)\n    }\n  }\n\n  /**\n   * Creates a circle around a given position with a given radius in meters in a desired projection\n   * @param {ol.Coordinate} position\n   * @param {ol.ProjectionLike} projection\n   * @param {number} meters\n   * @returns {ol.geom.Circle}\n   * @private\n   */\n  static makeCircle_ (position, projection, meters) {\n    // using assumption that earth is a sphere and that one degree in north/south direction\n    // on any point of the earth is 90/10000 km\n\n    let position4326 = ol.proj.transform(position, projection, 'EPSG:4326')\n\n    let secondPosition4326 = [position4326[0], position4326[1] +\n    meters / 1000 * 90 / 10000]\n\n    let secondPosition = ol.proj.transform(secondPosition4326, 'EPSG:4326', projection)\n\n    let radius = Math.abs(position[1] - secondPosition[1])\n\n    return new ol.geom.Circle(position, radius)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/GeoLocationButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 265,
    "kind": "typedef",
    "name": "GeolocationButtonOptions",
    "memberof": "src/controls/GeoLocationButton.js",
    "static": true,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButtonOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "animated",
        "description": "if the move on the map to the geoposition should be animated"
      },
      {
        "nullable": null,
        "types": [
          "StyleLike"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'#defaultStyle'",
        "defaultRaw": "'#defaultStyle'",
        "name": "style",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "maxZoom",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "active",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "GeolocationButtonOptions"
    }
  },
  {
    "__docId__": 266,
    "kind": "class",
    "name": "GeolocationButton",
    "memberof": "src/controls/GeoLocationButton.js",
    "static": true,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/GeoLocationButton.js",
    "importStyle": "{GeolocationButton}",
    "description": "This class provides a button to center the view on your current geoposition.",
    "lineNumber": 26,
    "interface": false,
    "expressionExtends": "mixin(Control, [ActivatableMixin, ListenerOrganizerMixin])"
  },
  {
    "__docId__": 267,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "GeolocationButtonOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "classNamePushed_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#classNamePushed_",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "animated_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#animated_",
    "access": "private",
    "description": "",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "style_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#style_",
    "access": "private",
    "description": "",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "StyleLike"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 271,
    "kind": "member",
    "name": "maxZoom_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#maxZoom_",
    "access": "private",
    "description": "",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "buttonMessageDisplay_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#buttonMessageDisplay_",
    "access": "private",
    "description": "",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "MessageDisplay"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "name": "layer_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#layer_",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "member",
    "name": "followLocation_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#followLocation_",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "member",
    "name": "geolocation_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#geolocation_",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "changeHandler_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#changeHandler_",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "activeChangeHandler_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton#activeChangeHandler_",
    "access": "public",
    "description": "Show/Hide the geolocation on the map as point with a circle in the size of the accuracy around",
    "lineNumber": 160,
    "params": [],
    "return": null
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "makeCircle_",
    "memberof": "src/controls/GeoLocationButton.js~GeolocationButton",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/GeoLocationButton.js~GeolocationButton.makeCircle_",
    "access": "private",
    "description": "Creates a circle around a given position with a given radius in meters in a desired projection",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.geom.Circle}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.ProjectionLike"
        ],
        "spread": false,
        "optional": false,
        "name": "projection",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "meters",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.geom.Circle"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "src/controls/HelpButton.js",
    "content": "import $ from 'jquery'\n\nimport { Control } from './Control'\nimport { checkFor, finishAllImages, mixin } from '../utilities'\nimport stripJsonComments from 'strip-json-comments'\nimport { Debug } from '../Debug'\n\nimport '../../less/helpbutton.less'\n\nimport 'polyfill!Array.prototype.includes'\nimport { ActivatableMixin } from './ActivatableMixin'\n\n/**\n * @typedef {g4uControlOptions} HelpButtonOptions\n * @property {object} [configControls={}]\n * @property {string} fileName of the json with the helptexts\n * @property {boolean} [active=false]\n */\n\n/**\n * Shows a help button. Loads an json file with the helptexts and images from the server.\n */\nexport class HelpButton extends mixin(Control, ActivatableMixin) {\n  /**\n   * @param {HelpButtonOptions} options\n   */\n  constructor (options) {\n    options.element = $('<div>')[0]\n    options.className = options.className || 'g4u-helpbutton'\n\n    super(options)\n\n    this.setTitle(this.getTitle() || this.getLocaliser().localiseUsingDictionary('HelpButton title'))\n    this.setTipLabel(this.getTipLabel() || options.localiser.localiseUsingDictionary('HelpButton tipLabel'))\n\n    /**\n     * @type {object}\n     * @private\n     */\n    this.configControls_ = options.configControls || {}\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.documentationFileName_ = options.fileName\n  }\n\n  createContent_ () {\n    let localiser = this.getMap().get('localiser')\n\n    let documentationObject = JSON.parse(stripJsonComments(this.contentData_))\n\n    if (checkFor(documentationObject, localiser.getCurrentLang())) {\n      this.language = localiser.getCurrentLang()\n    } else if (checkFor(documentationObject, localiser.getDefaultLang())) {\n      this.language = localiser.getDefaultLang()\n    } else {\n      this.language = 'de'\n    }\n\n    let makeDocumentationTable = (documentation, language) => {\n      let $table = $('<table>').addClass(this.className_ + '-table')\n      if (localiser.isRtl()) {\n        $table.prop('dir', 'rtl')\n      }\n      let documentationLocalized = documentationObject[language]\n      let id\n      let imgData\n      let descrData\n      let joinWith\n      let imgElements\n      let $row\n      let $td\n      let visibleControls = []\n\n      if (this.configControls_ && this.configControls_.hasOwnProperty('onMap')) {\n        let findContainedControls = controlNamesArr => {\n          visibleControls = visibleControls.concat(controlNamesArr.map(name => {\n            return this.configControls_.hasOwnProperty(name) && this.configControls_[name].hasOwnProperty('controlType')\n              ? this.configControls_[name].controlType : name\n          }))\n\n          for (let controlName of controlNamesArr) {\n            if (this.configControls_.hasOwnProperty(controlName)) {\n              if (this.configControls_[controlName].hasOwnProperty('contains')) {\n                findContainedControls(this.configControls_[controlName].contains)\n              }\n            }\n          }\n        }\n\n        if (!this.getMap().get('mobile')) {\n          findContainedControls(this.configControls_.onMap.filter(c => c !== 'mobileControls'))\n        } else if (this.configControls_.hasOwnProperty('mobileControls') &&\n          this.configControls_.mobileControls.hasOwnProperty('contains')) {\n          findContainedControls(this.configControls_.mobileControls.contains)\n        }\n      }\n      for (id in documentationLocalized) {\n        if (documentationLocalized.hasOwnProperty(id) && documentationLocalized[id]) {\n          imgData = documentationLocalized[id].img\n          descrData = documentationLocalized[id].descr || ''\n          joinWith = documentationLocalized[id].joinWith || ''\n\n          if (visibleControls.includes(id)) {\n            $row = $('<tr>')\n\n            imgElements = `<td class=\"${this.className_}-img\"><div class=\"${this.className_}-imgDiv\">`\n            if (imgData) {\n              if ($.isArray(imgData)) {\n                for (let j = 0, jj = imgData.length; j < jj; j++) {\n                  imgData[j] = `<img class=\"${this.className_}-docuImg\" src=\"images/doc/${imgData[j]}\">`\n                }\n                imgElements += imgData.join(joinWith)\n              } else {\n                imgElements += `<img class=\"${this.className_}-docuImg\" src=\"images/doc/${imgData}\">`\n              }\n            }\n            imgElements += '</div></td>'\n\n            $row.append(imgElements)\n            $td = $('<td>').addClass(this.className_ + '-descr')\n            if ($.isArray(descrData)) {\n              $td.append(descrData.join('<p>'))\n            } else {\n              $td.append(descrData)\n            }\n            $row.append($td)\n          }\n          $table.append($row)\n        }\n      }\n      return $table\n    }\n\n    this.get$Element().append(makeDocumentationTable(documentationObject, this.language))\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    super.setMap(map)\n\n    if (map) {\n      this.activateOnMapChange()\n    }\n  }\n\n  /**\n   * @param {boolean} active\n   */\n  setActive (active) {\n    if (!this.loading_) { // all calls to setActive between the start and end of loading are ignored\n      if (active === true) {\n        if (!this.contentData_) {\n          this.loading_ = true\n\n          $.ajax(this.documentationFileName_, {dataType: 'text'})\n            .fail(() => {\n              let msg = 'Wasn\\'t able to load the documentation file ' + this.documentationFileName_\n              Debug.error(msg)\n              throw new Error(msg)\n            })\n            .done(data => {\n              this.contentData_ = data\n              this.createContent_()\n\n              finishAllImages(this.get$Element()).then(() => {\n                this.loading_ = false\n                super.setActive(active)\n              })\n            })\n        } else {\n          super.setActive(active)\n        }\n      } else {\n        super.setActive(active)\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/HelpButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "typedef",
    "name": "HelpButtonOptions",
    "memberof": "src/controls/HelpButton.js",
    "static": true,
    "longname": "src/controls/HelpButton.js~HelpButtonOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "configControls",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "of the json with the helptexts"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "active",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "HelpButtonOptions"
    }
  },
  {
    "__docId__": 283,
    "kind": "class",
    "name": "HelpButton",
    "memberof": "src/controls/HelpButton.js",
    "static": true,
    "longname": "src/controls/HelpButton.js~HelpButton",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/HelpButton.js",
    "importStyle": "{HelpButton}",
    "description": "Shows a help button. Loads an json file with the helptexts and images from the server.",
    "lineNumber": 23,
    "interface": false,
    "expressionExtends": "mixin(Control, ActivatableMixin)"
  },
  {
    "__docId__": 284,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "HelpButtonOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 285,
    "kind": "member",
    "name": "configControls_",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#configControls_",
    "access": "private",
    "description": "",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "documentationFileName_",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#documentationFileName_",
    "access": "private",
    "description": "",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "createContent_",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#createContent_",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 288,
    "kind": "member",
    "name": "language",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#language",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "setActive",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#setActive",
    "access": "public",
    "description": "",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "active",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "loading_",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#loading_",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "contentData_",
    "memberof": "src/controls/HelpButton.js~HelpButton",
    "static": false,
    "longname": "src/controls/HelpButton.js~HelpButton#contentData_",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "file",
    "name": "src/controls/InfoButton.js",
    "content": "import $ from 'jquery'\n\nimport { Attribution } from './Attribution'\nimport {Control} from './Control'\n\nimport '../../less/infobutton.less'\nimport { URL } from '../URLHelper'\nimport { ActivatableMixin } from './ActivatableMixin'\nimport { mixin } from '../utilities'\n\n/**\n * @typedef {g4uControlOptions} InfoButtonOptions\n * @property {URLLike} contentURL url providing content to be shown\n * @property {boolean} [attribution=true]\n * @property {boolean} [active=false]\n */\n\n/**\n * This control opens a window with showing some specified info text\n */\nexport class InfoButton extends mixin(Control, ActivatableMixin) {\n  /**\n   * @param {InfoButtonOptions} options\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-infobutton'\n    options.element = $('<div>')[0]\n\n    super(options)\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameAttributions_ = this.className_ + '-attributions'\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameContent_ = this.className_ + '-content'\n\n    this.setTitle(this.getLocaliser().localiseUsingDictionary('InfoPage title'))\n    this.setTipLabel(this.getLocaliser().localiseUsingDictionary('InfoPage tipLabel'))\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$content_ = $('<div>').addClass(this.classNameContent_)\n\n    this.get$Element()\n      .append(this.$content_)\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.attribution_ = options.attribution !== false\n\n    /**\n     * @type {URL}\n     * @private\n     */\n    this.contentURL_ = URL.extractFromConfig(options, 'contentURL')\n\n    if (this.attribution_) {\n      /**\n       * @type {jQuery}\n       * @private\n       */\n      this.$attributions_ = $('<div>')\n\n      this.get$Element()\n        .append($('<h2>').html(this.getLocaliser().localiseUsingDictionary('InfoPage copyrightTitle')))\n        .append(this.$attributions_)\n\n      /**\n       * @type {Attribution}\n       * @private\n       */\n      this.attributionControl_ = new Attribution({\n        target: this.get$Element()[0],\n        localiser: this.getLocaliser(),\n        collapsible: false,\n        className: this.classNameAttributions_\n      })\n    }\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loaded_ = false\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    let oldMap = this.getMap()\n\n    if (oldMap && this.attribution_) {\n      oldMap.removeControl(this.attributionControl_)\n    }\n\n    super.setMap(map)\n\n    if (map) {\n      if (this.contentURL_) {\n        this.contentURL_.extractParamsFromMap(map)\n      }\n\n      if (this.attribution_) {\n        map.addControl(this.attributionControl_)\n      }\n\n      this.activateOnMapChange()\n    }\n  }\n\n  /**\n   * @param {boolean} active\n   */\n  setActive (active) {\n    if (active) {\n      if (this.getMap().get('localiser').isRtl()) {\n        this.get$Element().prop('dir', 'rtl')\n      } else {\n        this.get$Element().prop('dir', undefined)\n      }\n      if (!this.loaded_ && this.contentURL_) {\n        $.get(this.contentURL_.finalize(), (data) => {\n          this.$content_.html(data)\n          super.setActive(active)\n          this.loaded_ = true\n        })\n      } else {\n        super.setActive(active)\n      }\n    } else {\n      super.setActive(active)\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/InfoButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "typedef",
    "name": "InfoButtonOptions",
    "memberof": "src/controls/InfoButton.js",
    "static": true,
    "longname": "src/controls/InfoButton.js~InfoButtonOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "URLLike"
        ],
        "spread": false,
        "optional": false,
        "name": "contentURL",
        "description": "url providing content to be shown"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "attribution",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "active",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "InfoButtonOptions"
    }
  },
  {
    "__docId__": 298,
    "kind": "class",
    "name": "InfoButton",
    "memberof": "src/controls/InfoButton.js",
    "static": true,
    "longname": "src/controls/InfoButton.js~InfoButton",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/InfoButton.js",
    "importStyle": "{InfoButton}",
    "description": "This control opens a window with showing some specified info text",
    "lineNumber": 21,
    "interface": false,
    "expressionExtends": "mixin(Control, ActivatableMixin)"
  },
  {
    "__docId__": 299,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "InfoButtonOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "classNameAttributions_",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#classNameAttributions_",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "classNameContent_",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#classNameContent_",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "$content_",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#$content_",
    "access": "private",
    "description": "",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "attribution_",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#attribution_",
    "access": "private",
    "description": "",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "contentURL_",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#contentURL_",
    "access": "private",
    "description": "",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "URL"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 305,
    "kind": "member",
    "name": "$attributions_",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#$attributions_",
    "access": "private",
    "description": "",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 306,
    "kind": "member",
    "name": "attributionControl_",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#attributionControl_",
    "access": "private",
    "description": "",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "Attribution"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "loaded_",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#loaded_",
    "access": "private",
    "description": "",
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "setActive",
    "memberof": "src/controls/InfoButton.js~InfoButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/InfoButton.js~InfoButton#setActive",
    "access": "public",
    "description": "",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "active",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 311,
    "kind": "file",
    "name": "src/controls/LanguageSwitcherButton.js",
    "content": "import $ from 'jquery'\n\nimport {Control} from './Control'\nimport { addTooltip } from '../html/html'\nimport {Debug} from '../Debug'\n\nimport '../../less/languageControls.less'\n\n/**\n * @typedef {g4uControlOptions} LanguageSwitcherButtonOptions\n */\n\n/**\n * A button to switch the language that is being used.\n * Works if only two languages are configured.\n */\nexport class LanguageSwitcherButton extends Control {\n  /**\n   * @param {LanguageSwitcherButtonOptions} options\n   */\n  constructor (options = {}) {\n    options.element = $('<button>').get(0)\n    options.singleButton = true\n    options.className = options.className || 'g4u-languageswitcher'\n\n    super(options)\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$button_ = this.get$Element().addClass(this.className_ + '-button')\n\n    let languages = this.getLocaliser().getAvailableLanguages()\n\n    if (languages.length < 2) {\n      Debug.info('You do not have any languages to switch between.')\n      Debug.info('Could it be that you forgot to disable languageSwitcherButton?')\n    } else if (languages.length > 2) {\n      Debug.info('You have more than 2 languages to switch between.')\n      Debug.info('In this case you need to use languageSwitcherMenu.')\n    }\n\n    this.$button_.on('click', () => {\n      let targetLanguage = languages[1 - languages.indexOf(this.getLocaliser().getCurrentLang())]\n      this.getLocaliser().setCurrentLang(targetLanguage)\n    })\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (map) {\n      this.$button_.html(this.getLocaliser().getCurrentLang())\n      addTooltip(this.$button_, this.getLocaliser().localiseUsingDictionary('LanguageSwitcherButton tipLabel'))\n    }\n\n    super.setMap(map)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/LanguageSwitcherButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 312,
    "kind": "typedef",
    "name": "LanguageSwitcherButtonOptions",
    "memberof": "src/controls/LanguageSwitcherButton.js",
    "static": true,
    "longname": "src/controls/LanguageSwitcherButton.js~LanguageSwitcherButtonOptions",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "LanguageSwitcherButtonOptions"
    }
  },
  {
    "__docId__": 313,
    "kind": "class",
    "name": "LanguageSwitcherButton",
    "memberof": "src/controls/LanguageSwitcherButton.js",
    "static": true,
    "longname": "src/controls/LanguageSwitcherButton.js~LanguageSwitcherButton",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/LanguageSwitcherButton.js",
    "importStyle": "{LanguageSwitcherButton}",
    "description": "A button to switch the language that is being used.\nWorks if only two languages are configured.",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/controls/Control.js~Control"
    ]
  },
  {
    "__docId__": 314,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/LanguageSwitcherButton.js~LanguageSwitcherButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LanguageSwitcherButton.js~LanguageSwitcherButton#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "LanguageSwitcherButtonOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "$button_",
    "memberof": "src/controls/LanguageSwitcherButton.js~LanguageSwitcherButton",
    "static": false,
    "longname": "src/controls/LanguageSwitcherButton.js~LanguageSwitcherButton#$button_",
    "access": "private",
    "description": "",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/LanguageSwitcherButton.js~LanguageSwitcherButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LanguageSwitcherButton.js~LanguageSwitcherButton#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 317,
    "kind": "file",
    "name": "src/controls/LanguageSwitcherMenu.js",
    "content": "import $ from 'jquery'\n\nimport {Dropdown} from '../html/Dropdown'\nimport { addTooltip } from '../html/html'\nimport {Control} from './Control'\nimport { cssClasses, keyCodes } from '../globals'\nimport {Debug} from '../Debug'\n\nimport '../../less/languageControls.less'\nimport {ListenerOrganizerMixin} from '../ListenerOrganizerMixin'\nimport {mixin} from '../utilities'\nimport { ActivatableMixin } from './ActivatableMixin'\n\n/**\n * @typedef {g4uControlOptions} LanguageSwitcherMenuOptions\n * @property {boolean} [showLongLanguage=false]\n * @property {boolean} [active=false]\n */\n\n/**\n * A button to switch the language that is being used.\n */\nexport class LanguageSwitcherMenu extends mixin(Control, [ListenerOrganizerMixin, ActivatableMixin]) {\n  /**\n   * @param {LanguageSwitcherMenuOptions} options\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-languageswitchermenu'\n    options.element = $('<div>').get(0)\n    options.singleButton = false\n\n    super(options)\n\n    this.showLongLanguage_ = options.showLongLanguage || false\n\n    this.setTitle(this.getLocaliser().getCurrentLang())\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$button_ = $('<button>')\n      .addClass(this.className_ + '-button')\n      .addClass(cssClasses.mainButton)\n\n    if (this.showLongLanguage_) {\n      this.$button_.addClass(this.className_ + '-lang-long')\n    }\n\n    this.get$Element().append(this.$button_)\n\n    let dropdownOptions = {'className': 'g4u-dropdown'}\n\n    /**\n     * @type {Dropdown}\n     * @private\n     */\n    this.dropdown_ = new Dropdown(dropdownOptions)\n    this.get$Element().append(this.dropdown_.get$Element())\n\n    let languages = this.getLocaliser().getAvailableLanguages()\n\n    if (languages.length < 2) {\n      Debug.info('You do not have any languages to switch between.')\n      Debug.info('Could it be that you forgot to disable languageSwitcherMenu?')\n    } else if (languages.length === 2) {\n      Debug.info('You only have 2 languages to switch between.')\n      Debug.info('What about using languageSwitcherButton in place of languageSwitcherMenu?')\n    }\n\n    this.dropdown_.setEntries(languages,\n      languages.map(l => `${l.toUpperCase()} - ${this.getLocaliser().localiseUsingDictionary(l)}`))\n\n    this.dropdown_.on('select', () => this.getLocaliser().setCurrentLang((this.dropdown_.getValue())))\n\n    this.get$Element().on('keydown', e => {\n      if (e.which === keyCodes.ESCAPE) {\n        this.setActive(false)\n        $(this.getMap().getViewport()).focus()\n      }\n    })\n\n    this.on('change:active', () => this.handleActiveChange_())\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (this.getMap()) {\n      this.detachAllListeners()\n\n      this.setActive(false)\n    }\n\n    super.setMap(map)\n\n    if (map) {\n      this.collapse_ = true\n\n      // The following does not work in 'on('click')' as it relies on useCapture; all click events will be\n      // dispatched to the listener before being dispatched to any EventTarget beneath it in the DOM tree.\n      this.listenAt(document).on('click', () => {\n        this.collapse_ = true\n      }, true)\n\n      this.listenAt([\n        $(this.getMap().getViewport()).find('.ol-overlaycontainer-stopevent'),\n        document\n      ]).on('click', () => {\n        if (this.collapse_ && this.getActive()) {\n          this.setActive(false)\n        }\n      })\n\n      this.listenAt(this.get$Element()).on('click', () => {\n        this.collapse_ = false\n        this.setActive(!this.getActive())\n      })\n\n      let curLang = this.getLocaliser().getCurrentLang()\n      if (!this.showLongLanguage_) {\n        this.$button_.html(curLang.toUpperCase())\n      } else {\n        this.$button_.html(curLang.toUpperCase() + ' - ' + this.getLocaliser().localiseUsingDictionary(curLang))\n      }\n\n      addTooltip(this.$button_, this.getLocaliser().localiseUsingDictionary('LanguageSwitcherMenu tipLabel'))\n\n      this.activateOnMapChange()\n    }\n  }\n\n  handleActiveChange_ () {\n    let active = this.getActive()\n    this.dropdown_.setActivated(this.getLocaliser().getCurrentLang())\n    if (active) {\n      this.collapse_ = false\n      this.dropdown_.slideDown(this.getMap().get('mobile'))\n    } else {\n      this.dropdown_.slideUp(this.getMap().get('mobile'))\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/LanguageSwitcherMenu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 318,
    "kind": "typedef",
    "name": "LanguageSwitcherMenuOptions",
    "memberof": "src/controls/LanguageSwitcherMenu.js",
    "static": true,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenuOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "showLongLanguage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "active",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "LanguageSwitcherMenuOptions"
    }
  },
  {
    "__docId__": 319,
    "kind": "class",
    "name": "LanguageSwitcherMenu",
    "memberof": "src/controls/LanguageSwitcherMenu.js",
    "static": true,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/LanguageSwitcherMenu.js",
    "importStyle": "{LanguageSwitcherMenu}",
    "description": "A button to switch the language that is being used.",
    "lineNumber": 23,
    "interface": false,
    "expressionExtends": "mixin(Control, [ListenerOrganizerMixin, ActivatableMixin])"
  },
  {
    "__docId__": 320,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "LanguageSwitcherMenuOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "showLongLanguage_",
    "memberof": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu",
    "static": false,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu#showLongLanguage_",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "member",
    "name": "$button_",
    "memberof": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu",
    "static": false,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu#$button_",
    "access": "private",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 323,
    "kind": "member",
    "name": "dropdown_",
    "memberof": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu",
    "static": false,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu#dropdown_",
    "access": "private",
    "description": "",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "Dropdown"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "collapse_",
    "memberof": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu",
    "static": false,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu#collapse_",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "handleActiveChange_",
    "memberof": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LanguageSwitcherMenu.js~LanguageSwitcherMenu#handleActiveChange_",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 330,
    "kind": "file",
    "name": "src/controls/LayerSelector.js",
    "content": "import $ from 'jquery'\n\nimport { GroupLayer } from '../layers/GroupLayer'\nimport { ButtonBox } from '../html/ButtonBox'\nimport { Control } from './Control'\nimport { offset, mixin } from '../utilities'\nimport { Window } from '../html/Window'\n\nimport '../../less/layerselector.less'\nimport { ListenerOrganizerMixin } from '../ListenerOrganizerMixin'\nimport { URL } from '../URLHelper'\n\n/**\n * @typedef {g4uControlOptions} LayerSelectorOptions\n * @property {boolean} [toggle=true] if the layers are toggable\n * @property {boolean} [collapsible=true] if the menu should be collapsible\n * @property {boolean} [collapsed=false] if the menu starts collapsed\n * @property {number} [minVisibleEntries=6] amount of minimal visible elements\n * @property {string} layerGroupName the name of the layerGroup this selector is connected to. For example 'baseLayers'\n * @property {number} [minLayerAmount=1] the minimum number of layers which should be visible to show this selector\n */\n\n/**\n * This control shows Buttons to let you select the layer you want to see on the map.\n * It supports categories and nested categories - each {GroupLayer}-Object will be interpreted as a category.\n */\nexport class LayerSelector extends mixin(Control, ListenerOrganizerMixin) {\n  /**\n   * @param {LayerSelectorOptions} options\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-layerselector'\n    options.element = $('<div>')[0]\n    options.singleButton = false\n\n    super(options)\n\n    /**\n     * @type {String}\n     * @private\n     */\n    this.layerGroupName_ = options.layerGroupName\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLayerAmount_ = options.hasOwnProperty('minLayerAmount') ? options.minLayerAmount : 1\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsible_ = !options.hasOwnProperty('collapsible') || options.collapsible\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed || false\n\n    /**\n     * classNames\n     * @type {object.<string, string>}\n     * @protected\n     */\n    this.classNames_ = {\n      menu: this.getClassName() + '-menu',\n      layerButton: this.getClassName() + '-layerbutton',\n      active: this.getClassName() + '-active',\n      checkbox: this.getClassName() + '-checkbox'\n    }\n\n    /**\n     * @type {ButtonBox}\n     * @private\n     */\n    this.menu_ = new ButtonBox({\n      element: this.get$Element(),\n      className: this.getClassName(),\n      title: this.getLocaliser().selectL10N(this.getTitle()),\n      collapsible: this.collapsible_,\n      collapsed: this.collapsed_\n    })\n\n    this.menu_.on('change:collapsed', () => this.dispatchEvent('change:size'))\n\n    this.get$Element().append(this.menu_.get$Element())\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.toggle_ = options.toggle || true\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minVisibleButtons_ = options.minVisibleEntries || 5\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = true\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getCollapsible () {\n    return this.collapsible_\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getCollapsed () {\n    return this.menu_.getCollapsed()\n  }\n\n  /**\n   * @param {boolean} collapsed\n   * @param {boolean} silent\n   */\n  setCollapsed (collapsed, silent) {\n    if (collapsed !== this.menu_.getCollapsed()) {\n      this.menu_.setCollapsed(collapsed, silent)\n    }\n  }\n\n  addWindowToButton ($button, layer) {\n    let windowConfig = layer.get('window')\n\n    let window = new Window({\n      map: this.getMap()\n    })\n\n    if (!this.$windowContainer_) {\n      this.$windowContainer_ = $('<span>')\n      this.get$Element().append(this.$windowContainer_)\n    }\n\n    this.$windowContainer_.append(window.get$Element())\n\n    window.get$Element().attr('data-layer-0', layer.get('id'))\n\n    let content\n\n    let showWindow = () => {\n      if (this.getMap().get('localiser').isRtl()) {\n        window.get$Body().prop('dir', 'rtl')\n      } else {\n        window.get$Body().prop('dir', undefined)\n      }\n      window.get$Body().html(content)\n      window.setVisible(true)\n    }\n\n    let hideWindow = () => {\n      window.setVisible(false)\n    }\n\n    this.listenAt($button).on('click', () => {\n      if (layer.getVisible()) {\n        if (!content) {\n          let url = URL.extractFromConfig(windowConfig, 'url', undefined, this.getMap())\n          $.get(url.finalize(), data => {\n            content = data\n            showWindow()\n          })\n        } else {\n          showWindow()\n        }\n      } else {\n        hideWindow()\n      }\n    })\n  }\n\n  /**\n   * this method builds a button for a layer. It toggles visibility if you click on it\n   * @param {ol.layer.Base} layer\n   * @param {jQuery} $target\n   */\n  buildLayerButton (layer, $target) {\n    if (layer.get('available')) {\n      let $button = $('<button>')\n        .addClass(this.classNames_.layerButton)\n        .attr('id', layer.get('id'))\n        .html(layer.get('title'))\n\n      if (this.getMap().get('localiser').isRtl()) {\n        $button.prop('dir', 'rtl')\n      }\n\n      let activeClassName = this.classNames_.menu + '-active'\n\n      this.listenAt($button).on('click', () => {\n        if (this.toggle_) {\n          layer.setVisible(!layer.getVisible())\n        } else {\n          layer.setVisible(true)\n        }\n        this.dispatchEvent({\n          type: 'click:layer',\n          layer: layer\n        })\n      })\n\n      if (layer.getVisible()) {\n        $button.addClass(activeClassName)\n      }\n\n      this.listenAt(layer).on('change:visible', () => {\n        $button.toggleClass(activeClassName, layer.getVisible())\n        if (!layer.getVisible()) {\n          $button.removeClass('g4u-layer-loading')\n        }\n      })\n\n      if (layer.get('window')) {\n        this.addWindowToButton($button, layer)\n      }\n\n      this.listenAt(layer).on('loadcountstart', () => {\n        $button.addClass('g4u-layer-loading')\n      })\n\n      this.listenAt(layer).on('loadcountend', () => {\n        $button.removeClass('g4u-layer-loading')\n      })\n\n      $target.append($button)\n\n      return $button\n    }\n  }\n\n  /**\n   * builds a category button which collapses on click\n   * @param {GroupLayer} categoryLayer\n   * @param {jQuery} $target\n   */\n  buildCategoryButton (categoryLayer, $target) {\n    let $nextTarget = $target\n\n    if (categoryLayer.get('available')) {\n      let activateChildren = categoryLayer.get('activateChildren') !== false\n\n      let menu = new ButtonBox({\n        className: this.classNames_.menu,\n        title: this.getLocaliser().selectL10N(categoryLayer.get('title')),\n        rtl: this.getMap().get('localiser').isRtl(),\n        titleButton: activateChildren,\n        collapsed: !categoryLayer.countChildrenVisible() && (categoryLayer.get('collapsed') !== false),\n        id: categoryLayer.get('id')\n      })\n\n      let countChildren = categoryLayer.countChildren()\n      let countVisibleChildren = categoryLayer.countChildrenVisible()\n\n      let updateButtonActivities = () => {\n        if (countVisibleChildren === 0) {\n          menu.setCollapseButtonActive(false)\n          if (activateChildren) {\n            menu.setTitleButtonActive(false)\n          }\n        } else if (countVisibleChildren === countChildren) {\n          menu.setCollapseButtonActive(true)\n          if (activateChildren) {\n            menu.setTitleButtonActive(true)\n          }\n        } else {\n          menu.setCollapseButtonActive(true)\n          if (activateChildren) {\n            menu.setTitleButtonActive(false)\n          }\n        }\n      }\n\n      updateButtonActivities()\n\n      let forEachChildLayer = childLayer => {\n        this.listenAt(childLayer)\n          .on(['change:visible', 'change:childVisible'], e => {\n            let changedLayer = e.child || childLayer\n\n            if (changedLayer.getVisible()) {\n              countVisibleChildren++\n            } else {\n              countVisibleChildren--\n            }\n\n            updateButtonActivities()\n          })\n      }\n\n      categoryLayer.getLayers().forEach(forEachChildLayer)\n\n      this.listenAt(categoryLayer.getLayers())\n        .on('add', e => forEachChildLayer(e.element))\n\n      this.listenAt(menu)\n        .on('title:click', () => {\n          let visible = countVisibleChildren < countChildren\n          categoryLayer.recursiveForEach(childLayer => {\n            if (!(childLayer instanceof GroupLayer)) {\n              childLayer.setVisible(visible)\n            }\n          })\n          this.dispatchEvent({\n            type: 'click:layer',\n            layer: categoryLayer\n          })\n        })\n\n      $target.append(menu.get$Element())\n\n      $nextTarget = menu.get$Body()\n\n      this.listenAt(menu)\n        .on('change:collapsed', () => {\n          this.dispatchEvent('change:size')\n          this.changed()\n        })\n\n      for (let childLayer of categoryLayer.getLayers().getArray()) {\n        this.chooseButtonBuilder(childLayer, $nextTarget)\n      }\n\n      return menu\n    } else {\n      for (let childLayer of categoryLayer.getLayers().getArray()) {\n        this.chooseButtonBuilder(childLayer, $nextTarget)\n      }\n    }\n  }\n\n  buildWMSButton (wmsLayer, $target) {\n    if (wmsLayer.get('available')) {\n      let layerButtons = wmsLayer.get('buttons')\n\n      if (layerButtons && layerButtons.length) {\n        let countActiveButtons = 0\n        let wmsSource = wmsLayer.getSource()\n\n        let allLayersParams = []\n        let allQueryLayersParams = []\n\n        let featureInfoCheckable = wmsSource.isFeatureInfoCheckable()\n\n        let menu = new ButtonBox({\n          className: this.classNames_.menu,\n          title: this.getLocaliser().selectL10N(wmsLayer.get('title')),\n          titleButton: true,\n          collapsed: wmsLayer.get('collapsed') !== false,\n          id: wmsLayer.get('id')\n        })\n\n        $target.append(menu.get$Element())\n\n        this.listenAt(menu)\n          .on('change:collapsed', () => {\n            this.dispatchEvent('change:size')\n            this.changed()\n          })\n\n        let activeClassName = this.classNames_.menu + '-active'\n\n        for (let layerButton of layerButtons) {\n          allLayersParams = allLayersParams.concat(layerButton.LAYERS)\n          allQueryLayersParams = allQueryLayersParams.concat(layerButton.QUERY_LAYERS)\n\n          let $button = $('<button>')\n            .addClass(this.classNames_.layerButton)\n            .html(this.getLocaliser().selectL10N(layerButton.title))\n          let $checkbox = $('<input type=\"checkbox\">')\n            .addClass(this.classNames_.checkbox)\n\n          menu.get$Body().append($button)\n\n          let toggleButtonActive, setCheckboxActive\n\n          toggleButtonActive = () => {\n            let active = !wmsSource.getWMSLayersVisible(layerButton.LAYERS)\n\n            if (active) {\n              countActiveButtons++\n            } else {\n              countActiveButtons--\n            }\n\n            $button.toggleClass(activeClassName, active)\n\n            wmsSource.toggleWMSLayers(layerButton.LAYERS, active)\n\n            if (!active && featureInfoCheckable) {\n              setCheckboxActive(false)\n            }\n\n            if (countActiveButtons === 0) {\n              wmsLayer.setVisible(false)\n              menu.setCollapseButtonActive(false)\n              menu.setTitleButtonActive(false)\n            } else if (countActiveButtons === layerButtons.length) {\n              wmsLayer.setVisible(true)\n              menu.setCollapseButtonActive(true)\n              menu.setTitleButtonActive(true)\n            } else {\n              wmsLayer.setVisible(true)\n              menu.setCollapseButtonActive(true)\n              menu.setTitleButtonActive(false)\n            }\n            this.dispatchEvent({\n              type: 'click:layer',\n              layer: wmsLayer,\n              wmsLayer: true\n            })\n          }\n\n          setCheckboxActive = checkboxActive => {\n            if (checkboxActive && !wmsSource.getWMSLayersVisible(layerButton.LAYERS)) {\n              toggleButtonActive()\n            }\n            wmsSource.toggleWMSQueryLayers(layerButton.QUERY_LAYERS, checkboxActive)\n            $checkbox.prop('checked', checkboxActive)\n          }\n\n          this.listenAt($button)\n            .on('click', () => {\n              toggleButtonActive()\n            })\n\n          if (featureInfoCheckable) {\n            $button.append($checkbox)\n            this.listenAt($checkbox).on('click', e => {\n              setCheckboxActive($checkbox.is(':checked'))\n              e.stopPropagation()\n            })\n          }\n        }\n\n        this.listenAt(menu).on('title:click', () => {\n          let activateAll = countActiveButtons < layerButtons.length\n          if (activateAll) {\n            wmsSource.toggleWMSLayers(allLayersParams, true)\n            countActiveButtons = layerButtons.length\n          } else {\n            wmsSource.toggleWMSLayers(allLayersParams, false)\n            if (featureInfoCheckable) {\n              wmsSource.toggleWMSQueryLayers(allQueryLayersParams, false)\n              menu.get$Body().find('input[type=checkbox]').prop('checked', false)\n            }\n            countActiveButtons = 0\n          }\n\n          menu.get$Body().find('button').toggleClass(activeClassName, activateAll)\n          wmsLayer.setVisible(activateAll)\n          menu.setCollapseButtonActive(activateAll)\n          menu.setTitleButtonActive(activateAll)\n\n          this.dispatchEvent({\n            type: 'click:category',\n            layer: wmsLayer,\n            wmsLayer: true\n          })\n        })\n\n        return menu\n      } else {\n        return this.buildLayerButton(wmsLayer, $target)\n      }\n    }\n  }\n\n  /**\n   * This method chooses the right builder function\n   * @param {ol.layer.Base} layer\n   * @param {jQuery} $target\n   */\n  chooseButtonBuilder (layer, $target) {\n    if (layer instanceof GroupLayer) {\n      return this.buildCategoryButton(layer, $target)\n    } else if (layer.getSource && layer.getSource() && layer.getSource().isFeatureInfoCheckable) {\n      return this.buildWMSButton(layer, $target)\n    } else {\n      return this.buildLayerButton(layer, $target)\n    }\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (this.getMap()) {\n      this.clear()\n    }\n\n    super.setMap(map)\n\n    if (map) {\n      this.build()\n    }\n  }\n\n  clear () {\n    this.detachAllListeners()\n    this.menu_.get$Body().empty()\n  }\n\n  build () {\n    this.layers_ = this.getMap().get(this.layerGroupName_).getLayers()\n    if (this.layers_.getLength() >= this.minLayerAmount_) {\n      this.setVisible(true)\n      let menuFunctions = new ButtonBox({className: this.classNames_.menu})\n      for (let layer of this.layers_.getArray()) {\n        this.chooseButtonBuilder(layer, this.menu_.get$Body())\n      }\n      menuFunctions.giveLastVisible(this.get$Element().children(':last-child').children(':last-child'))\n      this.listenAt(this.menu_).on('change:collapsed', () => this.dispatchEvent('change:size'))\n    } else {\n      this.setVisible(false)\n    }\n  }\n\n  rebuild () {\n    this.clear()\n    this.build()\n  }\n\n  /**\n   * Returns true if the control is squeezable in the given dimension. Used by Positioning.\n   * @param {string} dimension\n   * @returns {boolean}\n   */\n  isSqueezable (dimension) {\n    return dimension === 'height'\n  }\n\n  /**\n   * Squeezes the control in the given dimension by the provided value. Used by Positioning\n   * Returns the value the control could get squeezed by.\n   * @param {string} dimension\n   * @param {number} value\n   * @returns {number}\n   */\n  squeezeBy (dimension, value) {\n    if (dimension === 'height') {\n      let $contentBox = this.get$Element().find(`.${this.getClassName()}-content`)\n      let $buttons = $contentBox.find('button:visible')\n        .filter(`.${this.getClassName()}-layerbutton,.${this.getClassName()}-menu-titlebutton`)\n\n      if ($buttons.length > 1) {\n        let height = $contentBox.height()\n        let buttonHeight = offset($buttons.eq(1), $buttons.eq(0)).top\n\n        let newHeight = Math.max(buttonHeight * this.minVisibleButtons_, height - value)\n\n        if (height > newHeight) {\n          $contentBox.css('max-height', newHeight)\n          return height - newHeight\n        }\n      }\n    }\n\n    return 0\n  }\n\n  beforePositioning () {\n    this.scrolled_ = this.menu_.get$Body().scrollTop()\n  }\n\n  /**\n   * used by positioning\n   */\n  afterPositioning () {\n    this.menu_.get$Body().scrollTop(this.scrolled_)\n  }\n\n  /**\n   * Removes the squeeze. Used by Positioning.\n   * @param {string} dimension\n   */\n  release (dimension) {\n    if (dimension === 'height') {\n      this.get$Element().find(`.${this.getClassName()}-content`).css('max-height', '')\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/LayerSelector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 331,
    "kind": "typedef",
    "name": "LayerSelectorOptions",
    "memberof": "src/controls/LayerSelector.js",
    "static": true,
    "longname": "src/controls/LayerSelector.js~LayerSelectorOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "toggle",
        "description": "if the layers are toggable"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "collapsible",
        "description": "if the menu should be collapsible"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "collapsed",
        "description": "if the menu starts collapsed"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "6",
        "defaultRaw": 6,
        "name": "minVisibleEntries",
        "description": "amount of minimal visible elements"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerGroupName",
        "description": "the name of the layerGroup this selector is connected to. For example 'baseLayers'"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "minLayerAmount",
        "description": "the minimum number of layers which should be visible to show this selector"
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "LayerSelectorOptions"
    }
  },
  {
    "__docId__": 332,
    "kind": "class",
    "name": "LayerSelector",
    "memberof": "src/controls/LayerSelector.js",
    "static": true,
    "longname": "src/controls/LayerSelector.js~LayerSelector",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/LayerSelector.js",
    "importStyle": "{LayerSelector}",
    "description": "This control shows Buttons to let you select the layer you want to see on the map.\nIt supports categories and nested categories - each {GroupLayer}-Object will be interpreted as a category.",
    "lineNumber": 27,
    "interface": false,
    "expressionExtends": "mixin(Control, ListenerOrganizerMixin)"
  },
  {
    "__docId__": 333,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayerSelectorOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 334,
    "kind": "member",
    "name": "layerGroupName_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#layerGroupName_",
    "access": "private",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 335,
    "kind": "member",
    "name": "minLayerAmount_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#minLayerAmount_",
    "access": "private",
    "description": "",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 336,
    "kind": "member",
    "name": "collapsible_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#collapsible_",
    "access": "private",
    "description": "",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 337,
    "kind": "member",
    "name": "collapsed_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#collapsed_",
    "access": "private",
    "description": "",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "classNames_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#classNames_",
    "access": "protected",
    "description": "classNames",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "object.<string, string>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 339,
    "kind": "member",
    "name": "menu_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#menu_",
    "access": "private",
    "description": "",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "ButtonBox"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "toggle_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#toggle_",
    "access": "private",
    "description": "",
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 341,
    "kind": "member",
    "name": "minVisibleButtons_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#minVisibleButtons_",
    "access": "private",
    "description": "",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 342,
    "kind": "member",
    "name": "visible_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#visible_",
    "access": "private",
    "description": "",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "getCollapsible",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#getCollapsible",
    "access": "public",
    "description": "",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "getCollapsed",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#getCollapsed",
    "access": "public",
    "description": "",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "setCollapsed",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#setCollapsed",
    "access": "public",
    "description": "",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "collapsed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "silent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "addWindowToButton",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#addWindowToButton",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [
      {
        "name": "$button",
        "types": [
          "*"
        ]
      },
      {
        "name": "layer",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 347,
    "kind": "member",
    "name": "$windowContainer_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#$windowContainer_",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "buildLayerButton",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#buildLayerButton",
    "access": "public",
    "description": "this method builds a button for a layer. It toggles visibility if you click on it",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.layer.Base"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$target",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "buildCategoryButton",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#buildCategoryButton",
    "access": "public",
    "description": "builds a category button which collapses on click",
    "lineNumber": 246,
    "params": [
      {
        "nullable": null,
        "types": [
          "GroupLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryLayer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$target",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "buildWMSButton",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#buildWMSButton",
    "access": "public",
    "description": null,
    "lineNumber": 341,
    "undocument": true,
    "params": [
      {
        "name": "wmsLayer",
        "types": [
          "*"
        ]
      },
      {
        "name": "$target",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "method",
    "name": "chooseButtonBuilder",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#chooseButtonBuilder",
    "access": "public",
    "description": "This method chooses the right builder function",
    "lineNumber": 483,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.layer.Base"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$target",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 496,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "clear",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#clear",
    "access": "public",
    "description": null,
    "lineNumber": 508,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "build",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#build",
    "access": "public",
    "description": null,
    "lineNumber": 513,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "layers_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#layers_",
    "access": "public",
    "description": null,
    "lineNumber": 514,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "rebuild",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#rebuild",
    "access": "public",
    "description": null,
    "lineNumber": 528,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "isSqueezable",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#isSqueezable",
    "access": "public",
    "description": "Returns true if the control is squeezable in the given dimension. Used by Positioning.",
    "lineNumber": 538,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dimension",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "squeezeBy",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#squeezeBy",
    "access": "public",
    "description": "Squeezes the control in the given dimension by the provided value. Used by Positioning\nReturns the value the control could get squeezed by.",
    "lineNumber": 549,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dimension",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "beforePositioning",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#beforePositioning",
    "access": "public",
    "description": null,
    "lineNumber": 571,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 360,
    "kind": "member",
    "name": "scrolled_",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#scrolled_",
    "access": "public",
    "description": null,
    "lineNumber": 572,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "afterPositioning",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#afterPositioning",
    "access": "public",
    "description": "used by positioning",
    "lineNumber": 578,
    "params": [],
    "return": null
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "release",
    "memberof": "src/controls/LayerSelector.js~LayerSelector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LayerSelector.js~LayerSelector#release",
    "access": "public",
    "description": "Removes the squeeze. Used by Positioning.",
    "lineNumber": 586,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dimension",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 363,
    "kind": "file",
    "name": "src/controls/LinkButton.js",
    "content": "import $ from 'jquery'\n\nimport {Control} from './Control'\nimport { addTooltip } from '../html/html'\nimport {cssClasses} from '../globals'\n\nimport '../../less/linkbutton.less'\n\n/**\n * @typedef {g4uControlOptions} LinkButtonOptions\n * @property {string} [url]\n * @property {string} [linkTarget] set the link target (e.g. '_blank')\n */\n\n/**\n * provides a button which links to another page\n */\nexport class LinkButton extends Control {\n  /**\n   * @param {LinkButtonOptions} options\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-link-button'\n    options.singleButton = true\n    options.element = $('<a></a>').get(0)\n\n    super(options)\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = (options.hasOwnProperty('url')) ? options.url : ''\n\n    this.setTitle(this.getTitle() || this.getLocaliser().localiseUsingDictionary('LinkButton title'))\n    this.setTipLabel(this.getTipLabel() || this.getLocaliser().localiseUsingDictionary('LinkButton tipLabel'))\n\n    this.get$Element().attr('href', this.url_).addClass(this.className_)\n    if (options.hasOwnProperty('target')) {\n      this.get$Element().attr('target', options.target)\n    }\n    let $button = $('<button>')\n      .addClass(cssClasses.mainButton)\n      .html(this.getTitle())\n\n    addTooltip($button, this.getTipLabel())\n\n    this.get$Element().append($button)\n\n    if (options.hasOwnProperty('linkTarget')) {\n      this.get$Element().attr('target', options.linkTarget)\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/LinkButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 364,
    "kind": "typedef",
    "name": "LinkButtonOptions",
    "memberof": "src/controls/LinkButton.js",
    "static": true,
    "longname": "src/controls/LinkButton.js~LinkButtonOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "linkTarget",
        "description": "set the link target (e.g. '_blank')"
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "LinkButtonOptions"
    }
  },
  {
    "__docId__": 365,
    "kind": "class",
    "name": "LinkButton",
    "memberof": "src/controls/LinkButton.js",
    "static": true,
    "longname": "src/controls/LinkButton.js~LinkButton",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/LinkButton.js",
    "importStyle": "{LinkButton}",
    "description": "provides a button which links to another page",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/controls/Control.js~Control"
    ]
  },
  {
    "__docId__": 366,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/LinkButton.js~LinkButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/LinkButton.js~LinkButton#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "LinkButtonOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 367,
    "kind": "member",
    "name": "url_",
    "memberof": "src/controls/LinkButton.js~LinkButton",
    "static": false,
    "longname": "src/controls/LinkButton.js~LinkButton#url_",
    "access": "private",
    "description": "",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 368,
    "kind": "file",
    "name": "src/controls/Logo.js",
    "content": "import $ from 'jquery'\n\nimport {Control} from './Control'\n\nimport '../../less/logo.less'\n\n/**\n * @typedef {g4uControlOptions} LogoOptions\n * @property {string} [src='images/g4u-logo.png'] path to the image\n * @property {number} [width]\n * @property {number} [height]\n * @property {number} [opacity]\n * @property {string} [mode='both'] possible values: print, screen, both\n */\n\n/**\n * This is a class which provides a logo on the map.\n */\nexport class Logo extends Control {\n  /**\n   * @param {LogoOptions} options\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-logo'\n    options.element = $('<img>').get(0)\n    options.singleButton = false\n\n    super(options)\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.logo_ = options.hasOwnProperty('src')\n      ? options.src\n      : 'images/g4u-logo.png'\n\n    this.get$Element()\n      .on('load', () => this.changed)\n      .prop('src', this.logo_)\n      .addClass(this.className_)\n\n    if (options.mode === 'both' || options.mode === 'screen') {\n      this.get$Element()\n        .addClass(this.className_ + '-screen')\n    }\n\n    if (options.mode === 'both' || options.mode === 'print') {\n      this.get$Element()\n        .addClass(this.className_ + '-print')\n    }\n\n    if (options.width) {\n      this.get$Element().width(options.width)\n    }\n\n    if (options.height) {\n      this.get$Element().height(options.height)\n    }\n\n    if (options.opacity) {\n      this.get$Element().css('opacity', options.opacity.toString())\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/Logo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 369,
    "kind": "typedef",
    "name": "LogoOptions",
    "memberof": "src/controls/Logo.js",
    "static": true,
    "longname": "src/controls/Logo.js~LogoOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'images/g4u-logo.png'",
        "defaultRaw": "'images/g4u-logo.png'",
        "name": "src",
        "description": "path to the image"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "width",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "height",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "opacity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'both'",
        "defaultRaw": "'both'",
        "name": "mode",
        "description": "possible values: print, screen, both"
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "LogoOptions"
    }
  },
  {
    "__docId__": 370,
    "kind": "class",
    "name": "Logo",
    "memberof": "src/controls/Logo.js",
    "static": true,
    "longname": "src/controls/Logo.js~Logo",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/Logo.js",
    "importStyle": "{Logo}",
    "description": "This is a class which provides a logo on the map.",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "src/controls/Control.js~Control"
    ]
  },
  {
    "__docId__": 371,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/Logo.js~Logo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/Logo.js~Logo#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "LogoOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 372,
    "kind": "member",
    "name": "logo_",
    "memberof": "src/controls/Logo.js~Logo",
    "static": false,
    "longname": "src/controls/Logo.js~Logo#logo_",
    "access": "private",
    "description": "",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 373,
    "kind": "file",
    "name": "src/controls/MeasurementButton.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport {Control} from './Control'\nimport { cssClasses, keyCodes } from '../globals'\nimport {VectorLayer} from '../layers/VectorLayer'\n\nimport '../../less/measurement.less'\nimport { mixin } from '../utilities'\nimport { ActivatableMixin } from './ActivatableMixin'\n\n/**\n * @typedef {g4uControlOptions} MeasurementButtonOptions\n * @property {StyleLike} [style='#defaultStyle']\n * @property {string} type geometry type ('LineString', 'Polygon')\n * @property {number} [dimension=1] 1 for lines, 2 for polygons\n * @property {string} [atDrawEnd] if set to 'newMeasurement' the control will start a new measurement after\n *    completing a measurement. if set to 'closeWindow' the window will be closed.\n * @property {boolean} [active=false]\n */\n\n/**\n * Enables the user to draw lines or polygons on the map and displays the length or area.\n */\nexport class MeasurementButton extends mixin(Control, ActivatableMixin) {\n  /**\n   * @param {MeasurementButtonOptions} options\n   */\n  constructor (options = {}) {\n    options.element = $('<div>').get(0)\n    options.className = options.className || 'g4u-measurement'\n    options.singleButton = false\n\n    super(options)\n\n    /**\n     * @type {StyleLike}\n     * @private\n     */\n    this.style_ = options.style || '#defaultStyle'\n\n    if (!options.hasOwnProperty('type')) {\n      throw new Error('Measurement needs a type (Polygon, LineString, etc)')\n    }\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.type_ = options.type\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dimension_ = options.dimension || 1\n\n    this.setTitle(this.getTitle() ||\n      this.getLocaliser().localiseUsingDictionary('MeasurementButton dim' + this.dimension_ + ' title')\n    )\n    this.setTipLabel(this.getTipLabel() ||\n      this.getLocaliser().localiseUsingDictionary('MeasurementButton dim' + this.dimension_ + ' tipLabel')\n    )\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.atDrawEnd_ = options.atDrawEnd\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.value_ = 0\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$valueDisplay_ = $('<span>').html('0')\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$unitPlaceholder_ = $('<span>')\n\n    this.on('change:active', () => this.handleActiveChange_())\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (this.getMap()) {\n      this.getMap().getLayers().remove(this.layer_)\n      this.getMap().removeInteraction(this.drawInteraction_)\n    }\n\n    super.setMap(map)\n\n    if (map) {\n      this.get$Element()\n        .append(this.getLocaliser().localiseUsingDictionary('MeasurementButton dim' + this.dimension_ + ' measured'))\n        .append($('<span>')\n          .addClass(this.className_ + '-value')\n          .append(this.$valueDisplay_)\n          .append('&nbsp;')\n          .append(this.$unitPlaceholder_))\n        .append('<br/>')\n        .append(this.getLocaliser().localiseUsingDictionary('MeasurementButton doubleClickEndsMeasurement'))\n\n      /**\n       * @type {ol.proj.Projection}\n       * @private\n       */\n      this.measurementProjection_ = map.get('measurementProjection')\n\n      if (!this.measurementProjection_) {\n        throw new Error('MeasurementButton needs a measurementProjection. This is a global option of the map.')\n      }\n\n      if (this.dimension_ === 1) {\n        this.$unitPlaceholder_.replaceWith(this.measurementProjection_.getUnits())\n      }\n      if (this.dimension_ === 2) {\n        this.$unitPlaceholder_.replaceWith(this.measurementProjection_.getUnits() + '&sup2;')\n      }\n\n      /**\n       * @type {ol.TransformFunction}\n       * @private\n       */\n      this.measurementTransform_ = ol.proj.getTransform(map.getView().getProjection(), this.measurementProjection_)\n\n      /**\n       * @type {ol.source.Vector}\n       * @private\n       */\n      this.source_ = new ol.source.Vector({\n        projection: this.measurementProjection_\n      })\n\n      /**\n       * @type {VectorLayer}\n       * @private\n       */\n      this.layer_ = new VectorLayer({\n        source: this.source_\n      })\n\n      this.layer_.setStyle(map.get('styling').getStyle(this.style_))\n      map.get('styling').manageLayer(this.layer_)\n\n      map.getLayers().insertAt(1, this.layer_) // at 0 the baselayers are\n\n      /**\n       * @type {ol.interaction.Draw}\n       * @private\n       */\n      this.drawInteraction_ = new ol.interaction.Draw({\n        source: this.source_,\n        type: this.type_,\n        style: map.get('styling').getStyle(this.style_)\n      })\n\n      this.drawInteraction_.setActive(false)\n\n      map.addSupersedingInteraction('singleclick dblclick pointermove', this.drawInteraction_)\n\n      let curFeature = null\n\n      this.drawInteraction_.on('drawstart', e => {\n        this.clear()\n        curFeature = e.feature\n        this.dispatchEvent('measurement')\n      })\n\n      map.on('click', () => {\n        if (this.getActive()) {\n          let geometry = curFeature.getGeometry().clone()\n          geometry.applyTransform(this.measurementTransform_)\n          if (this.dimension_ === 1) {\n            this.setValue(geometry.getLength())\n          } else if (this.dimension_ === 2) {\n            this.setValue(geometry.getArea())\n          }\n        }\n      })\n\n      $(map.getViewport()).parent().on('keydown', e => {\n        if (e.which === keyCodes.ESCAPE && this.drawInteraction_.getActive()) {\n          this.drawInteraction_.finishDrawing()\n        }\n      })\n\n      this.drawInteraction_.on('drawend', () => {\n        switch (this.atDrawEnd_) {\n          case 'newMeasurement':\n            break\n          case 'closeWindow':\n            this.setActive(false)\n            break\n          default:\n            this.drawInteraction_.setActive(false)\n        }\n      })\n\n      this.activateOnMapChange()\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getValue () {\n    return this.value_\n  }\n\n  /**\n   * @param {number} value\n   */\n  setValue (value) {\n    this.value_ = value\n    this.$valueDisplay_.html('' + Math.round(value))\n    this.changed()\n  }\n\n  /**\n   * @returns {string}\n   */\n  getType () {\n    return this.type_\n  }\n\n  handleActiveChange_ () {\n    let active = this.getActive()\n\n    this.layer_.setVisible(active)\n\n    if (active) {\n      if (this.getMap().get('localiser').isRtl()) {\n        this.get$Element().prop('dir', 'rtl')\n      } else {\n        this.get$Element().prop('dir', undefined)\n      }\n      let popup = this.getMap().get('featurePopup')\n      if (popup) {\n        popup.setVisible(false)\n      }\n      $(this.getMap().getViewport()).addClass(cssClasses.crosshair)\n\n      this.clear()\n      this.drawInteraction_.setActive(true)\n    } else {\n      $(this.getMap().getViewport()).removeClass(cssClasses.crosshair)\n\n      this.drawInteraction_.setActive(false)\n    }\n  }\n\n  /**\n   * Clears any measurement\n   */\n  clear () {\n    this.source_.clear()\n    this.setValue(0)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/MeasurementButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 374,
    "kind": "typedef",
    "name": "MeasurementButtonOptions",
    "memberof": "src/controls/MeasurementButton.js",
    "static": true,
    "longname": "src/controls/MeasurementButton.js~MeasurementButtonOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "StyleLike"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'#defaultStyle'",
        "defaultRaw": "'#defaultStyle'",
        "name": "style",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "geometry type ('LineString', 'Polygon')"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "dimension",
        "description": "1 for lines, 2 for polygons"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "atDrawEnd",
        "description": "if set to 'newMeasurement' the control will start a new measurement after\n   completing a measurement. if set to 'closeWindow' the window will be closed."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "active",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "MeasurementButtonOptions"
    }
  },
  {
    "__docId__": 375,
    "kind": "class",
    "name": "MeasurementButton",
    "memberof": "src/controls/MeasurementButton.js",
    "static": true,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/MeasurementButton.js",
    "importStyle": "{MeasurementButton}",
    "description": "Enables the user to draw lines or polygons on the map and displays the length or area.",
    "lineNumber": 25,
    "interface": false,
    "expressionExtends": "mixin(Control, ActivatableMixin)"
  },
  {
    "__docId__": 376,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "MeasurementButtonOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 377,
    "kind": "member",
    "name": "style_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#style_",
    "access": "private",
    "description": "",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "StyleLike"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "type_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#type_",
    "access": "private",
    "description": "",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 379,
    "kind": "member",
    "name": "dimension_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#dimension_",
    "access": "private",
    "description": "",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 380,
    "kind": "member",
    "name": "atDrawEnd_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#atDrawEnd_",
    "access": "private",
    "description": "",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "value_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#value_",
    "access": "private",
    "description": "",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "$valueDisplay_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#$valueDisplay_",
    "access": "private",
    "description": "",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 383,
    "kind": "member",
    "name": "$unitPlaceholder_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#$unitPlaceholder_",
    "access": "private",
    "description": "",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 385,
    "kind": "member",
    "name": "measurementProjection_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#measurementProjection_",
    "access": "private",
    "description": "",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "ol.proj.Projection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 386,
    "kind": "member",
    "name": "measurementTransform_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#measurementTransform_",
    "access": "private",
    "description": "",
    "lineNumber": 135,
    "type": {
      "nullable": null,
      "types": [
        "ol.TransformFunction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "source_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#source_",
    "access": "private",
    "description": "",
    "lineNumber": 141,
    "type": {
      "nullable": null,
      "types": [
        "ol.source.Vector"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 388,
    "kind": "member",
    "name": "layer_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#layer_",
    "access": "private",
    "description": "",
    "lineNumber": 149,
    "type": {
      "nullable": null,
      "types": [
        "VectorLayer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 389,
    "kind": "member",
    "name": "drawInteraction_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#drawInteraction_",
    "access": "private",
    "description": "",
    "lineNumber": 162,
    "type": {
      "nullable": null,
      "types": [
        "ol.interaction.Draw"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "getValue",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#getValue",
    "access": "public",
    "description": "",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "setValue",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#setValue",
    "access": "public",
    "description": "",
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "getType",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#getType",
    "access": "public",
    "description": "",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "handleActiveChange_",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#handleActiveChange_",
    "access": "public",
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "clear",
    "memberof": "src/controls/MeasurementButton.js~MeasurementButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MeasurementButton.js~MeasurementButton#clear",
    "access": "public",
    "description": "Clears any measurement",
    "lineNumber": 266,
    "params": [],
    "return": null
  },
  {
    "__docId__": 396,
    "kind": "file",
    "name": "src/controls/MobileControls.js",
    "content": "import $ from 'jquery'\n\nimport {ShiftableComposedControl} from './ShiftableComposedControl'\nimport {WindowDecorator} from './WindowDecorator'\n\nimport '../../less/mobilecontrols.less'\n\n/**\n * This class represents the mobile menu containing all the controls.\n */\nexport class MobileControls extends ShiftableComposedControl {\n  /**\n   * @param {ShiftableComposedControlOptions} options\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-mobilecontrols'\n    options.element = $('<div>').get(0)\n    options.containerClassName = options.className + '-container'\n    options.visibleControls = options.visibleControls || 6\n\n    super(options)\n  }\n\n  /**\n   * @param {Control} control\n   * @param {g4uControlOptions} options\n   */\n  addControl (control, options) {\n    if (control.isWindowed() || control.isSingleButton()) {\n      super.addControl(control, options)\n    } else {\n      super.addControl(new WindowDecorator({\n        component: control\n      }), options)\n    }\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (this.getMap()) {\n      this.getMap().un('change:mobile', this.handler_)\n    }\n\n    super.setMap(map)\n\n    if (map) {\n      this.handler_ = () => {\n        if (!map.get('mobile')) {\n          for (let control of this.getControls().filter(c => c.setWindowVisible)) {\n            control.setWindowVisible(false)\n          }\n        }\n      }\n      map.on('change:mobile', this.handler_)\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/MobileControls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 397,
    "kind": "class",
    "name": "MobileControls",
    "memberof": "src/controls/MobileControls.js",
    "static": true,
    "longname": "src/controls/MobileControls.js~MobileControls",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/MobileControls.js",
    "importStyle": "{MobileControls}",
    "description": "This class represents the mobile menu containing all the controls.",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "src/controls/ShiftableComposedControl.js~ShiftableComposedControl"
    ]
  },
  {
    "__docId__": 398,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/MobileControls.js~MobileControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MobileControls.js~MobileControls#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShiftableComposedControlOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "addControl",
    "memberof": "src/controls/MobileControls.js~MobileControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MobileControls.js~MobileControls#addControl",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Control"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/MobileControls.js~MobileControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MobileControls.js~MobileControls#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 401,
    "kind": "member",
    "name": "handler_",
    "memberof": "src/controls/MobileControls.js~MobileControls",
    "static": false,
    "longname": "src/controls/MobileControls.js~MobileControls#handler_",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 402,
    "kind": "file",
    "name": "src/controls/MousePosition.js",
    "content": "import ol from 'openlayers'\n\nimport {mixin} from '../utilities'\nimport {RewireMixin} from './RewireMixin'\n\nimport '../../less/mouseposition.less'\n\n/**\n * @typedef {g4uControlOptions} MousePositionOptions\n * @property {function} [coordinateFormat]\n */\n\n/**\n * @extends Control\n */\nexport class MousePosition extends mixin(ol.control.MousePosition, RewireMixin) {\n  /**\n   * @param {MousePositionOptions} [options={}]\n   */\n  constructor (options = {}) {\n    options.className = (options.hasOwnProperty('className')) ? options.className : 'g4u-mouseposition'\n\n    let truncateToString = (x, length) => {\n      let lead = x.toString().match(/^[^.]*/)[ 0 ]\n      if (lead.length >= length) {\n        return lead\n      } else {\n        return x.toFixed(length - lead.length)\n      }\n    }\n\n    let digits = options.digits || 8\n\n    options.coordinateFormat = c => {\n      return `${truncateToString(c[0], digits)}, ${truncateToString(c[1], digits)}`\n    }\n\n    let dashs = '&ndash;' + '.' + '&ndash;'.repeat(digits - 1)\n    options.undefinedHTML = `${dashs}, ${dashs}`\n\n    super(options)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/MousePosition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 403,
    "kind": "typedef",
    "name": "MousePositionOptions",
    "memberof": "src/controls/MousePosition.js",
    "static": true,
    "longname": "src/controls/MousePosition.js~MousePositionOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "coordinateFormat",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "MousePositionOptions"
    }
  },
  {
    "__docId__": 404,
    "kind": "class",
    "name": "MousePosition",
    "memberof": "src/controls/MousePosition.js",
    "static": true,
    "longname": "src/controls/MousePosition.js~MousePosition",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/MousePosition.js",
    "importStyle": "{MousePosition}",
    "description": "",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 405,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/MousePosition.js~MousePosition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/MousePosition.js~MousePosition#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "MousePositionOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 406,
    "kind": "file",
    "name": "src/controls/OverviewMap.js",
    "content": "import ol from 'openlayers'\nimport {RewireMixin} from './RewireMixin'\nimport { ListenerOrganizerMixin } from '../ListenerOrganizerMixin'\nimport {mixin} from '../utilities'\n\nimport '../../less/overviewmap.less'\n\n/**\n * @typedef {g4uControlOptions} OverviewMapOptions\n * @property {Localizable} [tipLabel]\n * @property {ol.layer.Group} [layerGroup]\n */\n\n/**\n * @extends Control\n */\nexport class OverviewMap extends mixin(mixin(ol.control.OverviewMap, RewireMixin), ListenerOrganizerMixin) {\n  /**\n   * @param {OverviewMapOptions} [options={}]\n   */\n  constructor (options = {}) {\n    if (options.hasOwnProperty('title')) {\n      options.tipLabel = options.localiser.selectL10N(options.title)\n    } else {\n      options.tipLabel = (options.hasOwnProperty('tipLabel'))\n        ? options.localiser.selectL10N(options.tipLabel)\n        : options.localiser.localiseUsingDictionary('OverviewMap tipLabel')\n    }\n\n    options.layers = []\n\n    super(options)\n  }\n\n  setMap (map) {\n    if (this.getMap()) {\n      this.detachAllListeners()\n    }\n    super.setMap(map)\n    if (map) {\n      this.getOverviewMap().setLayerGroup(map.get('baseLayers'))\n\n      let $overviewmap = this.get$Element().find('.ol-overviewmap-map')\n\n      $overviewmap = $overviewmap.add($overviewmap.find('.ol-overviewmap-box'))\n\n      let dontClick = false\n\n      this.listenAt($overviewmap).on('click', e => {\n        if (!dontClick) {\n          map.getView().setCenter(this.getOverviewMap().getEventCoordinate(e))\n        }\n      })\n\n      let mouseDown = false\n\n      this.listenAt($overviewmap).on('mousedown', () => {\n        dontClick = false\n        mouseDown = true\n      })\n\n      this.listenAt($overviewmap).on('mouseup', e => {\n        mouseDown = false\n      })\n\n      this.listenAt($overviewmap).on('mousemove', e => {\n        if (mouseDown) {\n          map.getView().setCenter(this.getOverviewMap().getEventCoordinate(e))\n        }\n      })\n\n      this.getOverviewMap().getView().on('change:center', () => {\n        mouseDown = false\n        dontClick = true\n      })\n\n      let $button = this.get$Element().find('button')\n      this.listenAt($button).on('click', () => this.dispatchEvent('change:size'))\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/OverviewMap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 407,
    "kind": "typedef",
    "name": "OverviewMapOptions",
    "memberof": "src/controls/OverviewMap.js",
    "static": true,
    "longname": "src/controls/OverviewMap.js~OverviewMapOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": true,
        "name": "tipLabel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.layer.Group"
        ],
        "spread": false,
        "optional": true,
        "name": "layerGroup",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "OverviewMapOptions"
    }
  },
  {
    "__docId__": 408,
    "kind": "class",
    "name": "OverviewMap",
    "memberof": "src/controls/OverviewMap.js",
    "static": true,
    "longname": "src/controls/OverviewMap.js~OverviewMap",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/OverviewMap.js",
    "importStyle": "{OverviewMap}",
    "description": "",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 409,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/OverviewMap.js~OverviewMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/OverviewMap.js~OverviewMap#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "OverviewMapOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 410,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/OverviewMap.js~OverviewMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/OverviewMap.js~OverviewMap#setMap",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 411,
    "kind": "file",
    "name": "src/controls/PrintButton.js",
    "content": "import $ from 'jquery'\n\nimport {Control} from './Control'\nimport { addTooltip } from '../html/html'\nimport {cssClasses} from '../globals'\n\nimport '../../less/printbutton.less'\n\nexport class PrintButton extends Control {\n  /**\n   * @param {g4uControlOptions} options\n   */\n  constructor (options = {}) {\n    options.className = options.className || 'g4u-printbutton'\n    options.element = $('<button>').get(0)\n\n    super(options)\n\n    this.get$Element().addClass(this.className_)\n      .addClass(cssClasses.mainButton).html(this.getLocaliser().localiseUsingDictionary('PrintButton title'))\n\n    addTooltip(this.get$Element(), this.getLocaliser().localiseUsingDictionary('PrintButton tipLabel'))\n\n    this.get$Element().on('click', () => this.onClick_())\n  }\n\n  /**\n   * @private\n   */\n  onClick_ () {\n    let setDivSize = function (div, mapSize) {\n      $(div).innerWidth(mapSize[ 0 ])\n      $(div).innerHeight(mapSize[ 1 ])\n    }\n\n    //\n    // Variant A: Create a new window and copy the canvas over there. This raises security issues in IE.\n    //\n    // Variant B: Apply a special css class to the body that hides everything except the map for @media print\n    //    DOES NOT WORK\n    //      -> doesn't work because hiding everything will hide the parents of the map, too\n    //\n    // Variant C: Create a new body and switching it with the old body for printing\n    //      -> This heavily manipulates the existing DOM-Structure and it\n    //        relies on the ol-viewport div being the only child of its parent.\n    //        works in IE!\n    //\n    // Variant D: Convert everything to a pdf\n    //    IMPLEMENTED IN MODULE\n    //      -> jsPDF Print Module\n    //\n    // Variant E: Add a function to reproduce a map in its current state on another page\n    //    NOT IMPLEMENTED\n    //      -> some work, but maybe useful for other functions, too\n    //\n\n    let isMapCanvasTainted = function () { // Needs to be looked into\n      try {\n        let viewport = this.getMap().getViewport()\n        let srcCanvas = viewport.getElementsByTagName('canvas')[ 0 ]\n        srcCanvas.getContext('2d').getImageData(1, 1, 1, 1)\n        return false\n      } catch (e) {\n        return true\n      }\n    }\n\n    //\n    // We check if we can use variant a, if we cant, we use variant c\n    //\n\n    if (!isMapCanvasTainted()) {\n      //\n      // Variant A: Creating a new window and copying the canvas over there. This raises security issues in IE.\n      //\n\n      // new window\n      let newWindow = window.open('', '_blank')\n\n      let jStyleDiv = $('<div>').append(\n        $('style').clone()\n      ).append(\n        $('link[type=\"text/css\"]').clone()\n      )\n\n      // copying the map\n      let viewport = this.getMap().getViewport()\n      let mapClone = viewport.parentNode.cloneNode(true)\n      setDivSize(mapClone, this.getMap().getSize())\n      let srcCanvas = viewport.getElementsByTagName('canvas')[ 0 ]\n      let destCanvas = mapClone.getElementsByTagName('canvas')[ 0 ]\n      let destContext = destCanvas.getContext('2d')\n      destContext.drawImage(srcCanvas, 0, 0)\n      let newdoc = newWindow.document\n\n      // writing the document\n      newdoc.open()\n      newdoc.write('<!doctype html>')\n      newdoc.write('<html>')\n      newdoc.write('<head>')\n      newdoc.write('<title>')\n      newdoc.write(this.getLocaliser().localiseUsingDictionary('PrintButton windowTitle'))\n      newdoc.write('</title>')\n      newdoc.write(jStyleDiv.html())\n      newdoc.write('<script type=\"text/javascript\">')\n      newdoc.write('window.onload = function () {\\n')\n      newdoc.write('\\twindow.focus();\\n')\n      newdoc.write('\\tsetTimeout( function () {\\n') // we need to wait till the map is appended\n      newdoc.write('\\t\\twindow.print();\\n')\n      newdoc.write('\\t\\twindow.close();\\n')\n      newdoc.write('\\t}, 50);\\n')\n      newdoc.write('};')\n      newdoc.write('</script>')\n      newdoc.write('</head>')\n      newdoc.write('</html>')\n      newdoc.close()\n\n      newWindow.onload = function () {\n        newdoc.getElementsByTagName('body')[ 0 ].appendChild(mapClone)\n      }\n\n      newWindow.focus()\n    } else {\n      //\n      // Variant C: Creating a new body and switching it with the old body for printing\n      //\n\n      let $mapViewport = $(this.getMap().getViewport())\n      let $mapParent = $mapViewport.parent()\n      let $mapContainer = $mapParent.clone().empty().append($mapViewport)\n      setDivSize($mapContainer, this.getMap().getSize())\n      let $oldbody = $('body')\n      let $newbody = $('<body>').append($mapContainer)\n      document.body = $newbody.get(0)\n      window.print()\n      document.body = $oldbody.get(0)\n      $mapParent.append($mapViewport)\n    }\n\n    this.dispatchEvent('click')\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/PrintButton.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 412,
    "kind": "class",
    "name": "PrintButton",
    "memberof": "src/controls/PrintButton.js",
    "static": true,
    "longname": "src/controls/PrintButton.js~PrintButton",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/PrintButton.js",
    "importStyle": "{PrintButton}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/controls/Control.js~Control"
    ]
  },
  {
    "__docId__": 413,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/PrintButton.js~PrintButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/PrintButton.js~PrintButton#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "onClick_",
    "memberof": "src/controls/PrintButton.js~PrintButton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/PrintButton.js~PrintButton#onClick_",
    "access": "private",
    "description": "",
    "lineNumber": 30,
    "params": [],
    "return": null
  },
  {
    "__docId__": 415,
    "kind": "file",
    "name": "src/controls/RewireMixin.js",
    "content": "import $ from 'jquery'\n\nimport {ControlLogicMixin} from './ControlLogicMixin'\nimport {cssClasses} from '../globals'\nimport {recursiveSelect} from '../utilities'\n\n/**\n * This class does all generic rewiring including catching the target and restyling the tooltips\n * It is important to provide a className in the control because else it will not be possible to find the control in\n * the ol-viewport\n */\nexport class RewireMixin extends ControlLogicMixin {\n  /**\n   * @param {g4uControlOptions} [options={}]\n   */\n  initialize (options = {}) {\n    options.singleButton = false\n\n    super.initialize(options)\n\n    this.rewire()\n  }\n\n  /**\n   * This function tweaks the control a little bit\n   */\n  rewire () {\n    recursiveSelect(this.get$Element(), 'button[title]')\n      .each(function () {\n        let title = $(this).attr('title')\n        $(this).addClass(cssClasses.hasTooltip).removeAttr('title').append(`<span role='tooltip'>${title}</span>`)\n      })\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/RewireMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 416,
    "kind": "class",
    "name": "RewireMixin",
    "memberof": "src/controls/RewireMixin.js",
    "static": true,
    "longname": "src/controls/RewireMixin.js~RewireMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/RewireMixin.js",
    "importStyle": "{RewireMixin}",
    "description": "This class does all generic rewiring including catching the target and restyling the tooltips\nIt is important to provide a className in the control because else it will not be possible to find the control in\nthe ol-viewport",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/controls/ControlLogicMixin.js~ControlLogicMixin"
    ]
  },
  {
    "__docId__": 417,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/controls/RewireMixin.js~RewireMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/RewireMixin.js~RewireMixin#initialize",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 418,
    "kind": "method",
    "name": "rewire",
    "memberof": "src/controls/RewireMixin.js~RewireMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/RewireMixin.js~RewireMixin#rewire",
    "access": "public",
    "description": "This function tweaks the control a little bit",
    "lineNumber": 27,
    "params": [],
    "return": null
  },
  {
    "__docId__": 419,
    "kind": "file",
    "name": "src/controls/ScaleLine.js",
    "content": "import ol from 'openlayers'\nimport {mixin} from '../utilities'\nimport {RewireMixin} from './RewireMixin'\n\nimport '../../less/scaleline.less'\nimport { ListenerOrganizerMixin } from '../ListenerOrganizerMixin'\n\n/**\n * @extends Control\n */\nexport class ScaleLine extends mixin(mixin(ol.control.ScaleLine, RewireMixin), ListenerOrganizerMixin) {\n  /**\n   * @param {g4uControlOptions} [options={}]\n   */\n  constructor (options = {}) {\n    options.className = (options.hasOwnProperty('className')) ? options.className : 'g4u-scale-line'\n    super(options)\n  }\n\n  setMap (map) {\n    if (this.getMap()) {\n      this.detachAllListeners()\n    }\n    super.setMap(map)\n    if (map) {\n      this.listenAt(map.getView()).on('change:resolution', () => this.dispatchEvent('change:size'))\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/ScaleLine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 420,
    "kind": "class",
    "name": "ScaleLine",
    "memberof": "src/controls/ScaleLine.js",
    "static": true,
    "longname": "src/controls/ScaleLine.js~ScaleLine",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/ScaleLine.js",
    "importStyle": "{ScaleLine}",
    "description": "",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 421,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/ScaleLine.js~ScaleLine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ScaleLine.js~ScaleLine#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/ScaleLine.js~ScaleLine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ScaleLine.js~ScaleLine#setMap",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "src/controls/ShiftableComposedControl.js",
    "content": "import $ from 'jquery'\n\nimport {ComposedControl} from './ComposedControl'\nimport { cssClasses } from '../globals'\n\n/**\n * @typedef {ComposedControlOptions} ShiftableComposedControlOptions\n * @property {number} visibleControls specifies amount visible controls\n */\n\n/**\n * This class displays only a given amount of the containing controls and arrows to switch through these\n */\nexport class ShiftableComposedControl extends ComposedControl {\n  /**\n   * @param {ShiftableComposedControlOptions} options\n   */\n  constructor (options = {}) {\n    super(options)\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.visibleControls_ = options.visibleControls\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 1\n\n    let $shiftContainer = $('<div>')\n      .addClass(this.className_ + '-shift')\n    this.get$Element()\n      .append($shiftContainer.append(this.get$Container()))\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$moveLeftButton_ = $('<button>')\n      .addClass(this.className_ + '-move-left')\n      .addClass(this.classNameItem_)\n      .addClass(this.classNameItemFirst_)\n      .addClass(cssClasses.hidden)\n    this.$moveLeftButton_.on('click', () => this.shiftControls(-(this.visibleControls_ - 2)))\n\n    $shiftContainer.prepend(this.$moveLeftButton_)\n    this.$moveLeftButton_.addClass(cssClasses.hidden)\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$moveRightButton_ = $('<button>')\n      .addClass(`${this.className_}-move-right`)\n      .addClass(this.classNameItem_)\n      .addClass(this.classNameItemLast_)\n    this.$moveRightButton_.on('click', () => this.shiftControls(this.visibleControls_ - 2))\n\n    $shiftContainer.append(this.$moveRightButton_)\n    this.$moveRightButton_.addClass(cssClasses.hidden)\n  }\n\n  /**\n   * @param {Control} control\n   * @param {g4uControlOptions} options\n   */\n  addControl (control, options) {\n    super.addControl(control, options)\n\n    if (this.controls_.length > this.visibleControls_) {\n      let $lastInsertedControl = this.get$Container().children(':last-child')\n      $lastInsertedControl.addClass(cssClasses.hidden)\n      $(this.get$Container().children()[this.visibleControls_ - 1]).addClass(cssClasses.hidden)\n      this.$moveRightButton_.removeClass(cssClasses.hidden)\n    }\n  }\n\n  /**\n   * Shift the controls the given amount of steps to the left. if the value is negative, the controls are shifted to\n   * the right\n   * @param shift\n   */\n  shiftControls (shift) {\n    if (shift < 0) {\n      if (this.position_ > 1) {\n        // shift 'left'\n\n        // show move right button\n        if (this.$moveRightButton_.hasClass(cssClasses.hidden)) {\n          this.get$Container().children(':last-child').addClass(cssClasses.hidden)\n          this.$moveRightButton_.removeClass(cssClasses.hidden)\n        }\n\n        // shift visible controls\n        this.position_--\n        $(this.get$Container().children()[this.position_]).removeClass(cssClasses.hidden)\n        $(this.get$Container().children()[this.position_ + this.visibleControls_ - 2]).addClass(cssClasses.hidden)\n\n        // show first button instead of move left\n        if (this.position_ === 1) {\n          this.get$Container().children(':first-child').removeClass(cssClasses.hidden)\n          this.$moveLeftButton_.addClass(cssClasses.hidden)\n        }\n\n        // recurse\n        this.shiftControls(shift + 1)\n      }\n    } else if (shift > 0) {\n      if (this.position_ + this.visibleControls_ < this.controls_.length + 1) {\n        // shift 'right'\n\n        // show move left button\n        if (this.$moveLeftButton_.hasClass(cssClasses.hidden)) {\n          this.get$Container().children(':first-child').addClass(cssClasses.hidden)\n          this.$moveLeftButton_.removeClass(cssClasses.hidden)\n        }\n\n        // shift visible controls\n        this.position_++\n        $(this.get$Container().children()[this.position_ - 1]).addClass(cssClasses.hidden)\n        $(this.get$Container().children()[this.position_ + this.visibleControls_ - 3]).removeClass(cssClasses.hidden)\n\n        // show last button instead of move right\n        if (this.position_ + this.visibleControls_ >= this.controls_.length) {\n          this.get$Container().children(':last-child').removeClass(cssClasses.hidden)\n          this.$moveRightButton_.addClass(cssClasses.hidden)\n        }\n\n        // recurse\n        this.shiftControls(shift - 1)\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/ShiftableComposedControl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "typedef",
    "name": "ShiftableComposedControlOptions",
    "memberof": "src/controls/ShiftableComposedControl.js",
    "static": true,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControlOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "visibleControls",
        "description": "specifies amount visible controls"
      }
    ],
    "type": {
      "types": [
        "ComposedControlOptions"
      ],
      "optional": false,
      "name": "ShiftableComposedControlOptions"
    }
  },
  {
    "__docId__": 425,
    "kind": "class",
    "name": "ShiftableComposedControl",
    "memberof": "src/controls/ShiftableComposedControl.js",
    "static": true,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/ShiftableComposedControl.js",
    "importStyle": "{ShiftableComposedControl}",
    "description": "This class displays only a given amount of the containing controls and arrows to switch through these",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/controls/ComposedControl.js~ComposedControl"
    ]
  },
  {
    "__docId__": 426,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShiftableComposedControlOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 427,
    "kind": "member",
    "name": "visibleControls_",
    "memberof": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl",
    "static": false,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl#visibleControls_",
    "access": "private",
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 428,
    "kind": "member",
    "name": "position_",
    "memberof": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl",
    "static": false,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl#position_",
    "access": "private",
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 429,
    "kind": "member",
    "name": "$moveLeftButton_",
    "memberof": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl",
    "static": false,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl#$moveLeftButton_",
    "access": "private",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 430,
    "kind": "member",
    "name": "$moveRightButton_",
    "memberof": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl",
    "static": false,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl#$moveRightButton_",
    "access": "private",
    "description": "",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 431,
    "kind": "method",
    "name": "addControl",
    "memberof": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl#addControl",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Control"
        ],
        "spread": false,
        "optional": false,
        "name": "control",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 432,
    "kind": "method",
    "name": "shiftControls",
    "memberof": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/ShiftableComposedControl.js~ShiftableComposedControl#shiftControls",
    "access": "public",
    "description": "Shift the controls the given amount of steps to the left. if the value is negative, the controls are shifted to\nthe right",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "shift",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 433,
    "kind": "file",
    "name": "src/controls/WindowDecorator.js",
    "content": "import $ from 'jquery'\n\nimport {Control} from './Control'\nimport {Window} from '../html/Window'\nimport { addTooltip } from '../html/html'\nimport {cssClasses} from '../globals'\n\nimport '../../less/windowdecorator.less'\n\n/**\n * @typedef {g4uControlOptions} WindowDecoratorOptions\n * @property {Control} component\n */\n\n/**\n * This class provides an easy wrap around an control to provide a button to open the control inside of a window.\n * If the child control has a setActive method it is called upon opening and closing the window.\n */\nexport class WindowDecorator extends Control {\n  /**\n   * @param {WindowDecoratorOptions} options\n   */\n  constructor (options = {}) {\n    options.element = $('<div>').addClass('g4u-window-decorator').get(0)\n    options.singleButton = false\n    options.className = options.component.getClassName()\n    options.windowed = true\n\n    super(options)\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$button_ = $('<button>')\n      .addClass(cssClasses.mainButton)\n\n    this.get$Element()\n      .append(this.$button_)\n\n    /**\n     * @type {Control}\n     * @private\n     */\n    this.component_ = options.component\n    this.component_.get$Element().addClass('g4u-window-component')\n\n    this.$button_\n      .addClass(cssClasses.hasTooltip)\n      .html(this.component_.getTitle())\n    addTooltip(this.$button_, this.component_.getTipLabel())\n  }\n\n  /**\n   * @returns {Control}\n   */\n  getComponent () {\n    return this.component_\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    super.setMap(map)\n\n    if (this.getMap()) {\n      this.getMap().removeControl(this.component_)\n    }\n\n    if (map) {\n      map.addControl(this.component_)\n\n      /**\n       * @type {Window}\n       * @private\n       */\n      this.window_ = new Window({ map: map })\n\n      this.component_.on('change', () => {\n        this.window_.updateSize()\n        this.window_.getInFront()\n      })\n\n      this.window_.get$Body().append(this.component_.get$Element())\n\n      if (this.component_.setActive) {\n        if (this.component_.getActive()) {\n          setTimeout(() => this.setWindowVisible(true), 0)\n          this.$button_.addClass(cssClasses.active)\n        }\n\n        this.$button_.on('click touch', () => {\n          this.component_.setActive(!this.component_.getActive())\n        })\n\n        this.component_.on('change:active', () => {\n          let active = this.component_.getActive()\n          setTimeout(() => this.setWindowVisible(active), 0)\n          this.$button_.toggleClass(cssClasses.active, active)\n        })\n\n        this.window_.on('change:visible', e => {\n          if (!this.window_.getVisible()) {\n            this.component_.setActive(false)\n          }\n          this.dispatchEvent({\n            type: 'change:windowVisible',\n            oldValue: e.oldValue\n          })\n        })\n      } else {\n        this.$button_.on('click touch', () => {\n          this.setWindowVisible(!this.window_.getVisible())\n        })\n\n        this.window_.on('change:visible', e => {\n          this.dispatchEvent({\n            type: 'change:windowVisible',\n            oldValue: e.oldValue\n          })\n        })\n      }\n      this.get$Element().append(this.window_.get$Element())\n    }\n  }\n\n  setActive (active) {\n    if (this.component_.setActive) {\n      this.component_.setActive(active)\n    } else {\n      this.window_.setVisible(active)\n    }\n  }\n\n  /**\n   * @param {boolean} visible\n   */\n  setWindowVisible (visible) {\n    this.window_.setVisible(visible)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getWindowVisible () {\n    return this.window_.getVisible()\n  }\n\n  /**\n   * @returns {Float}\n   */\n  getFloat () {\n    return this.component_.getFloat()\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/controls/WindowDecorator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 434,
    "kind": "typedef",
    "name": "WindowDecoratorOptions",
    "memberof": "src/controls/WindowDecorator.js",
    "static": true,
    "longname": "src/controls/WindowDecorator.js~WindowDecoratorOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Control"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "g4uControlOptions"
      ],
      "optional": false,
      "name": "WindowDecoratorOptions"
    }
  },
  {
    "__docId__": 435,
    "kind": "class",
    "name": "WindowDecorator",
    "memberof": "src/controls/WindowDecorator.js",
    "static": true,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/controls/WindowDecorator.js",
    "importStyle": "{WindowDecorator}",
    "description": "This class provides an easy wrap around an control to provide a button to open the control inside of a window.\nIf the child control has a setActive method it is called upon opening and closing the window.",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "src/controls/Control.js~Control"
    ]
  },
  {
    "__docId__": 436,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "WindowDecoratorOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 437,
    "kind": "member",
    "name": "$button_",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#$button_",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 438,
    "kind": "member",
    "name": "component_",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#component_",
    "access": "private",
    "description": "",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Control"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 439,
    "kind": "method",
    "name": "getComponent",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#getComponent",
    "access": "public",
    "description": "",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Control}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Control"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 440,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 441,
    "kind": "member",
    "name": "window_",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#window_",
    "access": "private",
    "description": "",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "Window"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 442,
    "kind": "method",
    "name": "setActive",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#setActive",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [
      {
        "name": "active",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 443,
    "kind": "method",
    "name": "setWindowVisible",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#setWindowVisible",
    "access": "public",
    "description": "",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 444,
    "kind": "method",
    "name": "getWindowVisible",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#getWindowVisible",
    "access": "public",
    "description": "",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 445,
    "kind": "method",
    "name": "getFloat",
    "memberof": "src/controls/WindowDecorator.js~WindowDecorator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/WindowDecorator.js~WindowDecorator#getFloat",
    "access": "public",
    "description": "",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Float}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Float"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 446,
    "kind": "file",
    "name": "src/Debug.js",
    "content": "/**\n * This class provides different debug behaviour based on the SWITCH_DEBUG build flag\n */\nexport class Debug {\n  /**\n   * if in release mode all thrown errors in the callback are catched and the program is continued\n   * @param {function} cb\n   */\n  static tryOrThrow (cb) {\n    if (SWITCH_DEBUG === 'DEBUG') { // eslint-disable-line\n      cb()\n    } else if (SWITCH_DEBUG === 'PRODUCTION') { // eslint-disable-line\n      try {\n        cb()\n      } catch (e) {\n        this.error(e)\n      }\n    }\n  }\n\n  /**\n   * Prints an info note if in debug mode\n   * @param {string} msg\n   */\n  static info (msg) {\n    if (SWITCH_DEBUG === 'DEBUG') { // eslint-disable-line\n      console.log(msg) // eslint-disable-line\n    }\n  }\n\n  /**\n   * prints a warning\n   * @param {string} msg\n   */\n  static warn (msg) {\n    console.warn(msg) // eslint-disable-line\n  }\n\n  /**\n   * prints an error\n   * @param {string} msg\n   */\n  static error (msg) {\n    console.error(msg) // eslint-disable-line\n  }\n\n  /**\n   * a default error handler for .catch functions\n   * @param {string} message\n   */\n  static defaultErrorHandler (message) {\n    Debug.error(message)\n    if (message.stack) {\n      Debug.error(message.stack)\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/Debug.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 447,
    "kind": "class",
    "name": "Debug",
    "memberof": "src/Debug.js",
    "static": true,
    "longname": "src/Debug.js~Debug",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/Debug.js",
    "importStyle": "{Debug}",
    "description": "This class provides different debug behaviour based on the SWITCH_DEBUG build flag",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 448,
    "kind": "method",
    "name": "tryOrThrow",
    "memberof": "src/Debug.js~Debug",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Debug.js~Debug.tryOrThrow",
    "access": "public",
    "description": "if in release mode all thrown errors in the callback are catched and the program is continued",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 449,
    "kind": "method",
    "name": "info",
    "memberof": "src/Debug.js~Debug",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Debug.js~Debug.info",
    "access": "public",
    "description": "Prints an info note if in debug mode",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 450,
    "kind": "method",
    "name": "warn",
    "memberof": "src/Debug.js~Debug",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Debug.js~Debug.warn",
    "access": "public",
    "description": "prints a warning",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 451,
    "kind": "method",
    "name": "error",
    "memberof": "src/Debug.js~Debug",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Debug.js~Debug.error",
    "access": "public",
    "description": "prints an error",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 452,
    "kind": "method",
    "name": "defaultErrorHandler",
    "memberof": "src/Debug.js~Debug",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Debug.js~Debug.defaultErrorHandler",
    "access": "public",
    "description": "a default error handler for .catch functions",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 453,
    "kind": "file",
    "name": "src/defaultconfig.js",
    "content": "//\n// Hard coded default configuration for the client\n//\n\n// Element is a Keyword for the composition of config objects. Every attribute with 'Element' in its name\n// isn't copied but used as a default case for elements of an array with the same name (-Element)\n\nexport const defaults = {}\n\ndefaults.baselayer = {\n  title: {\n    'de': 'Standardtitel',\n    'en': 'Default title'\n  },\n  type: 'OSM',\n  source: {\n    projection: 'EPSG:3857',\n    url: {\n      'de': '//{a-c}.tile.openstreetmap.de/tiles/osmde//{z}/{x}/{y}.png',\n      'en': '//{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n    },\n    attribution: {\n      'de': 'Karte von <a target=\"_blank\" href=\"http://www.openstreetmap.org/\">OpenStreetMap</a>, ' +\n        'Lizenz: <a target=\"_blank\" href=\"http://opendatacommons.org/licenses/odbl/\">ODbL</a>',\n      'en': 'Map from <a target=\"_blank\" href=\"http://www.openstreetmap.org/\">OpenStreetMap</a>, ' +\n        'licence: <a target=\"_blank\" href=\"http://opendatacommons.org/licenses/odbl/\">ODbL</a>'\n    }\n  }\n}\n\ndefaults.config = {\n  target: '#g4u-map',\n  interfaceProjection: 'EPSG:4326',\n  view: {\n    center: [7.086134, 50.714689], // always in interfaceProjection\n    zoom: 18,\n    minZoom: 0,\n    maxZoom: 18\n  },\n  layers: {\n    // baselayers\n    baseLayers: [{\n      // this default-case only comes into action if there is NO baselayer defined\n      id: 0,\n      title: defaults.baselayer.title,\n      type: defaults.baselayer.type,\n      source: {\n        projection: defaults.baselayer.source.projection,\n        url: defaults.baselayer.source.url,\n        attribution: defaults.baselayer.source.attribution\n      },\n      visible: true\n    }],\n    featureLayers: [], // this default-case only comes into action if there is NO featurelayer defined\n    featureLayersElement: {\n      // these are the default values for the properties of every featurelayer defined\n      title: 'Default title',\n      type: 'KML',\n      source: {\n        loadingStrategy: 'ALL'\n      }\n    }\n  },\n  // (standard-) controls\n  controls: {\n  },\n  move: {\n    animationDuration: 2000,\n    pixelPadding: 60,\n    meterMinSize: 300\n  },\n  styleMap: {\n    '#defaultStyle': {\n      fill: {\n        color: 'rgba(0,0,0,0)'\n      },\n      stroke: {\n        color: 'rgba(255,255,255,1)',\n        width: 2\n      },\n      circle: {\n        radius: 5,\n        fill: {\n          color: 'rgba(0,0,0,0)'\n        },\n        stroke: {\n          color: 'rgba(255,255,255,1)',\n          width: 2\n        }\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/defaultconfig.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 454,
    "kind": "variable",
    "name": "defaults",
    "memberof": "src/defaultconfig.js",
    "static": true,
    "longname": "src/defaultconfig.js~defaults",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/defaultconfig.js",
    "importStyle": "{defaults}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "file",
    "name": "src/events.js",
    "content": "// copied from openlayers source (src/ol/events.js)\n\nexport const olEventTypes = {\n  CHANGE: 'change',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'mspointerdown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/events.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 456,
    "kind": "variable",
    "name": "olEventTypes",
    "memberof": "src/events.js",
    "static": true,
    "longname": "src/events.js~olEventTypes",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/events.js",
    "importStyle": "{olEventTypes}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"CHANGE\": string, \"CLICK\": string, \"DBLCLICK\": string, \"DRAGENTER\": string, \"DRAGOVER\": string, \"DROP\": string, \"ERROR\": string, \"KEYDOWN\": string, \"KEYPRESS\": string, \"LOAD\": string, \"MOUSEDOWN\": string, \"MOUSEMOVE\": string, \"MOUSEOUT\": string, \"MOUSEUP\": string, \"MOUSEWHEEL\": string, \"MSPOINTERDOWN\": string, \"RESIZE\": string, \"TOUCHSTART\": string, \"TOUCHMOVE\": string, \"TOUCHEND\": string, \"WHEEL\": string}"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "file",
    "name": "src/exports.js",
    "content": "export {G4UMap} from './G4UMap'\nexport {registerModule} from './moduleRegistration'\nexport {SourceServerVector} from './sources/SourceServerVector'\nexport {GroupLayer} from './layers/GroupLayer'\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/exports.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 458,
    "kind": "file",
    "name": "src/extent.js",
    "content": "import ol from 'openlayers'\r\n\r\n/**\r\n * returns an extent with the same center but width and height miltiplied by the given value\r\n * @param {ol.Extent} extent\r\n * @param {number} value\r\n * @returns {ol.Extent}\r\n */\r\nexport function multiplyExtent (extent, value) {\r\n  let size = ol.extent.getSize(extent)\r\n  let addX = size[0] * (value - 1) / 2\r\n  let addY = size[1] * (value - 1) / 2\r\n  return [extent[0] - addX, extent[1] - addY, extent[2] + addX, extent[3] + addY]\r\n}\r\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/extent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 459,
    "kind": "function",
    "name": "multiplyExtent",
    "memberof": "src/extent.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/extent.js~multiplyExtent",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/extent.js",
    "importStyle": "{multiplyExtent}",
    "description": "returns an extent with the same center but width and height miltiplied by the given value",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.Extent}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Extent"
        ],
        "spread": false,
        "optional": false,
        "name": "extent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.Extent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 460,
    "kind": "file",
    "name": "src/FeaturePopup.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\nimport flatten from 'lodash/flatten'\n\nimport {ListenerOrganizerMixin} from './ListenerOrganizerMixin'\nimport {Window} from './html/Window'\nimport {cssClasses} from './globals'\nimport { finishAllImages, mixin } from './utilities'\n\nimport '../less/featurepopup.less'\n\n/**\n * @typedef {object} FeaturePopupOptions\n * @property {string} [className='g4u-featurepopup']\n * @property {number[]} [offset=[0,0]]\n * @property {ol.OverlayPositioning} [positioning='center-center']\n * @property {number[]} [iconSizedOffset=[0,0]]\n * @property {boolean} [centerOnPopup=false]\n * @property {boolean} [animated=true]\n * @property {string[]} [popupModifier] default popupModifiers to use\n */\n\n/**\n * Displays a Popup bound to a geographical position via an ol.Overlay\n */\nexport class FeaturePopup extends mixin(ol.Object, ListenerOrganizerMixin) {\n  /**\n   * @param {FeaturePopupOptions} options\n   */\n  constructor (options = {}) {\n    super()\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = (options.hasOwnProperty('className')) ? options.className : 'g4u-featurepopup'\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameFeatureName_ = this.className_ + '-feature-name'\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameFeatureDescription_ = this.className_ + '-feature-description'\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$name_ = $('<h3>').addClass(this.classNameFeatureName_)\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$description_ = $('<p>').addClass(this.classNameFeatureDescription_)\n\n    /**\n     * @type {null|ol.Feature}\n     * @private\n     */\n    this.feature_ = null\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = false\n\n    /**\n     * @type {VectorLayer[]}\n     * @private\n     */\n    this.referencingVisibleLayers_ = []\n\n    /**\n     * @type {number[]}\n     * @private\n     */\n    this.pixelOffset_ = options.hasOwnProperty('offset') ? options.offset : [ 0, 0 ]\n\n    /**\n     * @type {number[]}\n     * @private\n     */\n    this.iconSizedOffset_ = options.hasOwnProperty('iconSizedOffset') ? options.iconSizedOffset : [ 0, 0 ]\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.centerOnPopup_ = options.hasOwnProperty('centerOnPopup') ? options.centerOnPopup : true\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.centerOnPopupInitial_ = this.centerOnPopup_\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.animated_ = options.hasOwnProperty('animated') ? options.animated : true\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$element_ = $('<div>').addClass(this.className_).addClass(cssClasses.hidden)\n\n    /**\n     * @type {ol.Overlay}\n     * @private\n     */\n    this.overlay_ = new ol.Overlay({\n      element: this.$element_.get(0),\n      offset: this.pixelOffset_,\n      positioning: options.hasOwnProperty('positioning') ? options.positioning : 'center-center',\n      stopEvent: false\n    })\n\n    /**\n     * @type {string[]}\n     * @private\n     */\n    this.defaultPopupModifiers_ = options.popupModifier || []\n\n    /**\n     * @type {string[]}\n     * @private\n     */\n    this.currentPopupModifiers_ = []\n\n    /**\n     * @type {?Window}\n     * @private\n     */\n    this.window_ = null\n\n    /**\n     * @type {?G4UMap}\n     * @private\n     */\n    this.map__ = null\n  }\n\n  /**\n   * @param {ol.Feature} feature\n   * @returns {boolean}\n   */\n  static canDisplay (feature) {\n    if (feature.get('disabled')) {\n      return false\n    }\n    if (feature.get('name') || (feature.get('description') && $(feature.get('description')).text().match(/\\S/))) {\n      return true\n    }\n    if (feature.get('features') && feature.get('features').length === 1) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (this.getMap()) {\n      this.detachAllListeners()\n      this.getMap().removeOverlay(this.overlay_)\n    }\n\n    if (map) {\n      this.window_ = new Window({ draggable: false, fixedPosition: true, map: map })\n\n      this.window_.get$Body().append(this.$name_).append(this.$description_)\n\n      this.listenAt(this.window_).on('change:visible', () => {\n        if (!this.window_.getVisible()) {\n          this.setVisible(false) // notifying the featurepopup about the closing of the window\n        }\n      })\n\n      this.$element_.append(this.window_.get$Element())\n\n      // feature click\n\n      this.listenAt(map.getDefaultInteractions('singleclick')[ 0 ]).on('select', e => {\n        let selected = e.selected.filter(FeaturePopup.canDisplay)\n        if (selected.length) {\n          this.onFeatureClick_(selected[ 0 ], e.mapBrowserEvent.coordinate)\n          e.target.getFeatures().remove(selected[ 0 ]) // remove feature to be able to select feature again\n          e.target.changed()\n        }\n      })\n\n      // feature hover\n\n      this.listenAt(map.getDefaultInteractions('pointermove')[ 0 ]).on('select', e => {\n        let selected = e.selected.filter(FeaturePopup.canDisplay)\n        let deselected = e.deselected.filter(FeaturePopup.canDisplay)\n        if (selected.length) {\n          $(map.getViewport()).addClass(cssClasses.clickable)\n        } else if (deselected.length) {\n          $(map.getViewport()).removeClass(cssClasses.clickable)\n        }\n      })\n\n      // hiding feature Popup if the layer gets hidden or the feature gets removed\n\n      let forEachSource = (layer, source) => {\n        if (source.getFeatures) {\n          this.listenAt(source).on('removefeature', e => {\n            if (e.feature === this.getFeature()) {\n              this.referencingVisibleLayers_.forEach(rLay => {\n                if (rLay.getSource() === source) {\n                  this.removeReferencingLayer_(rLay)\n                }\n              })\n            }\n          })\n        }\n      }\n\n      let forEachLayer = layer => {\n        if (layer.getSource) {\n          let source = layer.getSource()\n\n          if (source) {\n            forEachSource(layer, source)\n          }\n\n          this.listenAt(layer).on('change:source', e => {\n            this.detachFrom(e.oldValue)\n            forEachSource(layer, layer.getSource())\n          })\n\n          this.listenAt(layer).on('change:visible', () => {\n            let source = layer.getSource()\n            if (source && source.getFeatures) {\n              if (layer.getVisible() === false) {\n                if (source.getFeatures().indexOf(this.getFeature()) > -1) {\n                  this.removeReferencingLayer_(layer)\n                }\n              } else {\n                if (source.getFeatures().indexOf(this.getFeature()) > -1) {\n                  this.referencingVisibleLayers_.push(layer)\n                }\n              }\n            }\n          })\n        }\n\n        if (layer.getLayers) {\n          layer.getLayers().forEach(forEachLayer)\n          this.listenAt(layer.getLayers())\n            .on('add', e => {\n              forEachLayer(e.element)\n            })\n            .on('remove', e => {\n              if (e.element.getSource && e.element.getSource()) {\n                this.detachFrom(e.element.getSource())\n              }\n              this.detachFrom(e.element)\n            })\n        }\n      }\n\n      forEachLayer(map.getLayerGroup())\n\n      map.addOverlay(this.overlay_)\n\n      this.$element_.parent().addClass(this.className_ + '-container')\n\n      // disable scrolling of body and zooming into map while in the feature popup\n      this.window_.get$Element().on('mousewheel wheel DOMMouseScroll', e => {\n        e.stopPropagation()\n        e.preventDefault()\n      })\n\n      let onMapChangeMobile = () => {\n        if (map.get('mobile')) {\n          this.centerOnPopup_ = false\n        } else {\n          this.centerOnPopup_ = this.centerOnPopupInitial_\n        }\n      }\n\n      onMapChangeMobile()\n      this.listenAt(map).on('change:mobile', onMapChangeMobile)\n\n      // limiting size\n\n      map.once('postrender', () => {\n        this.window_.updateSize()\n      })\n    }\n\n    this.map__ = map\n  }\n\n  /**\n   * @param {ol.Feature} feature\n   * @param {ol.Coordinate} coordinate\n   * @private\n   */\n  onFeatureClick_ (feature, coordinate = null) {\n    if (feature.get('features')) {\n      feature = feature.get('features')[0]\n    }\n\n    this.referencingVisibleLayers_ = []\n\n    this.getMap().getLayerGroup().recursiveForEach(layer => {\n      if (layer.getVisible() && layer.getSource && layer.getSource().getFeatures) {\n        if (layer.getSource().getFeatures().indexOf(feature) > -1) {\n          this.referencingVisibleLayers_.push(layer)\n        }\n      }\n    })\n\n    this.setFeature(feature, coordinate)\n    this.setVisible(true)\n\n    if (this.centerOnPopup_) {\n      this.centerMapOnPopup()\n    }\n  }\n\n  /**\n   * @param {VectorLayer} layer\n   * @private\n   */\n  removeReferencingLayer_ (layer) {\n    this.referencingVisibleLayers_.splice(this.referencingVisibleLayers_.indexOf(layer), 1)\n    if (this.referencingVisibleLayers_.length === 0) {\n      this.setVisible(false)\n    }\n  }\n\n  /**\n   * @returns {G4UMap}\n   */\n  getMap () {\n    return this.map__\n  }\n\n  /**\n   * @returns {null|ol.Feature}\n   */\n  getFeature () {\n    return this.feature_\n  }\n\n  /**\n   * @returns {Array|VectorLayer[]}\n   */\n  getLayers () {\n    return this.referencingVisibleLayers_\n  }\n\n  updateContent () {\n    if (this.getMap().get('localiser').isRtl()) {\n      this.window_.get$Body().prop('dir', 'rtl')\n    } else {\n      this.window_.get$Body().prop('dir', undefined)\n    }\n\n    this.getMap().get('popupModifiers').apply({\n      name: this.getFeature().get('name'),\n      description: this.getFeature().get('description')\n    }, this.currentPopupModifiers_)\n      .then(result => {\n        if (result.name) {\n          this.$name_.removeClass(cssClasses.hidden)\n          this.$name_.html(result.name)\n        } else {\n          this.$name_.addClass(cssClasses.hidden)\n        }\n\n        if (result.description) {\n          this.$description_.removeClass(cssClasses.hidden)\n          this.$description_.html(result.description)\n        } else {\n          this.$description_.addClass(cssClasses.hidden)\n        }\n\n        this.updateSize()\n\n        this.dispatchEvent('update:content')\n      })\n  }\n\n  /**\n   * Update the Popup. Call this if something in the feature has changed\n   */\n  update () {\n    if (this.getFeature()) {\n      const feature = this.getFeature()\n\n      this.$name_.empty()\n      this.$description_.empty()\n\n      this.updateContent() // this produces one unnecessary call to window.updateSize()\n\n      if (!feature.get('observedByPopup')) {\n        feature.on('change:name', () => this.updateContent())\n        feature.on('change:description', () => this.updateContent())\n        feature.set('observedByPopup', true)\n      }\n\n      this.once('change:feature', () => {\n        feature.un('change:name', () => this.updateContent())\n        feature.un('change:description', () => this.updateContent())\n        feature.set('observedByPopup', false)\n      })\n\n      if (!this.getMap().get('mobile')) {\n        let resolution = this.getMap().getView().getResolution()\n\n        this.addIconSizedOffset(this.getFeature(), resolution)\n      }\n\n      if (this.referencingVisibleLayers_.length) {\n        this.window_.get$Element().attr('data-layer-0', this.referencingVisibleLayers_[0].get('id'))\n      }\n\n      // apply default offset\n\n      if (this.getVisible()) {\n        setTimeout(() => this.window_.updateSize(), 0)\n      }\n    }\n  }\n\n  updateSize () {\n    if (this.getVisible() && this.window_ && this.window_.updateSize) {\n      this.window_.updateSize()\n    }\n  }\n\n  /**\n   * The feature should have a property 'name' and/or 'description' to be shown inside of the popup.\n   * @param {ol.Feature} feature\n   * @param {ol.Coordinate} coordinate\n   * @param {string[]} [optPopupModifiers=[]]\n   */\n  setFeature (feature, coordinate = null, optPopupModifiers = []) {\n    let oldValue = this.feature_\n    if (feature) {\n      this.overlay_.setPosition(coordinate || ol.extent.getCenter(feature.getGeometry().getExtent()))\n    }\n\n    if (oldValue !== feature) {\n      if (this.feature_) {\n        this.feature_.un('change:geometry', this.geometryChangeHandler_)\n      }\n      this.feature_ = feature\n      this.currentPopupModifiers_ = [ ...this.defaultPopupModifiers_, ...optPopupModifiers ]\n      for (let layer of this.referencingVisibleLayers_) {\n        this.currentPopupModifiers_ = this.currentPopupModifiers_.concat(flatten(layer.get('popupModifiers')))\n      }\n      this.geometryChangeHandler_ = () => {\n        this.overlay_.setPosition(coordinate || ol.extent.getCenter(this.feature_.getGeometry().getExtent()))\n        if (this.getVisible()) {\n          this.update()\n        }\n      }\n      this.feature_.on('change:geometry', this.geometryChangeHandler_)\n      this.dispatchEvent({\n        type: 'change:feature',\n        oldValue: oldValue,\n        key: 'feature'\n      })\n\n      this.update()\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getVisible () {\n    return this.visible_\n  }\n\n  /**\n   * @param {boolean} visible\n   */\n  setVisible (visible) {\n    let oldValue = this.visible_\n    if (oldValue !== visible) {\n      if (visible === true && this.getFeature()) {\n        this.$element_.removeClass(cssClasses.hidden)\n        this.window_.setVisible(true)\n      } else {\n        this.$element_.addClass(cssClasses.hidden)\n        this.window_.setVisible(false)\n      }\n\n      this.visible_ = visible\n\n      this.dispatchEvent({\n        type: 'change:visible',\n        oldValue: oldValue,\n        key: 'visible'\n      })\n    }\n\n    if (visible) {\n      setTimeout(() => this.window_.updateSize(), 0)\n    }\n  }\n\n  /**\n   * calculates iconSized Offset and applies it\n   * @param {ol.Feature} feature\n   * @param {number} resolution\n   */\n\n  addIconSizedOffset (feature, resolution) {\n    if (this.iconSizedOffset_[ 0 ] !== 0 || this.iconSizedOffset_[ 1 ] !== 0) {\n      let featureStyleFunction = feature.getStyleFunction()\n      if (featureStyleFunction) {\n        let style = featureStyleFunction.call(feature, resolution)[ 0 ]\n        if (style) {\n          let imageStyle = style.getImage()\n          if (imageStyle instanceof ol.style.Icon) {\n            (new Promise(resolve => {\n              let img = imageStyle.getImage()\n              if (img.complete && img.src) {\n                resolve()\n              } else {\n                img.addEventListener('load', () => {\n                  this.getMap().render() // initiate styles with size and anchor\n                  this.getMap().once('postcompose', resolve)\n                })\n                imageStyle.load()\n              }\n            })).then(() => {\n              let iconSize = imageStyle.getSize()\n\n              let totalOffset = [\n                this.pixelOffset_[ 0 ] + this.iconSizedOffset_[ 0 ] * iconSize[ 0 ] * (imageStyle.getScale() || 1),\n                this.pixelOffset_[ 1 ] + this.iconSizedOffset_[ 1 ] * iconSize[ 1 ] * (imageStyle.getScale() || 1)\n              ]\n\n              this.overlay_.setOffset(totalOffset)\n            })\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Centers the map on the popup after all images have been loaded\n   */\n  centerMapOnPopup (animated) {\n    animated = animated === undefined ? this.animated_ : animated\n\n    const _centerMap = () => {\n      this.window_.updateSize()\n      this.getMap().get('move').toPoint(this.getCenter(), { animated })\n    }\n\n    finishAllImages(this.window_.get$Body()).then(() => {\n      // we need to do this trick to find out if map is already visible/started rendering\n      if (this.getMap().getPixelFromCoordinate([ 0, 0 ])) {\n        _centerMap()\n      } else {\n        this.getMap().once('postrender', _centerMap)\n      }\n    })\n  }\n\n  /**\n   * calculates Center of the Popup. Be careful, this calculation repositions the popup to calculate the center\n   * properly and repostions to the initial Position again.\n   * This does only work if the popup is already visible!\n   * @returns {ol.Coordinate}\n   */\n  getCenter () {\n    let offset = this.overlay_.getOffset()\n\n    let pixelPosition = this.getMap().getPixelFromCoordinate(this.overlay_.getPosition())\n\n    // apply offset\n    pixelPosition[ 0 ] += offset[ 0 ]\n    pixelPosition[ 1 ] += offset[ 1 ]\n\n    // applay width/height depending on positioning\n    let positioning = this.overlay_.getPositioning().split('-')\n\n    let width = this.$element_.outerWidth()\n    let height = this.$element_.outerHeight()\n\n    if (positioning[ 1 ] === 'left') {\n      pixelPosition[ 0 ] += width / 2\n    }\n    if (positioning[ 1 ] === 'right') {\n      pixelPosition[ 0 ] -= width / 2\n    }\n\n    if (positioning[ 0 ] === 'top') {\n      pixelPosition[ 1 ] += height / 2\n    }\n    if (positioning[ 0 ] === 'bottom') {\n      pixelPosition[ 1 ] -= height / 2\n    }\n\n    return this.getMap().getCoordinateFromPixel(pixelPosition)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/FeaturePopup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 461,
    "kind": "typedef",
    "name": "FeaturePopupOptions",
    "memberof": "src/FeaturePopup.js",
    "static": true,
    "longname": "src/FeaturePopup.js~FeaturePopupOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'g4u-featurepopup'",
        "defaultRaw": "'g4u-featurepopup'",
        "name": "className",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[0,0]",
        "defaultRaw": [
          0,
          0
        ],
        "name": "offset",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.OverlayPositioning"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'center-center'",
        "defaultRaw": "'center-center'",
        "name": "positioning",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[0,0]",
        "defaultRaw": [
          0,
          0
        ],
        "name": "iconSizedOffset",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "centerOnPopup",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "animated",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "popupModifier",
        "description": "default popupModifiers to use"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "FeaturePopupOptions"
    }
  },
  {
    "__docId__": 462,
    "kind": "class",
    "name": "FeaturePopup",
    "memberof": "src/FeaturePopup.js",
    "static": true,
    "longname": "src/FeaturePopup.js~FeaturePopup",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/FeaturePopup.js",
    "importStyle": "{FeaturePopup}",
    "description": "Displays a Popup bound to a geographical position via an ol.Overlay",
    "lineNumber": 26,
    "interface": false,
    "expressionExtends": "mixin(ol.Object, ListenerOrganizerMixin)"
  },
  {
    "__docId__": 463,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "FeaturePopupOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "className_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#className_",
    "access": "private",
    "description": "",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 465,
    "kind": "member",
    "name": "classNameFeatureName_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#classNameFeatureName_",
    "access": "private",
    "description": "",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 466,
    "kind": "member",
    "name": "classNameFeatureDescription_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#classNameFeatureDescription_",
    "access": "private",
    "description": "",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 467,
    "kind": "member",
    "name": "$name_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#$name_",
    "access": "private",
    "description": "",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 468,
    "kind": "member",
    "name": "$description_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#$description_",
    "access": "private",
    "description": "",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 469,
    "kind": "member",
    "name": "feature_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#feature_",
    "access": "private",
    "description": "",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "null",
        "ol.Feature"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 470,
    "kind": "member",
    "name": "visible_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#visible_",
    "access": "private",
    "description": "",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 471,
    "kind": "member",
    "name": "referencingVisibleLayers_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#referencingVisibleLayers_",
    "access": "private",
    "description": "",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "VectorLayer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 472,
    "kind": "member",
    "name": "pixelOffset_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#pixelOffset_",
    "access": "private",
    "description": "",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "name": "iconSizedOffset_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#iconSizedOffset_",
    "access": "private",
    "description": "",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 474,
    "kind": "member",
    "name": "centerOnPopup_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#centerOnPopup_",
    "access": "private",
    "description": "",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 475,
    "kind": "member",
    "name": "centerOnPopupInitial_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#centerOnPopupInitial_",
    "access": "private",
    "description": "",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 476,
    "kind": "member",
    "name": "animated_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#animated_",
    "access": "private",
    "description": "",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 477,
    "kind": "member",
    "name": "$element_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#$element_",
    "access": "private",
    "description": "",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 478,
    "kind": "member",
    "name": "overlay_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#overlay_",
    "access": "private",
    "description": "",
    "lineNumber": 121,
    "type": {
      "nullable": null,
      "types": [
        "ol.Overlay"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 479,
    "kind": "member",
    "name": "defaultPopupModifiers_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#defaultPopupModifiers_",
    "access": "private",
    "description": "",
    "lineNumber": 132,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 480,
    "kind": "member",
    "name": "currentPopupModifiers_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#currentPopupModifiers_",
    "access": "private",
    "description": "",
    "lineNumber": 138,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 481,
    "kind": "member",
    "name": "window_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#window_",
    "access": "private",
    "description": "",
    "lineNumber": 144,
    "type": {
      "nullable": true,
      "types": [
        "Window"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "map__",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#map__",
    "access": "private",
    "description": "",
    "lineNumber": 150,
    "type": {
      "nullable": true,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 483,
    "kind": "method",
    "name": "canDisplay",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/FeaturePopup.js~FeaturePopup.canDisplay",
    "access": "public",
    "description": "",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 484,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "onFeatureClick_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#onFeatureClick_",
    "access": "private",
    "description": "",
    "lineNumber": 313,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 491,
    "kind": "method",
    "name": "removeReferencingLayer_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#removeReferencingLayer_",
    "access": "private",
    "description": "",
    "lineNumber": 340,
    "params": [
      {
        "nullable": null,
        "types": [
          "VectorLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 492,
    "kind": "method",
    "name": "getMap",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#getMap",
    "access": "public",
    "description": "",
    "lineNumber": 350,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{G4UMap}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 493,
    "kind": "method",
    "name": "getFeature",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#getFeature",
    "access": "public",
    "description": "",
    "lineNumber": 357,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{null|ol.Feature}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null",
        "ol.Feature"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 494,
    "kind": "method",
    "name": "getLayers",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#getLayers",
    "access": "public",
    "description": "",
    "lineNumber": 364,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array|VectorLayer[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array",
        "VectorLayer[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 495,
    "kind": "method",
    "name": "updateContent",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#updateContent",
    "access": "public",
    "description": null,
    "lineNumber": 368,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 496,
    "kind": "method",
    "name": "update",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#update",
    "access": "public",
    "description": "Update the Popup. Call this if something in the feature has changed",
    "lineNumber": 403,
    "params": [],
    "return": null
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "updateSize",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#updateSize",
    "access": "public",
    "description": null,
    "lineNumber": 442,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 498,
    "kind": "method",
    "name": "setFeature",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#setFeature",
    "access": "public",
    "description": "The feature should have a property 'name' and/or 'description' to be shown inside of the popup.",
    "lineNumber": 454,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "optPopupModifiers",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 502,
    "kind": "member",
    "name": "geometryChangeHandler_",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#geometryChangeHandler_",
    "access": "public",
    "description": null,
    "lineNumber": 469,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 503,
    "kind": "method",
    "name": "getVisible",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#getVisible",
    "access": "public",
    "description": "",
    "lineNumber": 489,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 504,
    "kind": "method",
    "name": "setVisible",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#setVisible",
    "access": "public",
    "description": "",
    "lineNumber": 496,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 506,
    "kind": "method",
    "name": "addIconSizedOffset",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#addIconSizedOffset",
    "access": "public",
    "description": "calculates iconSized Offset and applies it",
    "lineNumber": 527,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "resolution",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 507,
    "kind": "method",
    "name": "centerMapOnPopup",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#centerMapOnPopup",
    "access": "public",
    "description": "Centers the map on the popup after all images have been loaded",
    "lineNumber": 565,
    "params": [
      {
        "name": "animated",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 508,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/FeaturePopup.js~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeaturePopup.js~FeaturePopup#getCenter",
    "access": "public",
    "description": "calculates Center of the Popup. Be careful, this calculation repositions the popup to calculate the center\nproperly and repostions to the initial Position again.\nThis does only work if the popup is already visible!",
    "lineNumber": 589,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.Coordinate}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.Coordinate"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 509,
    "kind": "file",
    "name": "src/FeatureTooltip.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport { cssClasses } from './globals'\n\nimport '../less/tooltip.less'\nimport {html2Text} from './utilities'\n\n/**\n * @typedef {object} FeatureTooltipOptions\n * @property {string} [className='g4u-featuretooltip']\n * @property {number[]} [offset=[0,0]]\n * @property {ol.OverlayPositioning} [positioning='center-center']\n * @property {string[]} [popupModifier=[]]\n */\n\n/**\n * Displays a tooltip if a feature with a name is hovered.\n */\nexport class FeatureTooltip {\n  /**\n   * @param {FeatureTooltipOptions} [options={}]\n   */\n  constructor (options = {}) {\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = (options.hasOwnProperty('className')) ? options.className : 'g4u-featuretooltip'\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$element_ = $('<span></span>').addClass(this.className_).addClass(cssClasses.hidden)\n\n    /**\n     * @type {ol.Overlay}\n     * @private\n     */\n    this.overlay_ = new ol.Overlay({\n      element: this.$element_.get(0),\n      offset: (options.hasOwnProperty('offset')) ? options.offset : [0, 0],\n      positioning: (options.hasOwnProperty('positioning')) ? options.positioning : 'center-center',\n      stopEvent: false\n    })\n\n    /**\n     * @type {string[]}\n     * @private\n     */\n    this.defaultPopupModifiers_ = options.popupModifier || []\n\n    /**\n     * @type {?ol.Feature}\n     * @private\n     */\n    this.feature_ = null\n\n    this.$element_.parent().addClass(this.className_ + '-container')\n  }\n\n  static canDisplay (feature) {\n    return !feature.get('disabled') && (feature.get('name') ||\n      (feature.get('features') && feature.get('features').length === 1))\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    if (this.getMap()) {\n      this.getMap().removeOverlay(this.overlay_)\n    }\n\n    if (map) {\n      map.addOverlay(this.overlay_)\n\n      let interaction = map.getDefaultInteractions('pointermove')[0]\n      interaction.on('select', e => {\n        let selected = e.selected.filter(FeatureTooltip.canDisplay)\n        if (selected.length) {\n          let feature = selected[0]\n          if (feature.get('features')) {\n            feature = feature.get('features')[0]\n          }\n          this.setFeature(feature, e.mapBrowserEvent.coordinate)\n        } else {\n          this.setFeature(null)\n        }\n      })\n\n      /**\n       * @type {?G4UMap}\n       * @private\n       */\n      this.map_ = map\n    }\n  }\n\n  /**\n   * @returns {?ol.Feature}\n   */\n  getFeature () {\n    return this.feature_\n  }\n\n  /**\n   * @param {?ol.Feature} feature\n   * @param {ol.Coordinate} coordinate\n   * @param {string[]} [optPopupModifiers=[]]\n   */\n  setFeature (feature, coordinate = null, optPopupModifiers = []) {\n    if (feature) {\n      let currentPopupModifiers = [ ...this.defaultPopupModifiers_, ...optPopupModifiers ]\n      this.getMap().get('popupModifiers').apply({\n        name: feature.get('name'),\n        description: feature.get('description')\n      }, currentPopupModifiers)\n        .then(result => {\n          this.$element_.html(html2Text(result.name))\n          this.$element_.removeClass(cssClasses.hidden)\n        })\n      if (!coordinate) {\n        let geometry = feature.getGeometry()\n        coordinate = ol.extent.getCenter(geometry.getExtent())\n      }\n      this.overlay_.setPosition(coordinate)\n    } else {\n      this.$element_.addClass(cssClasses.hidden)\n    }\n    this.feature_ = feature\n  }\n\n  /**\n   * @returns {G4UMap}\n   */\n  getMap () {\n    return this.map_\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/FeatureTooltip.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 510,
    "kind": "typedef",
    "name": "FeatureTooltipOptions",
    "memberof": "src/FeatureTooltip.js",
    "static": true,
    "longname": "src/FeatureTooltip.js~FeatureTooltipOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'g4u-featuretooltip'",
        "defaultRaw": "'g4u-featuretooltip'",
        "name": "className",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[0,0]",
        "defaultRaw": [
          0,
          0
        ],
        "name": "offset",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.OverlayPositioning"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'center-center'",
        "defaultRaw": "'center-center'",
        "name": "positioning",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "popupModifier",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "FeatureTooltipOptions"
    }
  },
  {
    "__docId__": 511,
    "kind": "class",
    "name": "FeatureTooltip",
    "memberof": "src/FeatureTooltip.js",
    "static": true,
    "longname": "src/FeatureTooltip.js~FeatureTooltip",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/FeatureTooltip.js",
    "importStyle": "{FeatureTooltip}",
    "description": "Displays a tooltip if a feature with a name is hovered.",
    "lineNumber": 20,
    "interface": false
  },
  {
    "__docId__": 512,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "FeatureTooltipOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 513,
    "kind": "member",
    "name": "className_",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#className_",
    "access": "private",
    "description": "",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 514,
    "kind": "member",
    "name": "$element_",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#$element_",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 515,
    "kind": "member",
    "name": "overlay_",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#overlay_",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "ol.Overlay"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 516,
    "kind": "member",
    "name": "defaultPopupModifiers_",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#defaultPopupModifiers_",
    "access": "private",
    "description": "",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 517,
    "kind": "member",
    "name": "feature_",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#feature_",
    "access": "private",
    "description": "",
    "lineNumber": 58,
    "type": {
      "nullable": true,
      "types": [
        "ol.Feature"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 518,
    "kind": "method",
    "name": "canDisplay",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/FeatureTooltip.js~FeatureTooltip.canDisplay",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "feature",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 519,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 520,
    "kind": "member",
    "name": "map_",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#map_",
    "access": "private",
    "description": "",
    "lineNumber": 97,
    "type": {
      "nullable": true,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 521,
    "kind": "method",
    "name": "getFeature",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#getFeature",
    "access": "public",
    "description": "",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?ol.Feature}"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "ol.Feature"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "setFeature",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#setFeature",
    "access": "public",
    "description": "",
    "lineNumber": 113,
    "params": [
      {
        "nullable": true,
        "types": [
          "ol.Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "optPopupModifiers",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 524,
    "kind": "method",
    "name": "getMap",
    "memberof": "src/FeatureTooltip.js~FeatureTooltip",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FeatureTooltip.js~FeatureTooltip#getMap",
    "access": "public",
    "description": "",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{G4UMap}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 525,
    "kind": "file",
    "name": "src/FunctionCallBuffer.js",
    "content": "/**\n * Gathers function calls made in a specified time or till the main loop is free again and only calls the function once\n */\nexport class FunctionCallBuffer {\n  /**\n   * @param {function} func the function whichs call should be buffered\n   * @param {number} [bufferTime=0] time of the buffer. If set to 0 it evaluates as soon as the main loop is free again\n   */\n  constructor (func, bufferTime = 0) {\n    /**\n     * @type {function}\n     * @private\n     */\n    this.func_ = func\n    /**\n     * @type {number}\n     * @private\n     */\n    this.bufferTime_ = bufferTime\n\n    /**\n     * Timeout ID\n     * @type {number}\n     * @private\n     */\n    this.timeout_ = -1\n  }\n\n  /**\n   * @param {any[]} params\n   */\n  call (...params) {\n    clearTimeout(this.timeout_)\n    this.timeout_ = setTimeout(() => {\n      this.func_(...params)\n    }, this.bufferTime_)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/FunctionCallBuffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 526,
    "kind": "class",
    "name": "FunctionCallBuffer",
    "memberof": "src/FunctionCallBuffer.js",
    "static": true,
    "longname": "src/FunctionCallBuffer.js~FunctionCallBuffer",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/FunctionCallBuffer.js",
    "importStyle": "{FunctionCallBuffer}",
    "description": "Gathers function calls made in a specified time or till the main loop is free again and only calls the function once",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 527,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/FunctionCallBuffer.js~FunctionCallBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FunctionCallBuffer.js~FunctionCallBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "the function whichs call should be buffered"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "bufferTime",
        "description": "time of the buffer. If set to 0 it evaluates as soon as the main loop is free again"
      }
    ]
  },
  {
    "__docId__": 528,
    "kind": "member",
    "name": "func_",
    "memberof": "src/FunctionCallBuffer.js~FunctionCallBuffer",
    "static": false,
    "longname": "src/FunctionCallBuffer.js~FunctionCallBuffer#func_",
    "access": "private",
    "description": "",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 529,
    "kind": "member",
    "name": "bufferTime_",
    "memberof": "src/FunctionCallBuffer.js~FunctionCallBuffer",
    "static": false,
    "longname": "src/FunctionCallBuffer.js~FunctionCallBuffer#bufferTime_",
    "access": "private",
    "description": "",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 530,
    "kind": "member",
    "name": "timeout_",
    "memberof": "src/FunctionCallBuffer.js~FunctionCallBuffer",
    "static": false,
    "longname": "src/FunctionCallBuffer.js~FunctionCallBuffer#timeout_",
    "access": "private",
    "description": "Timeout ID",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 531,
    "kind": "method",
    "name": "call",
    "memberof": "src/FunctionCallBuffer.js~FunctionCallBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/FunctionCallBuffer.js~FunctionCallBuffer#call",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 533,
    "kind": "file",
    "name": "src/G4UMap.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport stripJsonComments from 'strip-json-comments'\n\nimport {MapConfigurator} from './configurators/MapConfigurator'\nimport './openlayersInjections'\nimport {L10N} from './L10N'\n\nimport {mergeWithDefaults} from './utilitiesObject'\nimport {cssClasses} from './globals'\n\nimport {defaults} from './defaultconfig'\n\nimport {Debug} from './Debug'\n\nimport '../less/map.less'\nimport { getRegisteredModules } from './moduleRegistration'\nimport { PopupModifierManager } from './PopupModifierManager'\n\n/**\n * @typedef {object} G4UMapOptions\n * @property {L10N} [localiser]\n * @property {object.<string, PopupModifier>} [popupModifiers]\n */\n\n/**\n * Definition of the map-object\n * Main task of the constructor is to load and read out the configuration.\n * Uses the functions makeMapLayers, makeMapUI to create the map.\n *\n * Custom properties accessible via method .get('propertyName')\n *\n * @fires 'resize'\n * @fires 'userActionTracking'\n * @fires 'beforeConfigLoad'\n * @fires 'afterConfigLoad'\n * @fires 'afterConfiguring'\n * @fires 'change:ready'\n * @fires 'change:ready:ui'\n * @fires 'change:ready:layers'\n */\nexport class G4UMap extends ol.Map {\n  /**\n   * @param {HTMLElement|jQuery|string} target element or id of an element\n   * @param {MapConfig|string} configOrFileName\n   * @param {LayerConfig|string} layerConfigOrFileName\n   * @param {G4UMapOptions} [options={}]\n   */\n  constructor (target, configOrFileName, layerConfigOrFileName, options = {}) {\n    let config = {}\n    let layerConfig = {}\n\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n    //                     Call of the Parents Class Constructor                                //\n    // //////////////////////////////////////////////////////////////////////////////////////// //\n\n    super({\n      controls: [],\n      interactions: [],\n      view: null\n    })\n\n    this.set('guide4youVersion', GUIDE4YOU_VERSION) // eslint-disable-line\n\n    /**\n     * @type {Map.<string, ol.interaction.Interaction[]>}\n     * @private\n     */\n    this.defaultInteractions_ = new Map()\n\n    /**\n     * @type {Map.<string, ol.interaction.Interaction[]>}\n     * @private\n     */\n    this.supersedingInteractions_ = new Map()\n\n    /**\n     * @type {Module[]}\n     * @private\n     */\n    this.modules_ = []\n\n    this.addModules(getRegisteredModules())\n\n    this.set('ready', false)\n\n    this.on([ 'change:ready', 'change:ready:ui', 'change:ready:layers' ], /** ol.ObjectEvent */ e => {\n      if (this.get(e.key)) {\n        this.dispatchEvent(e.key)\n      }\n    })\n\n    // popupModifiers\n\n    let popupModifiers = new PopupModifierManager()\n    this.set('popupModifiers', popupModifiers)\n\n    if (options.popupModifiers) {\n      this.on('change:featurePopup', () => {\n        for (let name of Object.keys(options.popupModifiers)) {\n          let popupModifier = options.popupModifiers[name]\n          popupModifier.setMap(this)\n          popupModifiers.register(name, popupModifier)\n        }\n      })\n    }\n\n    // Setting the target of the map\n\n    if (typeof target === 'string' && target[ 0 ] !== '#') {\n      this.setTarget($('#' + target).get(0))\n    } else {\n      this.setTarget($(target).get(0))\n    }\n\n    // set the display mode to desktop initially to render overviewmpa correctly\n    $(this.getTarget()).children().addClass(cssClasses.desktop)\n\n    // check type of mapConfig\n    if (typeof configOrFileName === 'object') {\n      config = configOrFileName\n    } else if (typeof configOrFileName === 'string') {\n      this.set('configFileName', configOrFileName)\n      this.set('defaultLayerConfigFileName', layerConfigOrFileName)\n    } else {\n      throw new Error('Unrecognised type for parameter configOrFileName!')\n    }\n\n    // check type of layerConfig\n    if (typeof layerConfigOrFileName === 'object') {\n      layerConfig = layerConfigOrFileName\n    } else if (typeof layerConfigOrFileName === 'string') {\n      this.set('layerConfigFileName', layerConfigOrFileName)\n    } else {\n      throw new Error('Unrecognised type for parameter layerConfigOrFileName!')\n    }\n\n    // //////////////////////////////////////////////////////////////////////////////////////////\n    //                            Load config files if needed                                 //\n    // //////////////////////////////////////////////////////////////////////////////////////////\n\n    this.dispatchEvent('beforeConfigLoad')\n\n    this.set('mapConfigReady', false)\n    this.set('layerConfigReady', false)\n\n    function loadConfigFile (fileName) {\n      return $.ajax({\n        url: fileName,\n        dataType: 'text'\n      }).then((data) => {\n        try {\n          return JSON.parse(stripJsonComments(data))\n        } catch (err) {\n          Debug.error(`The config file ${fileName} couldn't be parsed.`)\n          Debug.error(err)\n        }\n      }).fail((err) => {\n        Debug.error(`The config file ${fileName} couldn't be loaded.`)\n        Debug.error(err)\n      })\n    }\n\n    let filesToLoad = []\n\n    let configFileName = this.get('configFileName')\n    if (configFileName) {\n      filesToLoad.push(loadConfigFile(configFileName).then((data) => {\n        config = data\n      }))\n    }\n\n    let layerConfigFileName = this.get('layerConfigFileName')\n    if (layerConfigFileName) {\n      filesToLoad.push(loadConfigFile(layerConfigFileName).then((data) => {\n        layerConfig = data\n      }))\n    }\n\n    // wait for all promises in filesToLoad to resolve\n    Promise.all(filesToLoad).then(() => {\n      this.set('mapConfigReady', true)\n      this.set('layerConfigReady', true)\n\n      // Merging the custom config with the default config\n      config = mergeWithDefaults(config, defaults.config)\n\n      this.set('mapConfig', config)\n      this.set('layerConfig', layerConfig)\n\n      let loading = 0\n\n      // issue reload of mapConfig if the name was changed\n      this.on('change:configFileName', /** ol.ObjectEvent */ e => {\n        this.set('ready', false)\n        loading++\n\n        this.oldMapConfigs_ = this.oldMapConfigs_ || {}\n        this.oldMapConfigs_[ e.oldValue ] = this.get('mapConfig')\n\n        if (this.oldMapConfigs_.hasOwnProperty(this.get('configFileName'))) {\n          this.set('mapConfig', this.oldMapConfigs_[ this.get('configFileName') ])\n        } else {\n          this.set('mapConfigReady', false)\n          loadConfigFile(this.get('configFileName')).then((data) => {\n            this.set('mapConfigReady', true)\n            this.set('mapConfig', data)\n          }).always(() => {\n            loading--\n            if (loading === 0) {\n              this.set('ready', true)\n            }\n          })\n        }\n      })\n\n      // issue reload of layerConfig if the name was changed\n      this.on('change:layerConfigFileName', /** ol.ObjectEvent */ e => {\n        this.set('ready', false)\n        loading++\n\n        this.oldLayerConfigs_ = this.oldLayerConfigs_ || {}\n        this.oldLayerConfigs_[ e.oldValue ] = this.get('layerConfig')\n\n        if (this.oldLayerConfigs_.hasOwnProperty(this.get('layerConfigFileName'))) {\n          this.set('layerConfig', this.oldLayerConfigs_[ this.get('layerConfigFileName') ])\n        } else {\n          this.set('layerConfigReady', false)\n          loadConfigFile(this.get('layerConfigFileName'))\n            .then((data) => {\n              this.set('layerConfigReady', true)\n              this.set('layerConfig', data)\n            })\n            .always(() => {\n              loading--\n              if (loading === 0) {\n                this.set('ready', true)\n              }\n            })\n        }\n      })\n\n      this.set('proxy', config.proxy)\n\n      // //////////////////////////////////////////////////////////////////////////////////////// //\n      //                                     Localization                                         //\n      // //////////////////////////////////////////////////////////////////////////////////////// //\n\n      let asyncLanguageFilePromise\n\n      if (!options.localiser) {\n        let localiserOptions = {}\n\n        if (config.hasOwnProperty('languageSettings')) {\n          let l10nconf = config.languageSettings\n\n          localiserOptions.currentLanguage = l10nconf.currentLanguage\n\n          if (l10nconf.hasOwnProperty('defaultLanguage')) {\n            localiserOptions.defaultLanguage = l10nconf.defaultLanguage\n          }\n\n          if (l10nconf.hasOwnProperty('languageFile')) {\n            localiserOptions.languageFile = l10nconf.languageFile\n          }\n\n          if (l10nconf.hasOwnProperty('availableLanguages')) {\n            localiserOptions.availableLanguages = l10nconf.availableLanguages\n          }\n        }\n\n        let localiser = new L10N(localiserOptions)\n        this.set('localiser', localiser)\n\n        asyncLanguageFilePromise = localiser.ajaxGetLanguageFile()\n      } else {\n        this.set('localiser', options.localiser)\n      }\n\n      this.asSoonAs('ready', true, () => {\n        this.get('localiser').on('change:language', () => {\n          let visibilities = this.getLayerGroup().getIdsVisibilities()\n\n          this.get('configurator').configureLayers()\n          this.get('configurator').configureUI()\n\n          this.getLayerGroup().setIdsVisibilities(visibilities)\n        })\n      })\n\n      this.dispatchEvent('afterConfigLoad')\n\n      return asyncLanguageFilePromise\n    })\n      .then(() => {\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n        //                                    Configurator                                          //\n        // //////////////////////////////////////////////////////////////////////////////////////// //\n\n        this.set('configurator', new MapConfigurator(this))\n\n        this.dispatchEvent('afterConfiguring')\n\n        if (this.get('ready:ui') && this.get('ready:layers')) {\n          this.set('ready', true)\n        }\n\n        this.on([ 'change:ready:ui', 'change:ready:layers' ], /** ol.ObjectEvent */ e => {\n          if (!this.get(e.key)) {\n            this.set('ready', false)\n          }\n\n          if (this.get('ready:ui') && this.get('ready:layers')) {\n            this.set('ready', true)\n          }\n        })\n      })\n      .catch(Debug.defaultErrorHandler)\n  }\n\n  /**\n   * Searches all controls of the specified name\n   * @param {string} name\n   * @returns {Control[]}\n   */\n  getControlsByName (name) {\n    return this.controlsByName[ name ] || []\n  }\n\n  /**\n   * @param {Module} module\n   */\n  addModule (module) {\n    module.setMap(this)\n    this.modules_.push(module)\n  }\n\n  /**\n   * @param {Module[]} modules\n   */\n  addModules (modules) {\n    for (let module of modules) {\n      this.addModule(module)\n    }\n  }\n\n  /**\n   * The listener is called once immediately after the next postrender event\n   * @param listener\n   */\n  afterPostrender (listener) {\n    this.once('postrender', () => setTimeout(listener, 0))\n  }\n\n  /**\n   * @returns {Module[]}\n   */\n  getModules () {\n    return this.modules_\n  }\n\n  /**\n   * @param {ol.interaction.Interaction} interaction\n   */\n  removeInteraction (interaction) {\n    let index\n\n    this.defaultInteractions_.forEach(interactions => {\n      index = interactions.indexOf(interaction)\n      if (index > -1) {\n        interactions.splice(index, 1)\n      }\n    })\n\n    this.supersedingInteractions_.forEach(interactions => {\n      index = interactions.indexOf(interaction)\n      if (index > -1) {\n        interactions.splice(index, 1)\n      }\n    })\n\n    super.removeInteraction(interaction)\n  }\n\n  /**\n   * Remove all interactions\n   */\n  removeInteractions () {\n    while (this.getInteractions() && this.getInteractions().getLength()) {\n      for (let interaction of this.getInteractions().getArray()) {\n        this.removeInteraction(interaction)\n      }\n    }\n  }\n\n  /**\n   * overwrite base method to notify developer about differing api\n   */\n  addInteraction () {\n    throw new Error('Use addDefaultInteraction or addSupersedingInteraction')\n  }\n\n  /**\n   * Add an interaction that should be active by default (i.e. in the normal state of the map)\n   * @param {string} eventTypes a list of space separated eventtypes this interaction reacts on\n   * @param {ol.interaction.Interaction} interaction\n   */\n  addDefaultInteraction (eventTypes, interaction) {\n    for (let eventtype of eventTypes.split(' ')) {\n      if (this.defaultInteractions_.has(eventtype)) {\n        this.defaultInteractions_.get(eventtype).push(interaction)\n      } else {\n        this.defaultInteractions_.set(eventtype, [ interaction ])\n      }\n    }\n\n    super.addInteraction(interaction)\n  }\n\n  /**\n   * This deactivates all interactions which use a given event type\n   * @param {string} eventType\n   */\n  deactivateInteractions (eventType) {\n    for (let defInteraction of this.defaultInteractions_.get(eventType)) {\n      defInteraction.setActive(false)\n    }\n    for (let supInteraction of this.supersedingInteractions_.get(eventType)) {\n      supInteraction.setActive(false)\n    }\n  }\n\n  /**\n   * Reactivates all default interactions which use a specified event type\n   * @param {string} eventType\n   */\n  activateInteractions (eventType) {\n    for (let defInteraction of this.getDefaultInteractions(eventType)) {\n      defInteraction.setActive(true)\n    }\n  }\n\n  /**\n   * Gets all interactions which use the specified event type\n   * @param {string} eventType\n   * @returns {ol.interaction.Interaction[]}\n   */\n  getDefaultInteractions (eventType) {\n    return this.defaultInteractions_.get(eventType)\n  }\n\n  /**\n   * This adds an interaction to the map which prohibits other interactions which use the same eventtype to be active\n   * at the same time. When the superseding interaction is activated all affected ones get deactivated and vice versa\n   * @param {string} eventTypes a list of space separated eventtypes this interaction reacts on\n   * @param {ol.interaction.Interaction} interaction\n   */\n  addSupersedingInteraction (eventTypes, interaction) {\n    let eventTypes_ = eventTypes.split(' ')\n\n    let onActivation = () => {\n      // deactivation of all other interactions with the same eventtypes\n\n      for (let eventType of eventTypes_) {\n        for (let supersedingInteraction of this.supersedingInteractions_.get(eventType)) {\n          if (interaction !== supersedingInteraction) {\n            supersedingInteraction.setActive(false)\n          }\n        }\n\n        if (this.defaultInteractions_.get(eventType)) {\n          for (let defaultInteraction of this.defaultInteractions_.get(eventType)) {\n            defaultInteraction.setActive(false)\n          }\n        }\n      }\n    }\n\n    let onDeactivation = () => {\n      // reactivation of the default interactions\n      // NOTE: if a superseding turned off another superseding interactions it won't reactivate it\n      for (let eventType of eventTypes_) {\n        if (this.defaultInteractions_.get(eventType)) {\n          for (let defaultInteraction of this.defaultInteractions_.get(eventType)) {\n            defaultInteraction.setActive(true)\n          }\n        }\n      }\n    }\n\n    for (let eventType of eventTypes_) {\n      if (this.supersedingInteractions_.has(eventType)) {\n        this.supersedingInteractions_.get(eventType).push(interaction)\n      } else {\n        this.supersedingInteractions_.set(eventType, [ interaction ])\n      }\n    }\n\n    if (interaction.getActive()) {\n      onActivation()\n    }\n\n    interaction.on('change:active', /** ol.ObjectEvent */ e => {\n      if (e.oldValue !== interaction.getActive()) {\n        if (interaction.getActive()) {\n          this.activating_ = true\n          onActivation()\n          this.activating_ = false\n        } else {\n          if (this.interactionDecativationTimeout_) {\n            clearTimeout(this.interactionDecativationTimeout_)\n          }\n\n          if (!this.activating_) {\n            this.interactionDecativationTimeout_ = setTimeout(onDeactivation, 500)\n          }\n        }\n      }\n    })\n\n    super.addInteraction(interaction)\n  }\n\n  /**\n   * @param {GroupLayer} groupLayer\n   */\n  setLayerGroup (groupLayer) {\n    groupLayer.provideMap(this)\n    super.setLayerGroup(groupLayer)\n  }\n\n  /**\n   * Remove all controls\n   */\n  removeControls () {\n    let controls = this.getControls()\n\n    if (controls) {\n      // its neccessary to loop, problem caused by the nesting?\n      while (controls.getLength() > 0) {\n        controls.forEach(control => this.removeControl(control))\n        controls = this.getControls()\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/G4UMap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 534,
    "kind": "typedef",
    "name": "G4UMapOptions",
    "memberof": "src/G4UMap.js",
    "static": true,
    "longname": "src/G4UMap.js~G4UMapOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "L10N"
        ],
        "spread": false,
        "optional": true,
        "name": "localiser",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object.<string, PopupModifier>"
        ],
        "spread": false,
        "optional": true,
        "name": "popupModifiers",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "G4UMapOptions"
    }
  },
  {
    "__docId__": 535,
    "kind": "class",
    "name": "G4UMap",
    "memberof": "src/G4UMap.js",
    "static": true,
    "longname": "src/G4UMap.js~G4UMap",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/G4UMap.js",
    "importStyle": "{G4UMap}",
    "description": "Definition of the map-object\nMain task of the constructor is to load and read out the configuration.\nUses the functions makeMapLayers, makeMapUI to create the map.\n\nCustom properties accessible via method .get('propertyName')",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@fires",
        "tagValue": "'resize'"
      },
      {
        "tagName": "@fires",
        "tagValue": "'userActionTracking'"
      },
      {
        "tagName": "@fires",
        "tagValue": "'beforeConfigLoad'"
      },
      {
        "tagName": "@fires",
        "tagValue": "'afterConfigLoad'"
      },
      {
        "tagName": "@fires",
        "tagValue": "'afterConfiguring'"
      },
      {
        "tagName": "@fires",
        "tagValue": "'change:ready'"
      },
      {
        "tagName": "@fires",
        "tagValue": "'change:ready:ui'"
      },
      {
        "tagName": "@fires",
        "tagValue": "'change:ready:layers'"
      }
    ],
    "interface": false,
    "extends": [
      "openlayers~ol.Map"
    ]
  },
  {
    "__docId__": 536,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "jQuery",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "element or id of an element"
      },
      {
        "nullable": null,
        "types": [
          "MapConfig",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "configOrFileName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "LayerConfig",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerConfigOrFileName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "G4UMapOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 537,
    "kind": "member",
    "name": "defaultInteractions_",
    "memberof": "src/G4UMap.js~G4UMap",
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#defaultInteractions_",
    "access": "private",
    "description": "",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "Map.<string, ol.interaction.Interaction[]>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 538,
    "kind": "member",
    "name": "supersedingInteractions_",
    "memberof": "src/G4UMap.js~G4UMap",
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#supersedingInteractions_",
    "access": "private",
    "description": "",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "Map.<string, ol.interaction.Interaction[]>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 539,
    "kind": "member",
    "name": "modules_",
    "memberof": "src/G4UMap.js~G4UMap",
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#modules_",
    "access": "private",
    "description": "",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "Module[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 540,
    "kind": "member",
    "name": "oldMapConfigs_",
    "memberof": "src/G4UMap.js~G4UMap",
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#oldMapConfigs_",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 541,
    "kind": "member",
    "name": "oldLayerConfigs_",
    "memberof": "src/G4UMap.js~G4UMap",
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#oldLayerConfigs_",
    "access": "public",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "method",
    "name": "getControlsByName",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#getControlsByName",
    "access": "public",
    "description": "Searches all controls of the specified name",
    "lineNumber": 327,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Control[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Control[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 543,
    "kind": "method",
    "name": "addModule",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#addModule",
    "access": "public",
    "description": "",
    "lineNumber": 334,
    "params": [
      {
        "nullable": null,
        "types": [
          "Module"
        ],
        "spread": false,
        "optional": false,
        "name": "module",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 544,
    "kind": "method",
    "name": "addModules",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#addModules",
    "access": "public",
    "description": "",
    "lineNumber": 342,
    "params": [
      {
        "nullable": null,
        "types": [
          "Module[]"
        ],
        "spread": false,
        "optional": false,
        "name": "modules",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 545,
    "kind": "method",
    "name": "afterPostrender",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#afterPostrender",
    "access": "public",
    "description": "The listener is called once immediately after the next postrender event",
    "lineNumber": 352,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 546,
    "kind": "method",
    "name": "getModules",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#getModules",
    "access": "public",
    "description": "",
    "lineNumber": 359,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Module[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Module[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 547,
    "kind": "method",
    "name": "removeInteraction",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#removeInteraction",
    "access": "public",
    "description": "",
    "lineNumber": 366,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.interaction.Interaction"
        ],
        "spread": false,
        "optional": false,
        "name": "interaction",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 548,
    "kind": "method",
    "name": "removeInteractions",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#removeInteractions",
    "access": "public",
    "description": "Remove all interactions",
    "lineNumber": 389,
    "params": [],
    "return": null
  },
  {
    "__docId__": 549,
    "kind": "method",
    "name": "addInteraction",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#addInteraction",
    "access": "public",
    "description": "overwrite base method to notify developer about differing api",
    "lineNumber": 400,
    "params": [],
    "return": null
  },
  {
    "__docId__": 550,
    "kind": "method",
    "name": "addDefaultInteraction",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#addDefaultInteraction",
    "access": "public",
    "description": "Add an interaction that should be active by default (i.e. in the normal state of the map)",
    "lineNumber": 409,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventTypes",
        "description": "a list of space separated eventtypes this interaction reacts on"
      },
      {
        "nullable": null,
        "types": [
          "ol.interaction.Interaction"
        ],
        "spread": false,
        "optional": false,
        "name": "interaction",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 551,
    "kind": "method",
    "name": "deactivateInteractions",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#deactivateInteractions",
    "access": "public",
    "description": "This deactivates all interactions which use a given event type",
    "lineNumber": 425,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventType",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 552,
    "kind": "method",
    "name": "activateInteractions",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#activateInteractions",
    "access": "public",
    "description": "Reactivates all default interactions which use a specified event type",
    "lineNumber": 438,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventType",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 553,
    "kind": "method",
    "name": "getDefaultInteractions",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#getDefaultInteractions",
    "access": "public",
    "description": "Gets all interactions which use the specified event type",
    "lineNumber": 449,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.interaction.Interaction[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventType",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.interaction.Interaction[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 554,
    "kind": "method",
    "name": "addSupersedingInteraction",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#addSupersedingInteraction",
    "access": "public",
    "description": "This adds an interaction to the map which prohibits other interactions which use the same eventtype to be active\nat the same time. When the superseding interaction is activated all affected ones get deactivated and vice versa",
    "lineNumber": 459,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventTypes",
        "description": "a list of space separated eventtypes this interaction reacts on"
      },
      {
        "nullable": null,
        "types": [
          "ol.interaction.Interaction"
        ],
        "spread": false,
        "optional": false,
        "name": "interaction",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 555,
    "kind": "member",
    "name": "activating_",
    "memberof": "src/G4UMap.js~G4UMap",
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#activating_",
    "access": "public",
    "description": null,
    "lineNumber": 507,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 557,
    "kind": "member",
    "name": "interactionDecativationTimeout_",
    "memberof": "src/G4UMap.js~G4UMap",
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#interactionDecativationTimeout_",
    "access": "public",
    "description": null,
    "lineNumber": 516,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 558,
    "kind": "method",
    "name": "setLayerGroup",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#setLayerGroup",
    "access": "public",
    "description": "",
    "lineNumber": 528,
    "params": [
      {
        "nullable": null,
        "types": [
          "GroupLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "groupLayer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 559,
    "kind": "method",
    "name": "removeControls",
    "memberof": "src/G4UMap.js~G4UMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/G4UMap.js~G4UMap#removeControls",
    "access": "public",
    "description": "Remove all controls",
    "lineNumber": 536,
    "params": [],
    "return": null
  },
  {
    "__docId__": 560,
    "kind": "file",
    "name": "src/globals.js",
    "content": "/**\n * Globals\n */\n\n/**\n * Descriptive identifiers for some keyCodes\n * @type {object.<string, number>}\n */\nexport const keyCodes = {\n  ESCAPE: 27,\n  TAB: 9,\n  ARROW_DOWN: 40,\n  ARROW_UP: 38,\n  ENTER: 13,\n  SHIFT: 16,\n  CTRL: 17\n}\n\n/**\n * Names of globally used cssClasses are stored here\n * @type {object.<string, string>}\n */\nexport const cssClasses = {\n  mousedown: 'g4u-mouse-down',\n  clickable: 'g4u-clickable',\n  crosshair: 'g4u-crosshair',\n  hidden: 'g4u-hidden',\n  arrow: 'g4u-arrow',\n  mobile: 'g4u-mobile',\n  desktop: 'g4u-desktop',\n  move: 'g4u-move',\n  active: 'g4u-active',\n  mainButton: 'g4u-control-mainbutton',\n  hasTooltip: 'g4u-has-tooltip',\n  upperCase: 'g4u-uppercase',\n  collapsed: 'g4u-collapsed'\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/globals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 561,
    "kind": "variable",
    "name": "keyCodes",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~keyCodes",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/globals.js",
    "importStyle": "{keyCodes}",
    "description": "Descriptive identifiers for some keyCodes",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "object.<string, number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 562,
    "kind": "variable",
    "name": "cssClasses",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~cssClasses",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/globals.js",
    "importStyle": "{cssClasses}",
    "description": "Names of globally used cssClasses are stored here",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "object.<string, string>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 563,
    "kind": "file",
    "name": "src/html/ButtonBox.js",
    "content": "import $ from 'jquery'\nimport ol from 'openlayers'\n\nimport { cssClasses } from '../globals'\n\n/**\n * @typedef {object} ButtonBoxOptions\n * @property {string} [className='g4u-menu']\n * @property {HTMLElement|jQuery} [content] the content of the body of the button box\n * @property {boolean} [collapsible]\n * @property {boolean} [collapsed]\n * @property {boolean} [rtl]\n * @property {boolean} [titleButton=false] displays an extra button with a title firing an 'title:click' event\n * @property {string} [title] the title appearing on the button\n */\n\n/**\n * An Element to easily construct nested HTML Menus\n * It contains of a button followed by a body below the button. The button can toggle the visibility of the body.\n * If multiple elements with the same classname are nested it gives the last visible element a special class name.\n * It can also marks one or multiple element in the tree to be active (same classname is needed, too).\n * After a ButtonBox has been added all child elements the method finish should be called.\n */\nexport class ButtonBox extends ol.Object {\n  /**\n   * @param {ButtonBoxOptions} [options={}]\n   */\n  constructor (options = {}) {\n    super()\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = options.className || 'g4u-menu'\n\n    this.classNames_ = {\n      body: this.className_ + '-content',\n      collapseButton: this.className_ + '-collapsebutton',\n      titleButton: this.className_ + '-titlebutton',\n      title: this.className_ + '-title',\n      active: this.className_ + '-active',\n      collapsed: this.className_ + '-collapsed',\n      lastVisible: this.className_ + '-last-visible'\n    }\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$element_ = $('<div>')\n      .addClass(this.className_)\n\n    if (options.hasOwnProperty('id')) {\n      this.$element_.attr('id', options.id)\n    }\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.titleButton_ = options.titleButton || false\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsible_ = (options.hasOwnProperty('collapsible')) ? options.collapsible : true\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = (options.hasOwnProperty('collapsed')) ? options.collapsed : false\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$body_ = $('<div>')\n      .addClass(this.classNames_.body)\n\n    if (options.hasOwnProperty('content')) {\n      this.$body_.append(options.content)\n    }\n\n    if (options.hasOwnProperty('title')) {\n      /**\n       * @type {jQuery}\n       * @private\n       */\n      this.$title_ = $('<div>')\n        .addClass(this.classNames_.title)\n\n      this.$element_.append(this.$title_)\n\n      if (this.collapsible_) {\n        let $collapseButton = $('<button>')\n          .addClass(this.classNames_.collapseButton)\n\n        $collapseButton.on('click', () => {\n          this.setCollapsed(!this.collapsed_)\n          $collapseButton.blur()\n        })\n\n        if (this.titleButton_) {\n          let $titleButton = $('<button>')\n            .addClass(this.classNames_.titleButton)\n            .on('click', () => {\n              this.dispatchEvent('title:click')\n              $titleButton.blur()\n            })\n            .html(options.title)\n\n          if (options.rtl) {\n            $titleButton.prop('dir', 'rtl')\n          }\n\n          this.$title_\n            .append($collapseButton)\n            .append($titleButton)\n        } else {\n          $collapseButton\n            .addClass(this.classNames_.titleButton)\n            .html(options.title)\n\n          if (options.rtl) {\n            $collapseButton.prop('dir', 'rtl')\n          }\n\n          this.$title_\n            .append($collapseButton)\n        }\n      } else {\n        this.$title_\n          .html(options.title)\n\n        if (options.rtl) {\n          this.$title_.prop('dir', 'rtl')\n        }\n      }\n    } else {\n      this.collapsible_ = false\n      this.collapsed_ = false\n    }\n\n    this.$element_.append(this.$body_)\n\n    // this.collapsed_ will be setted in the following functions\n    if (!this.collapsed_) {\n      this.setCollapsed(false)\n    } else {\n      this.setCollapsed(true)\n    }\n  }\n\n  /**\n   * @param {boolean} collapsed\n   * @param {boolean} silent\n   */\n  setCollapsed (collapsed, silent) {\n    if (collapsed) {\n      this.$body_.addClass(cssClasses.hidden)\n      this.$element_.addClass(this.classNames_.collapsed)\n    } else {\n      this.$body_.removeClass(cssClasses.hidden)\n      this.$element_.removeClass(this.classNames_.collapsed)\n    }\n\n    this.collapsed_ = collapsed\n\n    this.lastVisibleClass_()\n    if (!silent) {\n      this.dispatchEvent('change:collapsed')\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getCollapsed () {\n    return this.collapsed_\n  }\n\n  /**\n   * distribute the last visible class to the correct element\n   * @private\n   */\n  lastVisibleClass_ () {\n    // first take the last visible class name away\n    if (this.takeLastVisible(this.$element_)) {\n      // if the last visible class name was taken, distribute it to the correct element\n      this.giveLastVisible(this.$element_)\n    }\n  }\n\n  /**\n   * Returns the body element\n   * @returns {jQuery}\n   */\n  get$Body () {\n    return this.$body_\n  }\n\n  /**\n   * Returns the element itself\n   * @returns {jQuery}\n   */\n  get$Element () {\n    return this.$element_\n  }\n\n  /**\n   * finds and returns the last child in the body of the given element if it is of the same classname as this ButtonBox\n   * @param {jQuery} $element\n   * @returns {jQuery}\n   * @private\n   */\n  get$LastChild_ ($element) {\n    return $element.children('.' + this.classNames_.body).children(':last-child')\n  }\n\n  setCollapseButtonActive (active) {\n    this.$title_.children('.' + this.classNames_.collapseButton).toggleClass(this.classNames_.active, active)\n  }\n\n  setTitleButtonActive (active) {\n    this.$title_.children('.' + this.classNames_.titleButton).toggleClass(this.classNames_.active, active)\n  }\n\n  /**\n   * Gives the last element in the element the last visible class\n   * @param $element\n   */\n  giveLastVisible ($element) {\n    if ($element.hasClass(this.classNames_.collapsed)) {\n      // if the element is collapsed itself is the last visible element\n      $element.addClass(this.classNames_.lastVisible)\n    } else {\n      if ($element.hasClass(this.className_)) {\n        // the element is a button box (with the same className) and not collapsed\n        let $lastChild = this.get$LastChild_($element)\n        if ($lastChild) {\n          // -> recursively call this method on the last element\n          this.giveLastVisible($lastChild)\n        } else {\n          // no last element exists\n          $element.addClass(this.classNames_.lastVisible)\n        }\n      } else {\n        // the element is no buttonbox with the same classname it is declared the last visible element\n        $element.addClass(this.classNames_.lastVisible)\n      }\n    }\n  }\n\n  /**\n   * Searches for the last visible class in its child elements and removes it.\n   * Returns true if it was removed.\n   * @param {jQuery} $element\n   * @returns {boolean}\n   */\n  takeLastVisible ($element) {\n    if ($element.hasClass(this.classNames_.lastVisible)) {\n      $element.removeClass(this.classNames_.lastVisible)\n      return true\n    } else if ($element.hasClass(this.className_)) {\n      let $lastChild = this.get$LastChild_($element)\n      // reverse call\n      if ($lastChild) {\n        return this.takeLastVisible($lastChild)\n      } else {\n        return false\n      }\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * This method should be called after all child elements have been added to the button box\n   */\n  finish () {\n    this.takeLastVisible(this.$element_)\n    this.giveLastVisible(this.$element_)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/html/ButtonBox.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 564,
    "kind": "typedef",
    "name": "ButtonBoxOptions",
    "memberof": "src/html/ButtonBox.js",
    "static": true,
    "longname": "src/html/ButtonBox.js~ButtonBoxOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'g4u-menu'",
        "defaultRaw": "'g4u-menu'",
        "name": "className",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "jQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "content",
        "description": "the content of the body of the button box"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "collapsible",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "collapsed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "rtl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "titleButton",
        "description": "displays an extra button with a title firing an 'title:click' event"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "title",
        "description": "the title appearing on the button"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "ButtonBoxOptions"
    }
  },
  {
    "__docId__": 565,
    "kind": "class",
    "name": "ButtonBox",
    "memberof": "src/html/ButtonBox.js",
    "static": true,
    "longname": "src/html/ButtonBox.js~ButtonBox",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/html/ButtonBox.js",
    "importStyle": "{ButtonBox}",
    "description": "An Element to easily construct nested HTML Menus\nIt contains of a button followed by a body below the button. The button can toggle the visibility of the body.\nIf multiple elements with the same classname are nested it gives the last visible element a special class name.\nIt can also marks one or multiple element in the tree to be active (same classname is needed, too).\nAfter a ButtonBox has been added all child elements the method finish should be called.",
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "openlayers~ol.Object"
    ]
  },
  {
    "__docId__": 566,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "ButtonBoxOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 567,
    "kind": "member",
    "name": "className_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#className_",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 568,
    "kind": "member",
    "name": "classNames_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#classNames_",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "{\"body\": *, \"collapseButton\": *, \"titleButton\": *, \"title\": *, \"active\": *, \"collapsed\": *, \"lastVisible\": *}"
      ]
    }
  },
  {
    "__docId__": 569,
    "kind": "member",
    "name": "$element_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#$element_",
    "access": "private",
    "description": "",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 570,
    "kind": "member",
    "name": "titleButton_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#titleButton_",
    "access": "private",
    "description": "",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 571,
    "kind": "member",
    "name": "collapsible_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#collapsible_",
    "access": "private",
    "description": "",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 572,
    "kind": "member",
    "name": "collapsed_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#collapsed_",
    "access": "private",
    "description": "",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 573,
    "kind": "member",
    "name": "$body_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#$body_",
    "access": "private",
    "description": "",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 574,
    "kind": "member",
    "name": "$title_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#$title_",
    "access": "private",
    "description": "",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 577,
    "kind": "method",
    "name": "setCollapsed",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#setCollapsed",
    "access": "public",
    "description": "",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "collapsed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "silent",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 579,
    "kind": "method",
    "name": "getCollapsed",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#getCollapsed",
    "access": "public",
    "description": "",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 580,
    "kind": "method",
    "name": "lastVisibleClass_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#lastVisibleClass_",
    "access": "private",
    "description": "distribute the last visible class to the correct element",
    "lineNumber": 189,
    "params": [],
    "return": null
  },
  {
    "__docId__": 581,
    "kind": "method",
    "name": "get$Body",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#get$Body",
    "access": "public",
    "description": "Returns the body element",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 582,
    "kind": "method",
    "name": "get$Element",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#get$Element",
    "access": "public",
    "description": "Returns the element itself",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 583,
    "kind": "method",
    "name": "get$LastChild_",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#get$LastChild_",
    "access": "private",
    "description": "finds and returns the last child in the body of the given element if it is of the same classname as this ButtonBox",
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 584,
    "kind": "method",
    "name": "setCollapseButtonActive",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#setCollapseButtonActive",
    "access": "public",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "params": [
      {
        "name": "active",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 585,
    "kind": "method",
    "name": "setTitleButtonActive",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#setTitleButtonActive",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [
      {
        "name": "active",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 586,
    "kind": "method",
    "name": "giveLastVisible",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#giveLastVisible",
    "access": "public",
    "description": "Gives the last element in the element the last visible class",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 587,
    "kind": "method",
    "name": "takeLastVisible",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#takeLastVisible",
    "access": "public",
    "description": "Searches for the last visible class in its child elements and removes it.\nReturns true if it was removed.",
    "lineNumber": 263,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 588,
    "kind": "method",
    "name": "finish",
    "memberof": "src/html/ButtonBox.js~ButtonBox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/ButtonBox.js~ButtonBox#finish",
    "access": "public",
    "description": "This method should be called after all child elements have been added to the button box",
    "lineNumber": 283,
    "params": [],
    "return": null
  },
  {
    "__docId__": 589,
    "kind": "file",
    "name": "src/html/Dropdown.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\nimport { cssClasses, keyCodes } from '../globals'\n\nimport 'polyfill!Array.prototype.findIndex,Array.prototype.find'\n\nimport '../../less/dropdown.less'\n\n/**\n * @typedef {object} DropdownOptions\n * @property {string} [className='g4u-dropdown']\n * @property {string} [ghostentry='no entries'] This text is shown if the dropdown has no entries\n * @property {number} [slideDuration=400] standard slideDuration\n */\n\n/**\n * @typedef {Object} Entry\n * @property {jQuery} $element\n * @property {*} value\n */\n\n$.extend($.easing, {\n  easeOutCirc: function (x, t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b\n  },\n  easeInCirc: function (x, t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b\n  }\n})\n\n/**\n * A HTML Dropdown select.\n * The text entries in the list can be setted and changed and given a click handler.\n * @fires 'leave:backwards' This event is raised if the dropdown is left via the up arrow or shift+tab\n * @fires 'leave:forwards' This event is raised if the dropdown is left via the down arrow or tab\n */\nexport class Dropdown extends ol.Object {\n  /**\n   * @param {DropdownOptions} [options={}]\n   */\n  constructor (options = {}) {\n    super()\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = options.className || 'g4u-dropdown'\n\n    /**\n     * @type {Object.<string, string>}\n     * @private\n     */\n    this.classNames_ = {\n      entry: this.className_ + '-entry',\n      selected: this.className_ + '-selected',\n      ghost: this.className_ + '-ghostentry'\n    }\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$element_ = $('<div>')\n      .addClass(this.className_)\n\n    /**\n     * @type {jQuery}\n     */\n    this.$ghostentry = $('<button tabindex=\"-1\">')\n      .addClass(this.classNames_.ghost)\n      .html(options.ghostentry || 'no entries')\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.slideDuration_ = options.slideDuration || 400\n\n    /**\n     * @type {Entry[]}\n     * @private\n     */\n    this.entriesArray_ = []\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.selectedIndex_ = -1\n\n    // key handling\n\n    this.setUpKeyboardHandling_()\n\n    this.$element_.on('focus', () => {\n      if (this.selectedIndex_ > -1) {\n        this.entriesArray_[this.selectedIndex_].$element.focus()\n      }\n    })\n\n    this.$element_.get(0).addEventListener('mousemove', e => {\n      e.stopPropagation()\n    }, false)\n\n    this.slideUp(true)\n  }\n\n  /**\n   * returns the value of the selected list element\n   * @returns {*}\n   */\n  getValue () {\n    if (this.selectedIndex_ >= 0) {\n      return this.entriesArray_[this.selectedIndex_].value\n    }\n  }\n\n  /**\n   * returns the text of the current selected list element\n   */\n  getText () {\n    if (this.selectedIndex_ >= 0) {\n      return this.entriesArray_[this.selectedIndex_].text\n    }\n  }\n\n  /**\n   * @private\n   */\n  setUpKeyboardHandling_ () {\n    this.$element_.on('keydown', e => {\n      switch (e.which) {\n        case keyCodes.ARROW_DOWN:\n          e.preventDefault()\n          e.stopPropagation()\n          if (this.selectedIndex_ < this.entriesArray_.length - 1) {\n            this.entriesArray_[this.selectedIndex_ + 1].$element.addClass(this.classNames_.selected)\n            this.entriesArray_[this.selectedIndex_ + 1].$element.focus()\n            this.entriesArray_[this.selectedIndex_].$element.removeClass(this.classNames_.selected)\n            this.selectedIndex_ += 1\n          }\n          break\n        case keyCodes.ARROW_UP:\n          e.preventDefault()\n          e.stopPropagation()\n          if (this.selectedIndex_ > 0) {\n            this.entriesArray_[this.selectedIndex_ - 1].$element.addClass(this.classNames_.selected)\n            this.entriesArray_[this.selectedIndex_ - 1].$element.focus()\n            this.entriesArray_[this.selectedIndex_].$element.removeClass(this.classNames_.selected)\n            this.selectedIndex_ -= 1\n          } else {\n            this.entriesArray_[this.selectedIndex_].$element.removeClass(this.classNames_.selected)\n            this.selectedIndex_ = -1\n            this.dispatchEvent({\n              type: 'leave:backwards',\n              originalEvent: e\n            })\n          }\n          break\n        case keyCodes.TAB:\n          if (!e.shiftKey) {\n            this.dispatchEvent({\n              type: 'leave:forwards',\n              originalEvent: e\n            })\n          } else {\n            this.dispatchEvent({\n              type: 'leave:backwards',\n              originalEvent: e\n            })\n          }\n          break\n        case keyCodes.ENTER:\n          e.stopPropagation()\n          e.preventDefault()\n          this.select$Entry_(this.entriesArray_[this.selectedIndex_].$element)\n      }\n    })\n  }\n\n  /**\n   * return the whole element\n   * @returns {jQuery}\n   */\n  get$Element () {\n    return this.$element_\n  }\n\n  /**\n   * Returns the amount of dropdown entries\n   * @returns {Number}\n   */\n  getLength () {\n    return this.entriesArray_.length\n  }\n\n  /**\n   * Adds an entry to the end of the dropdown list\n   * @param {*} value\n   * @param {string} [text=value]\n   * @param {boolean} [optSelected=false]\n   */\n  addEntry (value, text, optSelected = false) {\n    text = text || value\n\n    let index = this.getLength()\n    this.setLength(index + 1)\n\n    let entry = this.entriesArray_[index]\n    entry.text = text\n    entry.$element.html(text)\n    entry.value = value\n\n    if (optSelected) {\n      entry.$element.addClass(this.classNames_.selected)\n      this.selectedIndex_ = index\n    }\n  }\n\n  setActivated (value, active) {\n    this.entriesArray_.find(o => o.value === value).$element.toggleClass(cssClasses.active, active)\n  }\n\n  /**\n   * This function takes an array of entries (strings).\n   * The length of the dropdown is set to the length of the arrays (they have to have the same length).\n   * @param {any[]} values\n   * @param {string[]} [texts=values]\n   */\n  setEntries (values, texts) {\n    texts = texts || values\n    this.setLength(values.length)\n\n    for (let i = 0, ii = values.length; i < ii; i++) {\n      this.entriesArray_[i].text = texts[i]\n      this.entriesArray_[i].$element.html(texts[i])\n      this.entriesArray_[i].value = values[i]\n    }\n  }\n\n  select$Entry_ ($entry) {\n    if (!$entry.hasClass(this.classNames_.selected)) {\n      $entry.addClass(this.classNames_.selected)\n      if (this.selectedIndex_ > -1) {\n        this.entriesArray_[this.selectedIndex_].$element.removeClass(this.classNames_.selected)\n      }\n    }\n    this.selectedIndex_ = this.entriesArray_.findIndex(el => el.$element === $entry)\n    this.dispatchEvent('select')\n  }\n\n  /**\n   * This function corrects the number of entries in the dropdown. The content of the entries is not respected.\n   * New entries are slided down, to be removed entries are slided up then removed.\n   * @param {number} length\n   */\n  setLength (length) {\n    if (this.selectedIndex_ > -1) {\n      this.entriesArray_[this.selectedIndex_].$element.removeClass(this.classNames_.selected)\n      this.selectedIndex_ = -1\n    }\n\n    let i, ii\n\n    if (this.entriesArray_.length === 0) { // removing ghost entry\n      this.$element_.empty()\n    }\n\n    if (length > this.entriesArray_.length) { // adding entries and dropdown handlers\n      for (i = this.entriesArray_.length, ii = length; i < ii; i++) {\n        let $entry = $('<button tabindex=\"-1\">')\n          .addClass(this.classNames_.entry)\n          .hide()\n\n        $entry.on('click', () => this.select$Entry_($entry))\n        $entry.focus()\n\n        this.$element_.append($entry)\n\n        this.entriesArray_.push({\n          $element: $entry\n        })\n\n        $entry.slideDown({ duration: this.slideDuration_ })\n      }\n    } else if (length < this.entriesArray_.length) { // removing entries\n      for (i = this.entriesArray_.length - 1, ii = length; i >= ii; i--) {\n        this.entriesArray_[i].$element.slideUp({\n          duration: this.slideDuration_,\n          complete: () => {\n            this.entriesArray_.pop()\n            this.$element_.children().last().remove()\n          }\n        })\n      }\n      if (this.selectedIndex_ >= length) { // correcting selected element\n        this.selectedIndex_ = length - 1\n      }\n    }\n  }\n\n  showGhostEntry () {\n    this.setLength(0)\n    this.$element_.append(this.$ghostentry)\n    this.slideDown()\n  }\n\n  focus () {\n    if (this.entriesArray_.length >= 0) {\n      if (this.selectedIndex_ < 0) {\n        this.selectedIndex_ = 0\n        this.entriesArray_[0].$element.addClass(this.classNames_.selected)\n      }\n      this.entriesArray_[this.selectedIndex_].$element.focus()\n    }\n  }\n\n  /**\n   * @param {boolean} [immediately=false] if setted to true the animation is skipped\n   * @returns {Promise}\n   */\n  slideUp (immediately = false) {\n    return new Promise(resolve => {\n      let duration = 0\n      if (!immediately) {\n        duration = this.slideDuration_\n      }\n      this.$element_.slideUp({\n        duration: duration,\n        complete: () => {\n          this.$element_.addClass(cssClasses.hidden)\n          resolve()\n        },\n        easing: 'easeInCirc'\n      })\n    })\n  }\n\n  /**\n   * @param {boolean} [immediately=false] if setted to true the animation is skipped\n   * @returns {Promise}\n   */\n  slideDown (immediately = false) {\n    return new Promise(resolve => {\n      if (this.$element_.children().length > 0) {\n        let duration = 0\n        if (!immediately) {\n          duration = this.slideDuration_\n        }\n        this.$element_.removeClass(cssClasses.hidden)\n        this.$element_.slideDown({\n          easing: 'easeOutCirc',\n          complete: resolve,\n          duration: duration\n        })\n      }\n    })\n  }\n\n  /**\n   * Removes all entries\n   */\n  clear () {\n    this.slideUp()\n    this.$element_.empty()\n    this.entriesArray_ = []\n    this.selectedIndex_ = -1\n  }\n\n  /**\n   * Returns true if the dropdown has selectable elements\n   * @returns {boolean}\n   */\n  isSelectable () {\n    return (this.entriesArray_.length > 0)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/html/Dropdown.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 590,
    "kind": "typedef",
    "name": "DropdownOptions",
    "memberof": "src/html/Dropdown.js",
    "static": true,
    "longname": "src/html/Dropdown.js~DropdownOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'g4u-dropdown'",
        "defaultRaw": "'g4u-dropdown'",
        "name": "className",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'no entries'",
        "defaultRaw": "'no entries'",
        "name": "ghostentry",
        "description": "This text is shown if the dropdown has no entries"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "400",
        "defaultRaw": 400,
        "name": "slideDuration",
        "description": "standard slideDuration"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "DropdownOptions"
    }
  },
  {
    "__docId__": 591,
    "kind": "typedef",
    "name": "Entry",
    "memberof": "src/html/Dropdown.js",
    "static": true,
    "longname": "src/html/Dropdown.js~Entry",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "properties": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Entry"
    }
  },
  {
    "__docId__": 592,
    "kind": "class",
    "name": "Dropdown",
    "memberof": "src/html/Dropdown.js",
    "static": true,
    "longname": "src/html/Dropdown.js~Dropdown",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/html/Dropdown.js",
    "importStyle": "{Dropdown}",
    "description": "A HTML Dropdown select.\nThe text entries in the list can be setted and changed and given a click handler.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@fires",
        "tagValue": "'leave:backwards' This event is raised if the dropdown is left via the up arrow or shift+tab"
      },
      {
        "tagName": "@fires",
        "tagValue": "'leave:forwards' This event is raised if the dropdown is left via the down arrow or tab"
      }
    ],
    "interface": false,
    "extends": [
      "openlayers~ol.Object"
    ]
  },
  {
    "__docId__": 593,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "DropdownOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 594,
    "kind": "member",
    "name": "className_",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#className_",
    "access": "private",
    "description": "",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 595,
    "kind": "member",
    "name": "classNames_",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#classNames_",
    "access": "private",
    "description": "",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Object.<string, string>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 596,
    "kind": "member",
    "name": "$element_",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#$element_",
    "access": "private",
    "description": "",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 597,
    "kind": "member",
    "name": "$ghostentry",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#$ghostentry",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "slideDuration_",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#slideDuration_",
    "access": "private",
    "description": "",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 599,
    "kind": "member",
    "name": "entriesArray_",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#entriesArray_",
    "access": "private",
    "description": "",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "Entry[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 600,
    "kind": "member",
    "name": "selectedIndex_",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#selectedIndex_",
    "access": "private",
    "description": "",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 601,
    "kind": "method",
    "name": "getValue",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#getValue",
    "access": "public",
    "description": "returns the value of the selected list element",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 602,
    "kind": "method",
    "name": "getText",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#getText",
    "access": "public",
    "description": "returns the text of the current selected list element",
    "lineNumber": 122,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 603,
    "kind": "method",
    "name": "setUpKeyboardHandling_",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#setUpKeyboardHandling_",
    "access": "private",
    "description": "",
    "lineNumber": 131,
    "params": [],
    "return": null
  },
  {
    "__docId__": 607,
    "kind": "method",
    "name": "get$Element",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#get$Element",
    "access": "public",
    "description": "return the whole element",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 608,
    "kind": "method",
    "name": "getLength",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#getLength",
    "access": "public",
    "description": "Returns the amount of dropdown entries",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 609,
    "kind": "method",
    "name": "addEntry",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#addEntry",
    "access": "public",
    "description": "Adds an entry to the end of the dropdown list",
    "lineNumber": 204,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "value",
        "defaultRaw": "value",
        "name": "text",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "optSelected",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 611,
    "kind": "method",
    "name": "setActivated",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#setActivated",
    "access": "public",
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "active",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 612,
    "kind": "method",
    "name": "setEntries",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#setEntries",
    "access": "public",
    "description": "This function takes an array of entries (strings).\nThe length of the dropdown is set to the length of the arrays (they have to have the same length).",
    "lineNumber": 231,
    "params": [
      {
        "nullable": null,
        "types": [
          "any[]"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "values",
        "defaultRaw": "values",
        "name": "texts",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 613,
    "kind": "method",
    "name": "select$Entry_",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#select$Entry_",
    "access": "public",
    "description": null,
    "lineNumber": 242,
    "undocument": true,
    "params": [
      {
        "name": "$entry",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 615,
    "kind": "method",
    "name": "setLength",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#setLength",
    "access": "public",
    "description": "This function corrects the number of entries in the dropdown. The content of the entries is not respected.\nNew entries are slided down, to be removed entries are slided up then removed.",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 618,
    "kind": "method",
    "name": "showGhostEntry",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#showGhostEntry",
    "access": "public",
    "description": null,
    "lineNumber": 303,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 619,
    "kind": "method",
    "name": "focus",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#focus",
    "access": "public",
    "description": null,
    "lineNumber": 309,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 621,
    "kind": "method",
    "name": "slideUp",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#slideUp",
    "access": "public",
    "description": "",
    "lineNumber": 323,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "immediately",
        "description": "if setted to true the animation is skipped"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 622,
    "kind": "method",
    "name": "slideDown",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#slideDown",
    "access": "public",
    "description": "",
    "lineNumber": 344,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "immediately",
        "description": "if setted to true the animation is skipped"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 623,
    "kind": "method",
    "name": "clear",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#clear",
    "access": "public",
    "description": "Removes all entries",
    "lineNumber": 364,
    "params": [],
    "return": null
  },
  {
    "__docId__": 626,
    "kind": "method",
    "name": "isSelectable",
    "memberof": "src/html/Dropdown.js~Dropdown",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Dropdown.js~Dropdown#isSelectable",
    "access": "public",
    "description": "Returns true if the dropdown has selectable elements",
    "lineNumber": 375,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 627,
    "kind": "file",
    "name": "src/html/History.js",
    "content": "export class History {\n  constructor () {\n    this.callbacks_ = []\n\n    if (window.history.state !== 'future') {\n      window.history.replaceState('base', '')\n      window.history.pushState('future', '')\n    }\n\n    window.addEventListener('popstate', e => {\n      if (e.state === 'base') {\n        let cb = this.callbacks_.pop()\n        if (cb) {\n          cb.call()\n          window.history.forward()\n        } else {\n          window.history.back()\n        }\n      }\n    })\n  }\n\n  push (callback) {\n    this.callbacks_.push(callback)\n  }\n\n  pop () {\n    this.callbacks_.pop().call()\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/html/History.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 628,
    "kind": "class",
    "name": "History",
    "memberof": "src/html/History.js",
    "static": true,
    "longname": "src/html/History.js~History",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/html/History.js",
    "importStyle": "{History}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 629,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/html/History.js~History",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/History.js~History#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 630,
    "kind": "member",
    "name": "callbacks_",
    "memberof": "src/html/History.js~History",
    "static": false,
    "longname": "src/html/History.js~History#callbacks_",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 631,
    "kind": "method",
    "name": "push",
    "memberof": "src/html/History.js~History",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/History.js~History#push",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 632,
    "kind": "method",
    "name": "pop",
    "memberof": "src/html/History.js~History",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/History.js~History#pop",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 633,
    "kind": "file",
    "name": "src/html/html.js",
    "content": "/**\n * @module html\n * html helper functions\n */\n\nimport $ from 'jquery'\nimport {cssClasses} from '../globals'\n\n/**\n * This function gets an $element inside a $context in fornt of all of them\n * @param {jQuery} $element\n * @param {jQuery} $context\n */\nexport function getInFront ($element, $context) {\n  let highest = 0\n\n  $context = $context || $(document)\n\n  let foundAbsolute = false\n\n  $element.parents().each((i, el) => {\n    if (!$(el).is($context)) {\n      if ($(el).css('position') === 'absolute') {\n        foundAbsolute = true\n        getInFront($(el), $context)\n        getInFront($element, $(el))\n      }\n    }\n  })\n\n  if (!foundAbsolute) {\n    $context\n      .find('*:visible')\n      .not((i, el) => el !== $element[0] && $(el).parents().is($element))\n      .each(function () {\n        let current = parseInt($(this).css('z-index'), 10)\n        if (current && highest < current) {\n          highest = current\n        }\n      })\n\n    $element.css('z-index', highest + 1)\n  }\n}\n\n/**\n * @param {jQuery} $element\n * @param {string} text\n */\nexport function addTooltip ($element, text) {\n  $element\n    .addClass(cssClasses.hasTooltip)\n    .append($('<span role=\"tooltip\">')\n      .html(text))\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/html/html.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 634,
    "kind": "function",
    "name": "getInFront",
    "memberof": "src/html/html.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/html/html.js~getInFront",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/html/html.js",
    "importStyle": "{getInFront}",
    "description": "This function gets an $element inside a $context in fornt of all of them",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$context",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 635,
    "kind": "function",
    "name": "addTooltip",
    "memberof": "src/html/html.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/html/html.js~addTooltip",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/html/html.js",
    "importStyle": "{addTooltip}",
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 636,
    "kind": "file",
    "name": "src/html/Shield.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport { cssClasses, keyCodes } from '../globals'\nimport { getInFront } from './html'\n\nimport '../../less/shield.less'\n\n/**\n * @typedef {object} ShieldOptions\n * @property {G4UMap} map\n * @property {string} [className='g4u-shield']\n */\n\n/**\n * @typedef {object} ElementPosition\n * @property {jQuery} $actualElement\n * @property {jQuery} $oldParent\n * @property {number} oldIndex\n */\n\n/**\n * @typedef {object} OnTopOptions\n * @property {boolean} [findParentWindow=false]\n */\n\n/**\n * A shield that sets itself in front of all other elements in a context if activated, hides itself if deactivated.\n * It can get another element in front of it (Attention: it gets removed from its context temporarly)\n */\nexport class Shield extends ol.Object {\n  /**\n   * @param {ShieldOptions} options\n   */\n  constructor (options) {\n    super()\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = options.className || 'g4u-shield'\n\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = options.map\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$context_ = $(this.map_.getTarget())\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$element_ = $('<div>')\n      .addClass(this.className_)\n\n    this.$context_.append(this.$element_)\n\n    this.setActive(options.hasOwnProperty('active') ? options.active : false)\n\n    this.$element_.on('keydown', e => {\n      if (e.which === keyCodes.ESCAPE) {\n        if (this.getActive()) {\n          this.setActive(false)\n        }\n      }\n    })\n\n    /**\n     * @type {Map<jQuery, ElementPosition>}\n     * @private\n     */\n    this.elementsOnTop_ = new Map()\n  }\n\n  /**\n   * @param {boolean} active\n   */\n  setActive (active) {\n    let oldValue = this.active_\n    if (oldValue !== active) {\n      if (active) {\n        this.$element_.removeClass(cssClasses.hidden)\n        getInFront(this.$element_, this.$context_)\n      } else {\n        this.$element_.addClass(cssClasses.hidden)\n      }\n      this.active_ = active\n      this.dispatchEvent({\n        type: 'change:active',\n        oldValue: oldValue,\n        key: 'active'\n      })\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getActive () {\n    return this.active_\n  }\n\n  /**\n   * Gets the given element in front of the shield. The element is removed from its context temporarily\n   * @param {jQuery} $element\n   * @param {OnTopOptions} [options]\n   */\n  add$OnTop ($element, options = {}) {\n    let $actualElement = $element\n\n    if (!options.hasOwnProperty('findParentWindow') || options.findParentWindow) {\n      let $window = $element.parents().filter('.g4u-window')\n      if ($window.length > 0) {\n        $actualElement = $window\n      }\n    }\n\n    let $oldParent = $actualElement.parent()\n\n    this.elementsOnTop_.set($element[0], {\n      $actualElement,\n      $oldParent,\n      oldIndex: $oldParent.children().index($actualElement)\n    })\n\n    this.$element_.append($actualElement)\n    getInFront($actualElement, this.$element_)\n\n    for (let className of Array.from($oldParent[0].classList)) {\n      this.$element_.addClass(className)\n    }\n  }\n\n  /**\n   * Returns the given element in front of the shield to the previous context\n   * @param {jQuery} $element\n   * @returns {Promise}\n   */\n  remove$OnTop ($element) {\n    let element = $element[0]\n\n    let {$actualElement, $oldParent, oldIndex} = this.elementsOnTop_.get(element)\n\n    if (oldIndex === 0) {\n      $oldParent.prepend($actualElement)\n    } else {\n      $oldParent.children().eq(oldIndex - 1).after($actualElement)\n    }\n\n    for (let className of Array.from($oldParent[0].classList)) {\n      this.$element_.removeClass(className)\n    }\n\n    this.elementsOnTop_.delete(element)\n  }\n\n  /**\n   * Returns all children in front of the shield\n   * @returns {jQuery}\n   */\n  get$ElementsInFront () {\n    return this.$element_.children()\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/html/Shield.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 637,
    "kind": "typedef",
    "name": "ShieldOptions",
    "memberof": "src/html/Shield.js",
    "static": true,
    "longname": "src/html/Shield.js~ShieldOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'g4u-shield'",
        "defaultRaw": "'g4u-shield'",
        "name": "className",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "ShieldOptions"
    }
  },
  {
    "__docId__": 638,
    "kind": "typedef",
    "name": "ElementPosition",
    "memberof": "src/html/Shield.js",
    "static": true,
    "longname": "src/html/Shield.js~ElementPosition",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$actualElement",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$oldParent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "oldIndex",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "ElementPosition"
    }
  },
  {
    "__docId__": 639,
    "kind": "typedef",
    "name": "OnTopOptions",
    "memberof": "src/html/Shield.js",
    "static": true,
    "longname": "src/html/Shield.js~OnTopOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "findParentWindow",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "OnTopOptions"
    }
  },
  {
    "__docId__": 640,
    "kind": "class",
    "name": "Shield",
    "memberof": "src/html/Shield.js",
    "static": true,
    "longname": "src/html/Shield.js~Shield",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/html/Shield.js",
    "importStyle": "{Shield}",
    "description": "A shield that sets itself in front of all other elements in a context if activated, hides itself if deactivated.\nIt can get another element in front of it (Attention: it gets removed from its context temporarly)",
    "lineNumber": 31,
    "interface": false,
    "extends": [
      "openlayers~ol.Object"
    ]
  },
  {
    "__docId__": 641,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/html/Shield.js~Shield",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Shield.js~Shield#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "ShieldOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 642,
    "kind": "member",
    "name": "className_",
    "memberof": "src/html/Shield.js~Shield",
    "static": false,
    "longname": "src/html/Shield.js~Shield#className_",
    "access": "private",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 643,
    "kind": "member",
    "name": "map_",
    "memberof": "src/html/Shield.js~Shield",
    "static": false,
    "longname": "src/html/Shield.js~Shield#map_",
    "access": "private",
    "description": "",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 644,
    "kind": "member",
    "name": "$context_",
    "memberof": "src/html/Shield.js~Shield",
    "static": false,
    "longname": "src/html/Shield.js~Shield#$context_",
    "access": "private",
    "description": "",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 645,
    "kind": "member",
    "name": "$element_",
    "memberof": "src/html/Shield.js~Shield",
    "static": false,
    "longname": "src/html/Shield.js~Shield#$element_",
    "access": "private",
    "description": "",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 646,
    "kind": "member",
    "name": "elementsOnTop_",
    "memberof": "src/html/Shield.js~Shield",
    "static": false,
    "longname": "src/html/Shield.js~Shield#elementsOnTop_",
    "access": "private",
    "description": "",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Map<jQuery, ElementPosition>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 647,
    "kind": "method",
    "name": "setActive",
    "memberof": "src/html/Shield.js~Shield",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Shield.js~Shield#setActive",
    "access": "public",
    "description": "",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "active",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 648,
    "kind": "member",
    "name": "active_",
    "memberof": "src/html/Shield.js~Shield",
    "static": false,
    "longname": "src/html/Shield.js~Shield#active_",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 649,
    "kind": "method",
    "name": "getActive",
    "memberof": "src/html/Shield.js~Shield",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Shield.js~Shield#getActive",
    "access": "public",
    "description": "",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 650,
    "kind": "method",
    "name": "add$OnTop",
    "memberof": "src/html/Shield.js~Shield",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Shield.js~Shield#add$OnTop",
    "access": "public",
    "description": "Gets the given element in front of the shield. The element is removed from its context temporarily",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "OnTopOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 651,
    "kind": "method",
    "name": "remove$OnTop",
    "memberof": "src/html/Shield.js~Shield",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Shield.js~Shield#remove$OnTop",
    "access": "public",
    "description": "Returns the given element in front of the shield to the previous context",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 652,
    "kind": "method",
    "name": "get$ElementsInFront",
    "memberof": "src/html/Shield.js~Shield",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Shield.js~Shield#get$ElementsInFront",
    "access": "public",
    "description": "Returns all children in front of the shield",
    "lineNumber": 168,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 653,
    "kind": "file",
    "name": "src/html/Window.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport {offset} from '../utilities'\nimport {getInFront} from './html'\nimport {cssClasses} from '../globals'\n\nimport IScroll from 'iscroll/build/iscroll'\n\nimport '../../less/window.less'\n\n/**\n * @typedef {object} WindowOptions\n * @property {boolean} [draggable=false]\n * @property {string} [id] an html id for the outer window element\n * @property {string} [className] an alternative html class name to use instead of 'g4u-window', not recommended\n * @property {G4UMap} [map] the map the window should be shown on. The viewport will be set as the context of the window\n * @property {jQuery} [$context] context the window is shown in\n * @property {boolean} [visible=false] the visibility of the window on start up\n * @property {boolean} [fixedPosition=false] if the window is movable or not\n */\n\n/**\n * A HTML Window\n */\nexport class Window extends ol.Object {\n  /**\n   * @param {WindowOptions} options\n   */\n  constructor (options = {}) {\n    super()\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = (options.hasOwnProperty('className')) ? options.className : 'g4u-window'\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameBody_ = this.className_ + '-content'\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.classNameButtonClose_ = this.className_ + '-button-close'\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$element_ = $('<div>').addClass(this.className_)\n      .on('click', e => e.stopPropagation())\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$positionWrapper_ = $('<div>').addClass(this.className_ + '-inner-position')\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$scrollWrapper_ = $('<div>').addClass(this.className_ + '-scroll-wrap')\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$body_ = $('<div>').addClass(this.classNameBody_)\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$button_ = $('<button>').addClass(this.classNameButtonClose_)\n\n    this.$element_\n      .append(this.$button_)\n      .append(this.$positionWrapper_\n        .append(this.$scrollWrapper_.append(this.$body_)\n        )\n      )\n      .addClass(cssClasses.hidden)\n\n    if (options.hasOwnProperty('id')) {\n      this.$element_.attr('id', options.id)\n    }\n\n    this.$button_.on('click', () => this.setVisible(false))\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.draggable_ = options.hasOwnProperty('draggable') ? options.draggable : true\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.fixedPosition_ = options.fixedPosition === true\n\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = options.map\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.$context_ = $(this.map_.getTarget())\n    let initialDraggable = this.draggable_\n\n    this.map_.asSoonAs('ready', true, () => {\n      this.map_.on('resize', () => this.updateSize(true))\n\n      let onChangeMobile = () => {\n        if (this.map_.get('mobile')) {\n          this.draggable_ = false\n          this.setIScrollEnabled_(true)\n        } else {\n          this.draggable_ = initialDraggable\n          this.setIScrollEnabled_(false)\n        }\n        this.updateSize()\n      }\n\n      onChangeMobile()\n      this.map_.on('change:mobile', onChangeMobile)\n    })\n\n    this.makeWindowDraggable_()\n\n    // get window in front if clicked\n\n    this.$element_.on('mousedown', () => {\n      this.getInFront()\n    })\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = false\n    this.setVisible(options.hasOwnProperty('visible') ? options.visible : false)\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shieldActivated_ = false\n  }\n\n  /**\n   * Makes the Window draggable\n   * @private\n   */\n  makeWindowDraggable_ () {\n    let clickPosX = 0\n    let clickPosY = 0\n\n    let preventClick = false\n    let moving = false\n\n    this.$context_.on('mousemove', e => {\n      if (moving) {\n        if (e.clientY - clickPosY !== this.$element_.offset().top ||\n          e.clientX - clickPosX !== this.$element_.offset().left) {\n          preventClick = true\n          this.$element_.css('position', 'absolute')\n          this.$element_.offset({ top: e.clientY - clickPosY, left: e.clientX - clickPosX })\n          e.stopPropagation()\n        }\n      }\n    })\n\n    this.$button_.on('mousedown', e => {\n      if (!$(e.target).is('input, textarea') && this.draggable_) {\n        clickPosX = e.clientX - this.$element_.offset().left\n        clickPosY = e.clientY - this.$element_.offset().top\n        moving = true\n      }\n    })\n\n    this.$element_.get(0).addEventListener('click', e => {\n      if (preventClick && this.draggable_) {\n        preventClick = false\n        e.preventDefault()\n        e.stopPropagation()\n      }\n    }, true)\n\n    this.$context_.on('mouseup', () => {\n      moving = false\n    })\n  }\n\n  /**\n   * Enables/Disables the iscroll needed for mobile scrolling\n   * @param {boolean} scrollable\n   * @private\n   */\n  setIScrollEnabled_ (scrollable) {\n    if (scrollable) {\n      if (!this.scroll_) {\n        this.scroll_ = new IScroll(this.$scrollWrapper_.get(0), {\n          mouseWheel: true,\n          scrollbars: true,\n          momentum: false,\n          interactiveScrollbars: true,\n          // bounce: true,\n          click: true,\n          keyBindings: true,\n          disablePointer: true,\n          disableTouch: false,\n          disableMouse: true,\n          eventPassthrough: false\n        })\n      }\n    } else {\n      if (this.scroll_) {\n        this.scroll_.scrollTo(0, 0, 0)\n        this.scroll_.destroy()\n        this.$body_.removeAttr('style')\n      }\n      this.scroll_ = null\n    }\n  }\n\n  /**\n   * Moves the window in front of all other elements inside its context\n   */\n  getInFront () {\n    getInFront(this.$element_, this.$context_)\n  }\n\n  /**\n   * @param {boolean} visible\n   * @param {boolean} [popHistory=true]\n   */\n  setVisible (visible, popHistory = true) {\n    let oldValue = this.visible_\n    if (oldValue !== visible) {\n      if (visible) {\n        this.$element_.removeClass(cssClasses.hidden)\n        if (this.map_.get('mobile')) {\n          this.map_.get('shield').setActive(true)\n          this.map_.get('shield').add$OnTop(this.$element_, {\n            findParentWindow: false\n          })\n          this.shieldActivated_ = true\n          this.map_.get('history')\n            .push(() => this.setVisible(false, false))\n        } else if (!this.map_.get('shield').getActive()) {\n          this.getInFront()\n        }\n      } else {\n        if (this.shieldActivated_) {\n          if (popHistory) {\n            this.map_.get('history').pop()\n          } else {\n            this.map_.get('shield').setActive(false)\n            this.map_.get('shield').remove$OnTop(this.$element_)\n            this.shieldActivated_ = false\n          }\n        }\n        this.$element_.addClass(cssClasses.hidden)\n        this.$element_.css('top', '')\n        this.$element_.css('left', '')\n      }\n      this.visible_ = visible\n      this.updateSize(true)\n      this.dispatchEvent({ type: 'change:visible', oldValue: oldValue, newValue: visible })\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getVisible () {\n    return this.visible_\n  }\n\n  /**\n   * @returns {jQuery}\n   */\n  get$Body () {\n    return this.$body_\n  }\n\n  /**\n   * @returns {jQuery}\n   */\n  get$Element () {\n    return this.$element_\n  }\n\n  /**\n   * Fixes width and height depending on the current content on the popup.\n   * needs to be called when the window is visible.\n   * @param {boolean} [initialize=false]\n   */\n  updateSize (initialize = false) {\n    let margin = 0\n\n    if (this.getVisible()) {\n      if (!this.map_.get('mobile')) {\n        // desktop\n        margin = 50\n\n        let maxWidth = this.$context_.innerWidth() - 2 * margin\n        let maxHeight = this.$context_.innerHeight() - 2 * margin\n\n        // storing values\n        let position = this.$element_.css('position')\n        let top = this.$element_.css('top')\n        let left = this.$element_.css('left')\n\n        // reset position to get default value\n        this.$element_.css('position', '')\n\n        // resetting all directly setted values\n        this.$element_.css('top', '')\n        this.$element_.css('left', '')\n        this.$element_.css('width', '')\n        this.$element_.css('height', '')\n\n        this.get$Body().css('max-height', '')\n\n        // position element so it can be measured\n        this.$element_.css('position', 'fixed')\n        this.$element_.css('top', '0px')\n        this.$element_.css('left', '0px')\n\n        // clearing fixed size and height\n\n        this.$element_.css('width', 'auto')\n        this.$element_.css('height', 'auto')\n\n        // calculate width & height\n\n        let calcWidth = this.$element_.outerWidth()\n        let calcHeight = this.$element_.outerHeight()\n\n        let width = Math.min(calcWidth, maxWidth)\n        let height = Math.min(calcHeight, maxHeight)\n\n        this.$element_.css('width', width)\n        this.$element_.css('height', height)\n\n        // setting max-height for the scroll bar\n        // i assume here there is no margin and no padding on the parent element\n        let padding = parseInt(this.get$Body().css('padding-top').split('px')[ 0 ]) +\n          parseInt(this.get$Body().css('padding-bottom').split('px')[ 0 ])\n        this.get$Body().css('max-height', this.get$Element().innerHeight() - this.$button_.outerHeight() - padding)\n\n        this.$element_.css('position', position)\n\n        if (initialize && !this.fixedPosition_) {\n          // getting initial values\n          top = this.$element_.css('top')\n          left = this.$element_.css('left')\n\n          // initialize_ at top middle\n          let off = offset(this.$context_, this.$element_)\n\n          let sideDist = (this.$context_.width() - width) / 2\n          let topDist = margin\n\n          let topPixel = (top === 'auto') ? 0 : parseInt(top)\n          let leftPixel = (left === 'auto') ? 0 : parseInt(left)\n\n          this.$element_.css('top', topPixel + off.top + topDist)\n          this.$element_.css('left', leftPixel + off.left + sideDist)\n        } else {\n          // move back to old position\n          this.$element_.css('top', top)\n          this.$element_.css('left', left)\n        }\n      } else {\n        // mobile\n        margin = 10\n\n        let maxWidth = this.$context_.innerWidth() - 2 * margin\n        let maxHeight = this.$context_.innerHeight() - 2 * margin\n\n        this.get$Body().css('max-height', '')\n        this.$element_.css('width', maxWidth)\n        this.$element_.css('height', maxHeight)\n\n        let contextOff = this.$context_.offset()\n\n        this.$element_.css('left', margin + contextOff.left)\n        this.$element_.css('top', margin + contextOff.top)\n      }\n\n      if (this.get$Body().children(`:not(.${cssClasses.hidden})`).length === 0) {\n        this.$element_.addClass(cssClasses.hidden)\n      }\n\n      if (this.scroll_) {\n        this.scroll_.refresh()\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/html/Window.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 654,
    "kind": "typedef",
    "name": "WindowOptions",
    "memberof": "src/html/Window.js",
    "static": true,
    "longname": "src/html/Window.js~WindowOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "draggable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "id",
        "description": "an html id for the outer window element"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "className",
        "description": "an alternative html class name to use instead of 'g4u-window', not recommended"
      },
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": true,
        "name": "map",
        "description": "the map the window should be shown on. The viewport will be set as the context of the window"
      },
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": true,
        "name": "$context",
        "description": "context the window is shown in"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "visible",
        "description": "the visibility of the window on start up"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "fixedPosition",
        "description": "if the window is movable or not"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "WindowOptions"
    }
  },
  {
    "__docId__": 655,
    "kind": "class",
    "name": "Window",
    "memberof": "src/html/Window.js",
    "static": true,
    "longname": "src/html/Window.js~Window",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/html/Window.js",
    "importStyle": "{Window}",
    "description": "A HTML Window",
    "lineNumber": 26,
    "interface": false,
    "extends": [
      "openlayers~ol.Object"
    ]
  },
  {
    "__docId__": 656,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "WindowOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 657,
    "kind": "member",
    "name": "className_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#className_",
    "access": "private",
    "description": "",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 658,
    "kind": "member",
    "name": "classNameBody_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#classNameBody_",
    "access": "private",
    "description": "",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 659,
    "kind": "member",
    "name": "classNameButtonClose_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#classNameButtonClose_",
    "access": "private",
    "description": "",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 660,
    "kind": "member",
    "name": "$element_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#$element_",
    "access": "private",
    "description": "",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 661,
    "kind": "member",
    "name": "$positionWrapper_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#$positionWrapper_",
    "access": "private",
    "description": "",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 662,
    "kind": "member",
    "name": "$scrollWrapper_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#$scrollWrapper_",
    "access": "private",
    "description": "",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 663,
    "kind": "member",
    "name": "$body_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#$body_",
    "access": "private",
    "description": "",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 664,
    "kind": "member",
    "name": "$button_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#$button_",
    "access": "private",
    "description": "",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 665,
    "kind": "member",
    "name": "draggable_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#draggable_",
    "access": "private",
    "description": "",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 666,
    "kind": "member",
    "name": "fixedPosition_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#fixedPosition_",
    "access": "private",
    "description": "",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 667,
    "kind": "member",
    "name": "map_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#map_",
    "access": "private",
    "description": "",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 668,
    "kind": "member",
    "name": "$context_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#$context_",
    "access": "private",
    "description": "",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 671,
    "kind": "member",
    "name": "visible_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#visible_",
    "access": "private",
    "description": "",
    "lineNumber": 151,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 672,
    "kind": "member",
    "name": "shieldActivated_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#shieldActivated_",
    "access": "private",
    "description": "",
    "lineNumber": 158,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 673,
    "kind": "method",
    "name": "makeWindowDraggable_",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#makeWindowDraggable_",
    "access": "private",
    "description": "Makes the Window draggable",
    "lineNumber": 165,
    "params": [],
    "return": null
  },
  {
    "__docId__": 674,
    "kind": "method",
    "name": "setIScrollEnabled_",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#setIScrollEnabled_",
    "access": "private",
    "description": "Enables/Disables the iscroll needed for mobile scrolling",
    "lineNumber": 210,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollable",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 675,
    "kind": "member",
    "name": "scroll_",
    "memberof": "src/html/Window.js~Window",
    "static": false,
    "longname": "src/html/Window.js~Window#scroll_",
    "access": "public",
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 677,
    "kind": "method",
    "name": "getInFront",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#getInFront",
    "access": "public",
    "description": "Moves the window in front of all other elements inside its context",
    "lineNumber": 240,
    "params": [],
    "return": null
  },
  {
    "__docId__": 678,
    "kind": "method",
    "name": "setVisible",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#setVisible",
    "access": "public",
    "description": "",
    "lineNumber": 248,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "popHistory",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 682,
    "kind": "method",
    "name": "getVisible",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#getVisible",
    "access": "public",
    "description": "",
    "lineNumber": 287,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 683,
    "kind": "method",
    "name": "get$Body",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#get$Body",
    "access": "public",
    "description": "",
    "lineNumber": 294,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 684,
    "kind": "method",
    "name": "get$Element",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#get$Element",
    "access": "public",
    "description": "",
    "lineNumber": 301,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 685,
    "kind": "method",
    "name": "updateSize",
    "memberof": "src/html/Window.js~Window",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/html/Window.js~Window#updateSize",
    "access": "public",
    "description": "Fixes width and height depending on the current content on the popup.\nneeds to be called when the window is visible.",
    "lineNumber": 310,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "initialize",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 686,
    "kind": "file",
    "name": "src/interactions/FeatureSelect.js",
    "content": "import ol from 'openlayers'\nimport sortBy from 'lodash/sortBy'\n\n/**\n * This interaction is a little further customized select interaction.\n * Selected features get sorted by geometry type.\n */\nexport class FeatureSelect extends ol.interaction.Select {\n  /**\n   * @param {object} [options={}]\n   */\n  constructor (options = {}) {\n    super(options)\n\n    let sort = f => {\n      if ((f.getGeometry() instanceof ol.geom.Point) || (f.getGeometry() instanceof ol.geom.MultiPoint)) {\n        return 1\n      } else if ((f.getGeometry() instanceof ol.geom.LineString) ||\n        (f.getGeometry() instanceof ol.geom.MultiLineString)) {\n        return 2\n      } else {\n        return 3\n      }\n    }\n\n    this.on('select', e => {\n      e.selected = sortBy(e.selected, sort)\n      e.deselected = sortBy(e.deselected, sort)\n    })\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/interactions/FeatureSelect.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 687,
    "kind": "class",
    "name": "FeatureSelect",
    "memberof": "src/interactions/FeatureSelect.js",
    "static": true,
    "longname": "src/interactions/FeatureSelect.js~FeatureSelect",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/interactions/FeatureSelect.js",
    "importStyle": "{FeatureSelect}",
    "description": "This interaction is a little further customized select interaction.\nSelected features get sorted by geometry type.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "openlayers~ol.interaction.Select"
    ]
  },
  {
    "__docId__": 688,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/interactions/FeatureSelect.js~FeatureSelect",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/interactions/FeatureSelect.js~FeatureSelect#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 689,
    "kind": "file",
    "name": "src/interactions/MapEventInteraction.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nexport class MapEventInteraction extends ol.interaction.Interaction {\n  constructor (options = {}) {\n    let type = options.type || 'singleclick'\n    super({\n      handleEvent: e => {\n        if (this.getActive() && e.type === type && $(e.originalEvent.target).is('.ol-viewport > canvas')) {\n          this.dispatchEvent({\n            type: 'mapevent',\n            mapEvent: e\n          })\n        }\n        return true\n      }\n    })\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/interactions/MapEventInteraction.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 690,
    "kind": "class",
    "name": "MapEventInteraction",
    "memberof": "src/interactions/MapEventInteraction.js",
    "static": true,
    "longname": "src/interactions/MapEventInteraction.js~MapEventInteraction",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/interactions/MapEventInteraction.js",
    "importStyle": "{MapEventInteraction}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "openlayers~ol.interaction.Interaction"
    ]
  },
  {
    "__docId__": 691,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/interactions/MapEventInteraction.js~MapEventInteraction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/interactions/MapEventInteraction.js~MapEventInteraction#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 692,
    "kind": "file",
    "name": "src/L10N.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport stripJsonComments from 'strip-json-comments'\nimport {Debug} from './Debug'\nimport { URL } from './URLHelper'\n\n/**\n * @typedef {Object.<string, string>|string} Localizable\n */\n\n/**\n * @typedef {object} L10NOptions\n * @property {string} [defaultLanguage='en']\n * @property {string} [currentLanguage]\n * @property {string} [languageFile='files/l10n.commented.json']\n * @property {string[]} [availableLanguages]\n */\n\n/**\n * This class localizes texts by either selecting one from a dictionary (asynchron loaded JSON File) or choosing the\n * right string from a selection.\n */\nexport class L10N extends ol.Observable {\n  /**\n   * @param {L10NOptions} options\n   */\n  constructor (options = {}) {\n    super()\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.defaultLang_ = options.defaultLanguage || 'en'\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.currentLang_ = options.currentLanguage || this.defaultLang_\n\n    /**\n     * @type {URL}\n     * @private\n     */\n    this.languageFileUrl_ = URL.extractFromConfig(options, 'languageFile', 'files/l10n.commented.json')\n\n    if (options.availableLanguages) {\n      /**\n       * @type {string[]}\n       * @private\n       */\n      this.availableLanguages_ = options.availableLanguages\n    } else {\n      this.availableLanguages_ = [this.currentLang_]\n      if (this.currentLang_ !== this.defaultLang_) {\n        this.availableLanguages_.push(this.defaultLang_)\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]}\n   */\n  getAvailableLanguages () {\n    return this.availableLanguages_\n  }\n\n  /**\n   * @param {string[]} languages\n   */\n  setAvailableLanguages (languages) {\n    this.availableLanguages_ = languages\n  }\n\n  /**\n   * Loads the language file. This function is called manually from outside to be abel to pass in a callback.\n   */\n  ajaxGetLanguageFile () {\n    let finalUrl = this.languageFileUrl_.finalize()\n    return $.ajax({\n      type: 'GET',\n      url: finalUrl,\n      dataType: 'text',\n      success: data => {\n        this.dictionary = JSON.parse(stripJsonComments(data))\n      },\n      error: () => { // The arguments are ignored\n        Debug.error(`The language file ${finalUrl} couldn't be loaded or parsed`)\n      }\n    })\n  }\n\n  /**\n   * Select language string. Note that this routine throws an error if there is no fitting string. Method to obtain the\n   *    fitting string:\n   * 1. If there is no data, an 'Unable to obtain localization' error is thrown.\n   * 2. If data is a string, that string is returned.\n   * 3. If language is given and present in data, the string value for langage is returned.\n   * 4. If the default language is given and present in data, that value is returned.\n   * 5. If the special tag '*' is present in data, that value is returned.\n   * 6. If still no string was found at this point, an 'Unable to obtain localization' error is thrown.\n   * @property {Localizable} data\n   * @returns {string} a (presumably localised) string\n   */\n  selectL10N (data) {\n    if (data) {\n      if (typeof data === 'string') { // Only a generic string is available\n        return data\n      } else { // an object is available\n        if (data.hasOwnProperty(this.currentLang_)) { // current language available\n          return data[this.currentLang_]\n        } else if (data.hasOwnProperty(this.defaultLang_)) { // default language as a last resort\n          return data[this.defaultLang_]\n        } else if (data.hasOwnProperty('*')) {\n          return data['*']\n        } else {\n          Debug.error('Unable to obtain localization')\n        }\n      }\n    }\n  }\n\n  /**\n   * Localise identifier using given dictionary. Throws an error if identifier is not in dictionary. Relies on\n   * selectL10N to select actual localisation.\n   * @param {string} identifier\n   * @param {boolean} silent if an error message should be printed if the text is not found in the dictionary\n   * @returns {string} a (presumably localised) string\n   */\n  localiseUsingDictionary (identifier, silent = false) {\n    if (identifier in this.dictionary) {\n      return this.selectL10N(this.dictionary[identifier])\n    } else if (!silent) {\n      Debug.error(`Cannot localise '${identifier}': Not in dictionary`)\n    }\n  }\n\n  /**\n   * @param {string} lang\n   */\n  setCurrentLang (lang) {\n    this.currentLang_ = lang\n    this.dispatchEvent('change:language', lang)\n  }\n\n  /**\n   *\n   * @returns {string|*}\n   */\n  getCurrentLang () {\n    return this.currentLang_\n  }\n\n  getDefaultLang () {\n    return this.defaultLang_\n  }\n\n  /**\n   * @returns {bool}\n   */\n  isRtl () {\n    return this.dictionary[this.currentLang_].rtl || false\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/L10N.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 693,
    "kind": "typedef",
    "name": "Localizable",
    "memberof": "src/L10N.js",
    "static": true,
    "longname": "src/L10N.js~Localizable",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Object.<string, string>",
        "string"
      ],
      "optional": false,
      "name": "Localizable"
    }
  },
  {
    "__docId__": 694,
    "kind": "typedef",
    "name": "L10NOptions",
    "memberof": "src/L10N.js",
    "static": true,
    "longname": "src/L10N.js~L10NOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'en'",
        "defaultRaw": "'en'",
        "name": "defaultLanguage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "currentLanguage",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'files/l10n.commented.json'",
        "defaultRaw": "'files/l10n.commented.json'",
        "name": "languageFile",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "availableLanguages",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "L10NOptions"
    }
  },
  {
    "__docId__": 695,
    "kind": "class",
    "name": "L10N",
    "memberof": "src/L10N.js",
    "static": true,
    "longname": "src/L10N.js~L10N",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/L10N.js",
    "importStyle": "{L10N}",
    "description": "This class localizes texts by either selecting one from a dictionary (asynchron loaded JSON File) or choosing the\nright string from a selection.",
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "openlayers~ol.Observable"
    ]
  },
  {
    "__docId__": 696,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "L10NOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 697,
    "kind": "member",
    "name": "defaultLang_",
    "memberof": "src/L10N.js~L10N",
    "static": false,
    "longname": "src/L10N.js~L10N#defaultLang_",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 698,
    "kind": "member",
    "name": "currentLang_",
    "memberof": "src/L10N.js~L10N",
    "static": false,
    "longname": "src/L10N.js~L10N#currentLang_",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 699,
    "kind": "member",
    "name": "languageFileUrl_",
    "memberof": "src/L10N.js~L10N",
    "static": false,
    "longname": "src/L10N.js~L10N#languageFileUrl_",
    "access": "private",
    "description": "",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "URL"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 700,
    "kind": "member",
    "name": "availableLanguages_",
    "memberof": "src/L10N.js~L10N",
    "static": false,
    "longname": "src/L10N.js~L10N#availableLanguages_",
    "access": "private",
    "description": "",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 702,
    "kind": "method",
    "name": "getAvailableLanguages",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#getAvailableLanguages",
    "access": "public",
    "description": "",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 703,
    "kind": "method",
    "name": "setAvailableLanguages",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#setAvailableLanguages",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "languages",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 705,
    "kind": "method",
    "name": "ajaxGetLanguageFile",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#ajaxGetLanguageFile",
    "access": "public",
    "description": "Loads the language file. This function is called manually from outside to be abel to pass in a callback.",
    "lineNumber": 80,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 706,
    "kind": "member",
    "name": "dictionary",
    "memberof": "src/L10N.js~L10N",
    "static": false,
    "longname": "src/L10N.js~L10N#dictionary",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 707,
    "kind": "method",
    "name": "selectL10N",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#selectL10N",
    "access": "public",
    "description": "Select language string. Note that this routine throws an error if there is no fitting string. Method to obtain the\n   fitting string:\n1. If there is no data, an 'Unable to obtain localization' error is thrown.\n2. If data is a string, that string is returned.\n3. If language is given and present in data, the string value for langage is returned.\n4. If the default language is given and present in data, that value is returned.\n5. If the special tag '*' is present in data, that value is returned.\n6. If still no string was found at this point, an 'Unable to obtain localization' error is thrown.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} a (presumably localised) string"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "a (presumably localised) string"
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 708,
    "kind": "method",
    "name": "localiseUsingDictionary",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#localiseUsingDictionary",
    "access": "public",
    "description": "Localise identifier using given dictionary. Throws an error if identifier is not in dictionary. Relies on\nselectL10N to select actual localisation.",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} a (presumably localised) string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "silent",
        "description": "if an error message should be printed if the text is not found in the dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "a (presumably localised) string"
    }
  },
  {
    "__docId__": 709,
    "kind": "method",
    "name": "setCurrentLang",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#setCurrentLang",
    "access": "public",
    "description": "",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lang",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 711,
    "kind": "method",
    "name": "getCurrentLang",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#getCurrentLang",
    "access": "public",
    "description": "",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 712,
    "kind": "method",
    "name": "getDefaultLang",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#getDefaultLang",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 713,
    "kind": "method",
    "name": "isRtl",
    "memberof": "src/L10N.js~L10N",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/L10N.js~L10N#isRtl",
    "access": "public",
    "description": "",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{bool}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "bool"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 714,
    "kind": "file",
    "name": "src/layers/BaseLayerMixin.js",
    "content": "import {GroupLayer} from './GroupLayer'\n\n/**\n * @typedef {object} BaseLayerMixinOptions\n * @property {GroupLayer} groupLayer the group this baseLayer belongs to\n */\n\n/**\n * This mixin provides baselayer functionality to any layer\n */\nexport class BaseLayerMixin {\n  /**\n   * @param {BaseLayerMixinOptions} options\n   */\n  initialize (options) {\n    /**\n     * @type {GroupLayer}\n     * @private\n     */\n    this.groupLayer_ = options.groupLayer\n\n    this.on('change:available', this.onChangeAvailable.bind(this))\n    this.on('change:visible', this.onChangeVisible.bind(this))\n\n    this.isBaseLayer = true\n  }\n\n  /**\n   * This method sets the next available layer visible if this layer gets unavailable and was the visible baselayer\n   */\n  onChangeAvailable () {\n    if (!this.get('available') && this.getVisible()) {\n      this.groupLayer_.recursiveForEach(layer => {\n        if (!(layer instanceof GroupLayer) && layer.get('available')) {\n          layer.setVisible(true)\n        }\n      })\n    }\n  }\n\n  /**\n   * This method sets all other baselayers not visible if set true.\n   */\n  onChangeVisible () {\n    if (this.getVisible()) {\n      this.groupLayer_.recursiveForEach(layer => {\n        if (!(layer instanceof GroupLayer) && layer !== this) {\n          layer.setVisible(false)\n        }\n      })\n    } else {\n      let found = false\n      this.groupLayer_.recursiveForEach(layer => {\n        if (!(layer instanceof GroupLayer) && layer.getVisible()) {\n          found = true\n        }\n      })\n\n      if (!found) {\n        this.setVisible(true)\n      }\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/BaseLayerMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 715,
    "kind": "typedef",
    "name": "BaseLayerMixinOptions",
    "memberof": "src/layers/BaseLayerMixin.js",
    "static": true,
    "longname": "src/layers/BaseLayerMixin.js~BaseLayerMixinOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "GroupLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "groupLayer",
        "description": "the group this baseLayer belongs to"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "BaseLayerMixinOptions"
    }
  },
  {
    "__docId__": 716,
    "kind": "class",
    "name": "BaseLayerMixin",
    "memberof": "src/layers/BaseLayerMixin.js",
    "static": true,
    "longname": "src/layers/BaseLayerMixin.js~BaseLayerMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/BaseLayerMixin.js",
    "importStyle": "{BaseLayerMixin}",
    "description": "This mixin provides baselayer functionality to any layer",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 717,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/layers/BaseLayerMixin.js~BaseLayerMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/BaseLayerMixin.js~BaseLayerMixin#initialize",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "BaseLayerMixinOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 718,
    "kind": "member",
    "name": "groupLayer_",
    "memberof": "src/layers/BaseLayerMixin.js~BaseLayerMixin",
    "static": false,
    "longname": "src/layers/BaseLayerMixin.js~BaseLayerMixin#groupLayer_",
    "access": "private",
    "description": "",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "GroupLayer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 719,
    "kind": "member",
    "name": "isBaseLayer",
    "memberof": "src/layers/BaseLayerMixin.js~BaseLayerMixin",
    "static": false,
    "longname": "src/layers/BaseLayerMixin.js~BaseLayerMixin#isBaseLayer",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 720,
    "kind": "method",
    "name": "onChangeAvailable",
    "memberof": "src/layers/BaseLayerMixin.js~BaseLayerMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/BaseLayerMixin.js~BaseLayerMixin#onChangeAvailable",
    "access": "public",
    "description": "This method sets the next available layer visible if this layer gets unavailable and was the visible baselayer",
    "lineNumber": 31,
    "params": [],
    "return": null
  },
  {
    "__docId__": 721,
    "kind": "method",
    "name": "onChangeVisible",
    "memberof": "src/layers/BaseLayerMixin.js~BaseLayerMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/BaseLayerMixin.js~BaseLayerMixin#onChangeVisible",
    "access": "public",
    "description": "This method sets all other baselayers not visible if set true.",
    "lineNumber": 44,
    "params": [],
    "return": null
  },
  {
    "__docId__": 722,
    "kind": "file",
    "name": "src/layers/BaseTileLayer.js",
    "content": "import {TileLayer} from './TileLayer'\nimport {BaseLayerMixin} from './BaseLayerMixin'\nimport { mixin } from '../utilities'\n\nexport const BaseTileLayer = mixin(TileLayer, BaseLayerMixin)\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/BaseTileLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 723,
    "kind": "variable",
    "name": "BaseTileLayer",
    "memberof": "src/layers/BaseTileLayer.js",
    "static": true,
    "longname": "src/layers/BaseTileLayer.js~BaseTileLayer",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/BaseTileLayer.js",
    "importStyle": "{BaseTileLayer}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 724,
    "kind": "file",
    "name": "src/layers/EmptyBaseLayer.js",
    "content": "import ol from 'openlayers'\n\nimport {BaseLayerImage} from './ImageLayer'\n\nexport class EmptyBaseLayer extends BaseLayerImage {\n  /**\n   * @param {object} [options={}]\n   */\n  constructor (options = {}) {\n    options.source = new ol.source.ImageCanvas({\n      state: 'ready',\n      canvasFunction: () => {} // not loading any canvas\n    })\n    super(options)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/EmptyBaseLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 725,
    "kind": "class",
    "name": "EmptyBaseLayer",
    "memberof": "src/layers/EmptyBaseLayer.js",
    "static": true,
    "longname": "src/layers/EmptyBaseLayer.js~EmptyBaseLayer",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/EmptyBaseLayer.js",
    "importStyle": "{EmptyBaseLayer}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/layers/ImageLayer.js~BaseLayerImage"
    ]
  },
  {
    "__docId__": 726,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/layers/EmptyBaseLayer.js~EmptyBaseLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/EmptyBaseLayer.js~EmptyBaseLayer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 727,
    "kind": "file",
    "name": "src/layers/GroupLayer.js",
    "content": "import ol from 'openlayers'\nimport {ProvideMapMixin} from './ProvideMapMixin'\nimport {mixin} from '../utilities'\n\n/**\n * This Class is a Wrap around {ol.layer.Group} providing some extra functionality. This class is normally used for a\n * category of layers containing them.\n */\nexport class GroupLayer extends mixin(ol.layer.Group, ProvideMapMixin) {\n  /**\n   * @param {object} [options={}]\n   */\n  constructor (options = {}) {\n    super(options)\n\n    let listenerKeys = new WeakMap()\n\n    this.getLayers().on('add', /** ol.CollectionEvent */ e => {\n      let layer = e.element\n      if (layer.provideMap) {\n        layer.provideMap(this.getProvidedMap())\n      }\n      listenerKeys.set(layer, layer.on(['change:visible', 'change:childVisible'], () => {\n        this.dispatchEvent({\n          type: 'change:childVisible',\n          child: layer\n        })\n      }))\n    })\n\n    this.getLayers().on('remove', /** ol.CollectionEvent */ e => {\n      let layer = e.element\n      if (layer.provideMap) {\n        layer.provideMap(null)\n      }\n      ol.Observable.unByKey(listenerKeys.get(layer))\n      listenerKeys.delete(layer)\n    })\n  }\n\n  /**\n   * The provideMap methods of all contained children are called recursively\n   * @param {G4UMap} map\n   */\n  provideMap (map) {\n    super.provideMap(map)\n\n    this.getLayers().forEach(layer => {\n      if (layer.provideMap) { layer.provideMap(map) }\n    })\n  }\n\n  /**\n   * calls callback for every terminal, non-group Layer\n   * @param {Function} callback\n   */\n  recursiveForEach (callback) {\n    this.getLayers().forEach(layer => {\n      callback(layer, this)\n      if (layer.recursiveForEach) {\n        layer.recursiveForEach(callback)\n      }\n    })\n  }\n\n  /**\n   * Attachs a listener to each layer and to each newly added listener and removes the listener if the layer gets\n   * removed.\n   * @param eventType\n   * @param listener\n   */\n  forEachOn (eventType, listener) {\n    this.recursiveForEach(layer => {\n      layer.on(eventType, listener)\n      if (layer instanceof GroupLayer) {\n        this.getLayers().on('add', (e) => {\n          e.element.on(eventType, listener)\n        })\n        this.getLayers().on('remove', (e) => {\n          e.element.un(eventType, listener)\n        })\n      }\n    })\n  }\n\n  /**\n   * Checks how many children are visible. Doesn't check visibility of the group layer\n   * @returns {number}\n   */\n  countChildrenVisible () {\n    let array = this.getLayersArray()\n    let count = 0\n\n    for (let i = 0, ii = array.length; i < ii; i++) {\n      if (array[i] instanceof GroupLayer) {\n        count += array[i].countChildrenVisible()\n      } else if (array[i].getVisible()) {\n        count += 1\n      }\n    }\n    return count\n  }\n\n  countChildren () {\n    let array = this.getLayersArray()\n    let count = 0\n\n    for (let i = 0, ii = array.length; i < ii; i++) {\n      if (array[i] instanceof GroupLayer) {\n        count += array[i].countChildren()\n      } else {\n        count += 1\n      }\n    }\n    return count\n  }\n\n  /**\n   * Returns the layers inside as an array.\n   * @returns {ol.layer.Base[]}\n   */\n  getLayersArray () {\n    return this.getLayers().getArray()\n  }\n\n  /**\n   * Returns the number of direct child layers\n   * @returns {number}\n   */\n  getLength () {\n    return this.getLayers().getLength()\n  }\n\n  /**\n   * checks if the given layer is a child of the grouplayer\n   * @param {ol.layer.Base} layer\n   * @returns {boolean}\n   */\n  isParentOf (layer) {\n    let found = false\n    this.recursiveForEach(function (childLayer) {\n      if (layer === childLayer) {\n        found = true\n      }\n    })\n    return found\n  }\n\n  /**\n   * Returns all ids of all contained layers and its own.\n   * @returns {number[]}\n   */\n  getIds () {\n    let ids = this.get('id') !== undefined ? [this.get('id')] : []\n\n    let array = this.getLayersArray()\n\n    for (let i = 0, ii = array.length; i < ii; i++) {\n      if (array[i].getIds) {\n        ids = ids.concat(array[i].getIds())\n      } else {\n        ids.push(array[i].get('id'))\n      }\n    }\n\n    return ids\n  }\n\n  /**\n   * Returns all attributions of all visible layers.\n   * @returns {number[]}\n   */\n  getAttributions () {\n    let attributions = []\n\n    this.recursiveForEach(function (layer) {\n      if (layer.getVisible()) {\n        if (layer.getSource) {\n          let atts = layer.getSource().getAttributions()\n          if (atts) {\n            attributions = attributions.concat(atts)\n          }\n        }\n      }\n    })\n\n    return attributions\n  }\n\n  /**\n   * Remove layer by id\n   * @param {string|number} id\n   */\n  removeLayerById (id) {\n    let layers = this.getLayers()\n    for (let i = 0; i < layers.getLength(); i++) {\n      if (layers.item(i).get('id') === id) {\n        return layers.removeAt(i)\n      } else if (layers.item(i).removeLayerById) {\n        let res = layers.item(i).removeLayerById(id)\n        if (res) {\n          return res\n        }\n      }\n    }\n  }\n\n  /**\n   * Find layer with callback\n   * @param {Function} cb\n   */\n  findLayer (cb) {\n    for (let layer of this.getLayersArray()) {\n      if (cb(layer)) {\n        return layer\n      } else if (layer.findLayer) {\n        let res = layer.findLayer(cb)\n        if (res) {\n          return res\n        }\n      }\n    }\n  }\n\n  /**\n   * Get layer by id\n   * @param {string|number} id\n   */\n  getLayerById (id) {\n    for (let layer of this.getLayersArray()) {\n      if (layer.get('id') === id) {\n        return layer\n      } else if (layer.getLayerById) {\n        let res = layer.getLayerById(id)\n        if (res) {\n          return res\n        }\n      }\n    }\n  }\n\n  /**\n   * removes layer\n   * @param {ol.layer.Base} layer\n   */\n  removeLayer (layer) {\n    let found = this.getLayers().remove(layer)\n    if (!found) {\n      this.getLayers().forEach(subLayer => {\n        if (!found && subLayer.removeLayer) {\n          found = subLayer.removeLayer(layer)\n        }\n      })\n    }\n    return found\n  }\n\n  /**\n   * gives an object with ids as keys and visibility as value\n   * @returns {Object.<string|number,boolean>}\n   */\n  getIdsVisibilities () {\n    let visibilities = {}\n    this.recursiveForEach(layer => {\n      if (layer.get('id')) {\n        visibilities[layer.get('id')] = layer.getVisible()\n      }\n    })\n    return visibilities\n  }\n\n  /**\n   * Sets the visibility of the layers to the given visibility\n   * @param {Object.<string|number,boolean>} visibilities\n   */\n  setIdsVisibilities (visibilities) {\n    this.recursiveForEach(layer => {\n      if (layer.get('id')) {\n        layer.setVisible(visibilities[layer.get('id')])\n      }\n    })\n  }\n\n  /**\n   * Checks if the group contains the layer\n   * @param {ol.layer.Layer} layer\n   * @returns {boolean}\n   */\n  containsLayer (layer) {\n    return this.getLayers().getArray().some(subLayer => {\n      if (subLayer === layer) {\n        return true\n      }\n      if (subLayer.containsLayer) {\n        return subLayer.containsLayer(layer)\n      }\n    })\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/GroupLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 728,
    "kind": "class",
    "name": "GroupLayer",
    "memberof": "src/layers/GroupLayer.js",
    "static": true,
    "longname": "src/layers/GroupLayer.js~GroupLayer",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/GroupLayer.js",
    "importStyle": "{GroupLayer}",
    "description": "This Class is a Wrap around {ol.layer.Group} providing some extra functionality. This class is normally used for a\ncategory of layers containing them.",
    "lineNumber": 9,
    "interface": false,
    "expressionExtends": "mixin(ol.layer.Group, ProvideMapMixin)"
  },
  {
    "__docId__": 729,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 730,
    "kind": "method",
    "name": "provideMap",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#provideMap",
    "access": "public",
    "description": "The provideMap methods of all contained children are called recursively",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 731,
    "kind": "method",
    "name": "recursiveForEach",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#recursiveForEach",
    "access": "public",
    "description": "calls callback for every terminal, non-group Layer",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 732,
    "kind": "method",
    "name": "forEachOn",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#forEachOn",
    "access": "public",
    "description": "Attachs a listener to each layer and to each newly added listener and removes the listener if the layer gets\nremoved.",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "eventType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "listener",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 733,
    "kind": "method",
    "name": "countChildrenVisible",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#countChildrenVisible",
    "access": "public",
    "description": "Checks how many children are visible. Doesn't check visibility of the group layer",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 734,
    "kind": "method",
    "name": "countChildren",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#countChildren",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 735,
    "kind": "method",
    "name": "getLayersArray",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#getLayersArray",
    "access": "public",
    "description": "Returns the layers inside as an array.",
    "lineNumber": 122,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.layer.Base[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.layer.Base[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 736,
    "kind": "method",
    "name": "getLength",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#getLength",
    "access": "public",
    "description": "Returns the number of direct child layers",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 737,
    "kind": "method",
    "name": "isParentOf",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#isParentOf",
    "access": "public",
    "description": "checks if the given layer is a child of the grouplayer",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.layer.Base"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 738,
    "kind": "method",
    "name": "getIds",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#getIds",
    "access": "public",
    "description": "Returns all ids of all contained layers and its own.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 739,
    "kind": "method",
    "name": "getAttributions",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#getAttributions",
    "access": "public",
    "description": "Returns all attributions of all visible layers.",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 740,
    "kind": "method",
    "name": "removeLayerById",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#removeLayerById",
    "access": "public",
    "description": "Remove layer by id",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 741,
    "kind": "method",
    "name": "findLayer",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#findLayer",
    "access": "public",
    "description": "Find layer with callback",
    "lineNumber": 212,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 742,
    "kind": "method",
    "name": "getLayerById",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#getLayerById",
    "access": "public",
    "description": "Get layer by id",
    "lineNumber": 229,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 743,
    "kind": "method",
    "name": "removeLayer",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#removeLayer",
    "access": "public",
    "description": "removes layer",
    "lineNumber": 246,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.layer.Base"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 744,
    "kind": "method",
    "name": "getIdsVisibilities",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#getIdsVisibilities",
    "access": "public",
    "description": "gives an object with ids as keys and visibility as value",
    "lineNumber": 262,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object.<string|number,boolean>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object.<string|number,boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 745,
    "kind": "method",
    "name": "setIdsVisibilities",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#setIdsVisibilities",
    "access": "public",
    "description": "Sets the visibility of the layers to the given visibility",
    "lineNumber": 276,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object.<string|number,boolean>"
        ],
        "spread": false,
        "optional": false,
        "name": "visibilities",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 746,
    "kind": "method",
    "name": "containsLayer",
    "memberof": "src/layers/GroupLayer.js~GroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/GroupLayer.js~GroupLayer#containsLayer",
    "access": "public",
    "description": "Checks if the group contains the layer",
    "lineNumber": 289,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.layer.Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 747,
    "kind": "file",
    "name": "src/layers/ImageLayer.js",
    "content": "import ol from 'openlayers'\n\nimport {LayerLoadProcessCountMixin} from './LayerLoadProcessCountMixin'\nimport {BaseLayerMixin} from './BaseLayerMixin'\nimport { mixin } from '../utilities'\nimport {ProvideMapMixin} from './ProvideMapMixin'\n\nexport const ImageLayer = mixin(ol.layer.Image, [ ProvideMapMixin, LayerLoadProcessCountMixin ])\n\nexport const BaseLayerImage = mixin(ImageLayer, BaseLayerMixin)\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/ImageLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 748,
    "kind": "variable",
    "name": "ImageLayer",
    "memberof": "src/layers/ImageLayer.js",
    "static": true,
    "longname": "src/layers/ImageLayer.js~ImageLayer",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/ImageLayer.js",
    "importStyle": "{ImageLayer}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 749,
    "kind": "variable",
    "name": "BaseLayerImage",
    "memberof": "src/layers/ImageLayer.js",
    "static": true,
    "longname": "src/layers/ImageLayer.js~BaseLayerImage",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/ImageLayer.js",
    "importStyle": "{BaseLayerImage}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 750,
    "kind": "file",
    "name": "src/layers/LayerLoadProcessCountMixin.js",
    "content": "/**\n * A mixin to keep track the amount of load processes a source is currently waiting for\n */\n\nexport class LayerLoadProcessCountMixin {\n  initialize () {\n    this.debounceLoadComplete_ = 40\n\n    this.isLoading_ = false\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadProcessCount_ = 0\n\n    if (this.getSource()) {\n      this.registerCounters_()\n    }\n\n    this.on('change:source', () => this.registerCounters_())\n  }\n\n  registerCounters_ () {\n    let loadingPrecise = false\n\n    this.getSource().on(['vectorloadstart', 'tileloadstart', 'imageloadstart'], () => {\n      this.loadProcessCount_ += 1\n      if (!this.isLoading_) {\n        this.isLoading_ = true\n        this.dispatchEvent('loadcountstart')\n      }\n      loadingPrecise = true\n    })\n\n    this.getSource().on([\n      'vectorloadend', 'vectorloaderror',\n      'tileloadend', 'tileloaderror',\n      'imageloadend', 'imageloaderror'], () => {\n      this.loadProcessCount_ -= 1\n      if (this.loadProcessCount_ === 0) {\n        loadingPrecise = false\n        this.getProvidedMap().afterPostrender(() => {\n          if (!loadingPrecise) {\n            this.isLoading_ = false\n            this.dispatchEvent('loadcountend')\n          }\n        })\n      }\n    })\n  }\n\n  isLoading () {\n    return this.isLoading_\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/LayerLoadProcessCountMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 751,
    "kind": "class",
    "name": "LayerLoadProcessCountMixin",
    "memberof": "src/layers/LayerLoadProcessCountMixin.js",
    "static": true,
    "longname": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/LayerLoadProcessCountMixin.js",
    "importStyle": "{LayerLoadProcessCountMixin}",
    "description": "A mixin to keep track the amount of load processes a source is currently waiting for",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 752,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 753,
    "kind": "member",
    "name": "debounceLoadComplete_",
    "memberof": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin",
    "static": false,
    "longname": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin#debounceLoadComplete_",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 754,
    "kind": "member",
    "name": "isLoading_",
    "memberof": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin",
    "static": false,
    "longname": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin#isLoading_",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 755,
    "kind": "member",
    "name": "loadProcessCount_",
    "memberof": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin",
    "static": false,
    "longname": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin#loadProcessCount_",
    "access": "private",
    "description": "",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 756,
    "kind": "method",
    "name": "registerCounters_",
    "memberof": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin#registerCounters_",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 761,
    "kind": "method",
    "name": "isLoading",
    "memberof": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/LayerLoadProcessCountMixin.js~LayerLoadProcessCountMixin#isLoading",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 762,
    "kind": "file",
    "name": "src/layers/ProvideMapMixin.js",
    "content": "export class ProvideMapMixin {\n  /**\n   * @param {G4UMap} map\n   */\n  provideMap (map) {\n    /**\n     * @type {G4UMap|undefined}\n     * @private\n     */\n    this.providedMap_ = map\n  }\n\n  /**\n   * @returns {G4UMap|undefined}\n   */\n  getProvidedMap () {\n    return this.providedMap_\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/ProvideMapMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 763,
    "kind": "class",
    "name": "ProvideMapMixin",
    "memberof": "src/layers/ProvideMapMixin.js",
    "static": true,
    "longname": "src/layers/ProvideMapMixin.js~ProvideMapMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/ProvideMapMixin.js",
    "importStyle": "{ProvideMapMixin}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 764,
    "kind": "method",
    "name": "provideMap",
    "memberof": "src/layers/ProvideMapMixin.js~ProvideMapMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/ProvideMapMixin.js~ProvideMapMixin#provideMap",
    "access": "public",
    "description": "",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 765,
    "kind": "member",
    "name": "providedMap_",
    "memberof": "src/layers/ProvideMapMixin.js~ProvideMapMixin",
    "static": false,
    "longname": "src/layers/ProvideMapMixin.js~ProvideMapMixin#providedMap_",
    "access": "private",
    "description": "",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 766,
    "kind": "method",
    "name": "getProvidedMap",
    "memberof": "src/layers/ProvideMapMixin.js~ProvideMapMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/ProvideMapMixin.js~ProvideMapMixin#getProvidedMap",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{G4UMap|undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "G4UMap",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 767,
    "kind": "file",
    "name": "src/layers/SilentGroupLayer.js",
    "content": "import ol from 'openlayers'\nimport {ProvideMapMixin} from './ProvideMapMixin'\nimport {BaseLayerMixin} from './BaseLayerMixin'\nimport {mixin} from '../utilities'\n\nexport class SilentGroupLayer extends mixin(ol.layer.Group, ProvideMapMixin) {\n  /**\n   * @param {object} [options={}]\n   */\n  constructor (options = {}) {\n    super(options)\n\n    let listenerKeys = new WeakMap()\n\n    this.getLayers().on('add', /** ol.CollectionEvent */ e => {\n      let layer = e.element\n      if (layer.provideMap) {\n        layer.provideMap(this.getProvidedMap())\n      }\n      listenerKeys.set(layer, layer.on(['change:visible', 'change:childVisible'], () => {\n        this.dispatchEvent({\n          type: 'change:childVisible',\n          child: layer\n        })\n      }))\n    })\n\n    this.getLayers().on('remove', /** ol.CollectionEvent */ e => {\n      let layer = e.element\n      if (layer.provideMap) {\n        layer.provideMap(null)\n      }\n      ol.Observable.unByKey(listenerKeys.get(layer))\n      listenerKeys.delete(layer)\n    })\n  }\n\n  /**\n   * The provideMap methods of all contained children are called recursively\n   * @param {G4UMap} map\n   */\n  provideMap (map) {\n    super.provideMap(map)\n\n    this.getLayers().forEach(layer => {\n      if (layer.provideMap) { layer.provideMap(map) }\n    })\n  }\n}\n\nexport class BaseSilentGroupLayer extends mixin(SilentGroupLayer, BaseLayerMixin) {\n\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/SilentGroupLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 768,
    "kind": "class",
    "name": "SilentGroupLayer",
    "memberof": "src/layers/SilentGroupLayer.js",
    "static": true,
    "longname": "src/layers/SilentGroupLayer.js~SilentGroupLayer",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/SilentGroupLayer.js",
    "importStyle": "{SilentGroupLayer}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "expressionExtends": "mixin(ol.layer.Group, ProvideMapMixin)"
  },
  {
    "__docId__": 769,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/layers/SilentGroupLayer.js~SilentGroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/SilentGroupLayer.js~SilentGroupLayer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 770,
    "kind": "method",
    "name": "provideMap",
    "memberof": "src/layers/SilentGroupLayer.js~SilentGroupLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/layers/SilentGroupLayer.js~SilentGroupLayer#provideMap",
    "access": "public",
    "description": "The provideMap methods of all contained children are called recursively",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 771,
    "kind": "class",
    "name": "BaseSilentGroupLayer",
    "memberof": "src/layers/SilentGroupLayer.js",
    "static": true,
    "longname": "src/layers/SilentGroupLayer.js~BaseSilentGroupLayer",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/SilentGroupLayer.js",
    "importStyle": "{BaseSilentGroupLayer}",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "interface": false,
    "expressionExtends": "mixin(SilentGroupLayer, BaseLayerMixin)",
    "extends": [
      "SilentGroupLayer"
    ]
  },
  {
    "__docId__": 772,
    "kind": "file",
    "name": "src/layers/TileLayer.js",
    "content": "import ol from 'openlayers'\n\nimport {LayerLoadProcessCountMixin} from './LayerLoadProcessCountMixin'\nimport { mixin } from '../utilities'\nimport {ProvideMapMixin} from './ProvideMapMixin'\n\nexport const TileLayer = mixin(ol.layer.Tile, [ ProvideMapMixin, LayerLoadProcessCountMixin ])\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/TileLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 773,
    "kind": "variable",
    "name": "TileLayer",
    "memberof": "src/layers/TileLayer.js",
    "static": true,
    "longname": "src/layers/TileLayer.js~TileLayer",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/layers/TileLayer.js",
    "importStyle": "{TileLayer}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 774,
    "kind": "file",
    "name": "src/layers/VectorLayer.js",
    "content": "import ol from 'openlayers'\n\nimport {LayerLoadProcessCountMixin} from './LayerLoadProcessCountMixin'\nimport { mixin } from '../utilities'\nimport {ProvideMapMixin} from './ProvideMapMixin'\n\n/**\n * @typedef {object} VectorLayerOptions\n * @property {string[]} [mutators=[]] list of mutators (changes featurepopup content) to use for this layer.\n */\n\nexport class VectorLayer extends mixin(mixin(ol.layer.Vector, ProvideMapMixin), LayerLoadProcessCountMixin) {\n  constructor (options = {}) {\n    super(options)\n\n    this.on('change:visible', () => {\n      if (this.getSource().setRefreshing) {\n        this.getSource().setRefreshing(this.getVisible())\n      }\n    })\n\n    // saving text mutators\n    this.set('mutators', options.mutators || [])\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/layers/VectorLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 775,
    "kind": "typedef",
    "name": "VectorLayerOptions",
    "memberof": "src/layers/VectorLayer.js",
    "static": true,
    "longname": "src/layers/VectorLayer.js~VectorLayerOptions",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "mutators",
        "description": "list of mutators (changes featurepopup content) to use for this layer."
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "VectorLayerOptions"
    }
  },
  {
    "__docId__": 776,
    "kind": "file",
    "name": "src/ListenerOrganizerMixin.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nclass DOMListener {\n  constructor (element) {\n    this.element = element\n  }\n\n  on (event, listener, useCapture) {\n    this.event = event\n    this.listener = listener\n    this.useCapture = useCapture\n    this.element.addEventListener(event, listener, useCapture)\n  }\n\n  once (event, listener, useCapture) {\n    let that = this\n    this.on(event, function (...args) {\n      listener.apply(this, args)\n      that.detach()\n    }, useCapture)\n  }\n\n  detach () {\n    this.element.removeEventListener(this.event, this.listener, this.useCapture)\n  }\n\n  static usable (element) {\n    return !!element.addEventListener\n    // thanks to internet explorer we can't use the following line\n    // return element instanceof EventTarget\n  }\n\n  static create (element) {\n    return new DOMListener(element)\n  }\n}\n\nclass JQueryListener {\n  constructor (element) {\n    this.element = element\n  }\n\n  on (event, listener) {\n    this.event = event\n    this.listener = listener\n    this.element.on(event, listener)\n  }\n\n  once (event, listener) {\n    this.event = event\n    this.listener = listener\n    this.element.one(event, listener)\n  }\n\n  detach () {\n    this.element.off(this.event, this.listener)\n  }\n\n  static usable (element) {\n    return element instanceof $\n  }\n\n  static create (element) {\n    return new JQueryListener(element)\n  }\n}\n\nclass OLListener {\n  constructor (element) {\n    this.element = element\n  }\n\n  on (event, listener) {\n    this.event = event\n    this.key_ = this.element.on(event, listener)\n  }\n\n  once (event, listener) {\n    this.event = event\n    this.key_ = this.element.once(event, listener)\n  }\n\n  detach () {\n    ol.Observable.unByKey(this.key_)\n  }\n\n  static usable (element) {\n    return element instanceof ol.Observable\n  }\n\n  static create (element) {\n    return new OLListener(element)\n  }\n}\n\nexport class ListenerOrganizerMixin {\n  initialize () {\n    this.organizedListeners_ = []\n  }\n\n  static getTypeListener (element) {\n    for (let TypeListener of [DOMListener, JQueryListener, OLListener]) {\n      if (TypeListener.usable(element)) {\n        return TypeListener.create(element)\n      }\n    }\n  }\n\n  listenAt (elements) {\n    elements = Array.isArray(elements) ? elements : [elements]\n    let returnObj = {\n      on: (event, listener, useCapture) => {\n        for (let element of elements) {\n          let tListener = ListenerOrganizerMixin.getTypeListener(element)\n          tListener.on(event, listener, useCapture)\n          this.organizedListeners_.push(tListener)\n        }\n        return returnObj\n      },\n      once: (event, listener, useCapture) => {\n        for (let element of elements) {\n          let tListener = ListenerOrganizerMixin.getTypeListener(element)\n          tListener.once(event, listener, useCapture)\n          this.organizedListeners_.push(tListener)\n        }\n        return returnObj\n      }\n    }\n    return returnObj\n  }\n\n  detachFrom (element, event) {\n    let listeners = this.organizedListeners_.filter(l => l.element === element)\n    if (event) {\n      listeners = listeners.filter(l => l.event === event)\n    }\n    for (let listener of listeners) {\n      listener.detach()\n      this.organizedListeners_.splice(this.organizedListeners_.indexOf(listener), 1)\n    }\n  }\n\n  detachAllListeners () {\n    for (let listener of this.organizedListeners_) {\n      listener.detach()\n    }\n    this.organizedListeners_ = []\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/ListenerOrganizerMixin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 777,
    "kind": "class",
    "name": "DOMListener",
    "memberof": "src/ListenerOrganizerMixin.js",
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/ListenerOrganizerMixin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 778,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 779,
    "kind": "member",
    "name": "element",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener#element",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 780,
    "kind": "method",
    "name": "on",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener#on",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      },
      {
        "name": "useCapture",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 781,
    "kind": "member",
    "name": "event",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener#event",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 782,
    "kind": "member",
    "name": "listener",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener#listener",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 783,
    "kind": "member",
    "name": "useCapture",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener#useCapture",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 784,
    "kind": "method",
    "name": "once",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener#once",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      },
      {
        "name": "useCapture",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 785,
    "kind": "method",
    "name": "detach",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener#detach",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 786,
    "kind": "method",
    "name": "usable",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener.usable",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 787,
    "kind": "method",
    "name": "create",
    "memberof": "src/ListenerOrganizerMixin.js~DOMListener",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~DOMListener.create",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 788,
    "kind": "class",
    "name": "JQueryListener",
    "memberof": "src/ListenerOrganizerMixin.js",
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/ListenerOrganizerMixin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 789,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 790,
    "kind": "member",
    "name": "element",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener#element",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 791,
    "kind": "method",
    "name": "on",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener#on",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 792,
    "kind": "member",
    "name": "event",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener#event",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 793,
    "kind": "member",
    "name": "listener",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener#listener",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 794,
    "kind": "method",
    "name": "once",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener#once",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 797,
    "kind": "method",
    "name": "detach",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener#detach",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 798,
    "kind": "method",
    "name": "usable",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener.usable",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 799,
    "kind": "method",
    "name": "create",
    "memberof": "src/ListenerOrganizerMixin.js~JQueryListener",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~JQueryListener.create",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 800,
    "kind": "class",
    "name": "OLListener",
    "memberof": "src/ListenerOrganizerMixin.js",
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~OLListener",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/ListenerOrganizerMixin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 801,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~OLListener#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 802,
    "kind": "member",
    "name": "element",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~OLListener#element",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 803,
    "kind": "method",
    "name": "on",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~OLListener#on",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 804,
    "kind": "member",
    "name": "event",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~OLListener#event",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 805,
    "kind": "member",
    "name": "key_",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~OLListener#key_",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 806,
    "kind": "method",
    "name": "once",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~OLListener#once",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 809,
    "kind": "method",
    "name": "detach",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~OLListener#detach",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 810,
    "kind": "method",
    "name": "usable",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~OLListener.usable",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 811,
    "kind": "method",
    "name": "create",
    "memberof": "src/ListenerOrganizerMixin.js~OLListener",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~OLListener.create",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 812,
    "kind": "class",
    "name": "ListenerOrganizerMixin",
    "memberof": "src/ListenerOrganizerMixin.js",
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/ListenerOrganizerMixin.js",
    "importStyle": "{ListenerOrganizerMixin}",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 813,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 814,
    "kind": "member",
    "name": "organizedListeners_",
    "memberof": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin",
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin#organizedListeners_",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 815,
    "kind": "method",
    "name": "getTypeListener",
    "memberof": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin.getTypeListener",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 816,
    "kind": "method",
    "name": "listenAt",
    "memberof": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin#listenAt",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "elements",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 817,
    "kind": "method",
    "name": "detachFrom",
    "memberof": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin#detachFrom",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      },
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 818,
    "kind": "method",
    "name": "detachAllListeners",
    "memberof": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ListenerOrganizerMixin.js~ListenerOrganizerMixin#detachAllListeners",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 820,
    "kind": "file",
    "name": "src/main.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport 'file-loader?name=images/[name].[ext]!../images/g4u-logo.png'\n\nimport 'polyfill!requestAnimationFrame,cancelAnimationFrame,Element.prototype.classList,URL'\n\nwindow.jQuery = window.jQuery || $\n\nimport {G4UMap} from './G4UMap'\nimport {Debug} from './Debug'\n\nexport function createMapInternal (element, clientConfPath, layerConfPath, options) {\n  if (Array.isArray(options)) { // backwards compatibility\n    options = { modules: options }\n  }\n\n  return new Promise((resolve, reject) => {\n    $(document).ready(() => {\n      if (!$) {\n        reject('jQuery not available.')\n      } else {\n        let v = $().jquery.split('.')\n        if (+v[0] < 2 && +v[1] < 9) {\n          Debug.error('You are using an outdated version of jQuery. Please use version 1.9 or higher.')\n        }\n      }\n\n      if (!ol) {\n        reject('OpenLayers not available.')\n      }\n\n      if (!ol.has.CANVAS) {\n        $('.g4u-browser-support-message').show()\n        reject('Browser does not support Canvas.')\n      }\n\n      $(element).empty()\n\n      // for remote analysis and debugging - not used inside of the software\n      window.map = new G4UMap(element, clientConfPath, layerConfPath, options)\n\n      window.map.asSoonAs('ready', true, () => {\n        resolve(window.map)\n      })\n    })\n  })\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 821,
    "kind": "function",
    "name": "createMapInternal",
    "memberof": "src/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/main.js~createMapInternal",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/main.js",
    "importStyle": "{createMapInternal}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      },
      {
        "name": "clientConfPath",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerConfPath",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 822,
    "kind": "file",
    "name": "src/MessageDisplay.js",
    "content": "import '../less/notify.less'\nimport 'notifyjs-browser'\nimport $ from 'jquery'\nimport { html2Text } from './utilities'\n\n/**\n * @typedef {object} MessageReducedDisplayOptions\n * @property {boolean} [autoHide] - whether to auto-hide the notification\n * @property {number} [autoHideDelay] - milliseconds before hide (if autoHide is set)\n * @property {string} [position] - notification position relative to element\n */\n\n/**\n * @typedef {MessageReducedDisplayOptions} MessageDisplayOptions\n * @property {(string|string[])} [className] - default class\n */\n\n/**\n * @typedef {MessageDisplayOptions} MessageConstructorOptions\n * @property {boolean} [arrowShow=true] - whether to show an arrow pointing at the element\n * @property {number} [arrowSize=5] - Arrow size in pixels\n * @property {boolean} [autoHide=true] - whether to auto-hide the notification\n * @property {number} [autoHideDelay=15000] - milliseconds before hide (if autoHide is set)\n * @property {(string|string[])} [className='error'] - default class\n * @property {string} [position=bottom left] - notification position relative to element\n * @property {number} [gap=2] - padding between element and notification\n * @property {string} [hideAnimation=slideUp] - hide animation type\n * @property {number} [hideDuration=200] - hide animation duration in milliseconds\n * @property {string} [showAnimation=slideDown] - show animation type\n * @property {number} [showDuration=400] - show animation duration in miliseconds\n * @property {string} [style=bootstrap] - default style\n */\n\n/**\n * Displays Messages\n */\nexport class MessageDisplay {\n  /**\n   * @param {jQuery} $element\n   * @param {MessageConstructorOptions} options\n   */\n\n  constructor ($element, options = {}) {\n    if ($element) {\n      /**\n       * @type {jQuery}\n       * @private\n       */\n      this.$element_ = $element\n\n      if (!$.notify.getStyle('benndorf')) {\n        $.notify.addStyle('benndorf', {\n          html: '<div>' +\n          '<div class=\"text\" data-notify-text />' +\n          '</div>' +\n          '</div>',\n          classes: {\n            error: {\n              'color': '#b94a48',\n              'background-color': '#f2dede',\n              'border-color': '#b94a48'\n            },\n            success: {\n              'color': '#468847',\n              'background-color': '#dff0d8',\n              'border-color': '#468847'\n            },\n            info: {\n              'color': '#3a87a',\n              'background-color': '#d9edf7',\n              'border-color': '#3a87ad'\n            },\n            warn: {\n              'color': '#c09853',\n              'background-color': '#fcf8e3',\n              'border-color': '#c09853'\n            }\n          }\n        })\n      }\n    } else {\n      throw new Error('MessageDisplay needs an object to be associated to!')\n    }\n\n    /**\n     * @type {MessageOptions}\n     * @private\n     */\n    this.defaults_ = options\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.autoHideTimer_ = null\n\n    if (!options.hasOwnProperty('arrowShow')) { this.defaults_.arrowShow = true }\n    if (!options.hasOwnProperty('arrowSize')) { this.defaults_.arrowSize = 5 }\n    if (!options.hasOwnProperty('autoHide')) { this.defaults_.autoHide = true }\n    if (!options.hasOwnProperty('autoHideDelay')) { this.defaults_.autoHideDelay = 15000 }\n    if (!options.hasOwnProperty('className')) { this.defaults_.className = 'error' }\n    if (!options.hasOwnProperty('position')) { this.defaults_.position = 'bottom left' }\n    if (!options.hasOwnProperty('gap')) { this.defaults_.gap = 2 }\n    if (!options.hasOwnProperty('hideAnimation')) { this.defaults_.hideAnimation = 'slideUp' }\n    if (!options.hasOwnProperty('hideDuration')) { this.defaults_.hideDuration = 200 }\n    if (!options.hasOwnProperty('showAnimation')) { this.defaults_.showAnimation = 'slideDown' }\n    if (!options.hasOwnProperty('showDuration')) { this.defaults_.showDuration = 400 }\n    if (!options.hasOwnProperty('style')) { this.defaults_.style = 'benndorf' }\n  }\n\n  /**\n   * Displays a generic message\n   * @param {string} message\n   * @param {MessageDisplayOptions} options\n   */\n  message (message, options = {}) {\n    let msgOptions = this.defaults_\n    if (options.hasOwnProperty('autoHide')) { msgOptions.autoHide = options.autoHide }\n    if (options.hasOwnProperty('autoHideDelay')) { msgOptions.autoHideDelay = options.autoHideDelay }\n    if (options.hasOwnProperty('className')) { msgOptions.className = options.className }\n    if (options.hasOwnProperty('position')) { msgOptions.position = options.position }\n\n    this.$element_.notify(html2Text(message), msgOptions)\n\n    // HOTFIX for notifyjs issue\n    $('.notifyjs-wrapper').click(() => {\n      this.hide()\n    })\n  }\n\n  /**\n   * Displays an error message\n   * @param {string} message\n   * @param {MessageReducedDisplayOptions} options\n   */\n  error (message, options = {}) {\n    options.className = 'error'\n    this.message(message, options)\n  }\n\n  /**\n   * Displays an info message\n   * @param {string} message\n   * @param {MessageReducedDisplayOptions} options\n   */\n  info (message, options = {}) {\n    options.className = 'info'\n    this.message(message, options)\n  }\n\n  /**\n   * Displays a success message\n   * @param {string} message\n   * @param {MessageReducedDisplayOptions} options\n   */\n  success (message, options = {}) {\n    options.className = 'success'\n    this.message(message, options)\n  }\n\n  /**\n   * Displays a warning message\n   * @param {string} message\n   * @param {MessageReducedDisplayOptions} options\n   */\n  warn (message, options = {}) {\n    options.className = 'warn'\n    this.message(message, options)\n  }\n\n  /**\n   * Hides all messages\n   */\n  hide () {\n    $('.notifyjs-wrapper').trigger('notify-hide')\n    window.clearTimeout(this.autoHideTimer_)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/MessageDisplay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 823,
    "kind": "typedef",
    "name": "MessageReducedDisplayOptions",
    "memberof": "src/MessageDisplay.js",
    "static": true,
    "longname": "src/MessageDisplay.js~MessageReducedDisplayOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "autoHide",
        "description": "whether to auto-hide the notification"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "autoHideDelay",
        "description": "milliseconds before hide (if autoHide is set)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "position",
        "description": "notification position relative to element"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "MessageReducedDisplayOptions"
    }
  },
  {
    "__docId__": 824,
    "kind": "typedef",
    "name": "MessageDisplayOptions",
    "memberof": "src/MessageDisplay.js",
    "static": true,
    "longname": "src/MessageDisplay.js~MessageDisplayOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string",
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "className",
        "description": "default class"
      }
    ],
    "type": {
      "types": [
        "MessageReducedDisplayOptions"
      ],
      "optional": false,
      "name": "MessageDisplayOptions"
    }
  },
  {
    "__docId__": 825,
    "kind": "typedef",
    "name": "MessageConstructorOptions",
    "memberof": "src/MessageDisplay.js",
    "static": true,
    "longname": "src/MessageDisplay.js~MessageConstructorOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "arrowShow",
        "description": "whether to show an arrow pointing at the element"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5",
        "defaultRaw": 5,
        "name": "arrowSize",
        "description": "Arrow size in pixels"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "autoHide",
        "description": "whether to auto-hide the notification"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "15000",
        "defaultRaw": 15000,
        "name": "autoHideDelay",
        "description": "milliseconds before hide (if autoHide is set)"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'error'",
        "defaultRaw": "'error'",
        "name": "className",
        "description": "default class"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "bottom left",
        "defaultRaw": "bottom left",
        "name": "position",
        "description": "notification position relative to element"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "2",
        "defaultRaw": 2,
        "name": "gap",
        "description": "padding between element and notification"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "slideUp",
        "defaultRaw": "slideUp",
        "name": "hideAnimation",
        "description": "hide animation type"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "200",
        "defaultRaw": 200,
        "name": "hideDuration",
        "description": "hide animation duration in milliseconds"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "slideDown",
        "defaultRaw": "slideDown",
        "name": "showAnimation",
        "description": "show animation type"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "400",
        "defaultRaw": 400,
        "name": "showDuration",
        "description": "show animation duration in miliseconds"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "bootstrap",
        "defaultRaw": "bootstrap",
        "name": "style",
        "description": "default style"
      }
    ],
    "type": {
      "types": [
        "MessageDisplayOptions"
      ],
      "optional": false,
      "name": "MessageConstructorOptions"
    }
  },
  {
    "__docId__": 826,
    "kind": "class",
    "name": "MessageDisplay",
    "memberof": "src/MessageDisplay.js",
    "static": true,
    "longname": "src/MessageDisplay.js~MessageDisplay",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/MessageDisplay.js",
    "importStyle": "{MessageDisplay}",
    "description": "Displays Messages",
    "lineNumber": 37,
    "interface": false
  },
  {
    "__docId__": 827,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MessageConstructorOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 828,
    "kind": "member",
    "name": "$element_",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#$element_",
    "access": "private",
    "description": "",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 829,
    "kind": "member",
    "name": "defaults_",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#defaults_",
    "access": "private",
    "description": "",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "MessageOptions"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 830,
    "kind": "member",
    "name": "autoHideTimer_",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#autoHideTimer_",
    "access": "private",
    "description": "",
    "lineNumber": 95,
    "type": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 831,
    "kind": "method",
    "name": "message",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#message",
    "access": "public",
    "description": "Displays a generic message",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MessageDisplayOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 832,
    "kind": "method",
    "name": "error",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#error",
    "access": "public",
    "description": "Displays an error message",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MessageReducedDisplayOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 833,
    "kind": "method",
    "name": "info",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#info",
    "access": "public",
    "description": "Displays an info message",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MessageReducedDisplayOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 834,
    "kind": "method",
    "name": "success",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#success",
    "access": "public",
    "description": "Displays a success message",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MessageReducedDisplayOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 835,
    "kind": "method",
    "name": "warn",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#warn",
    "access": "public",
    "description": "Displays a warning message",
    "lineNumber": 166,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MessageReducedDisplayOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 836,
    "kind": "method",
    "name": "hide",
    "memberof": "src/MessageDisplay.js~MessageDisplay",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/MessageDisplay.js~MessageDisplay#hide",
    "access": "public",
    "description": "Hides all messages",
    "lineNumber": 174,
    "params": [],
    "return": null
  },
  {
    "__docId__": 837,
    "kind": "file",
    "name": "src/Module.js",
    "content": "/**\n * Base class for modules. It shows all usable methods.\n */\nexport class Module {\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = map\n  }\n\n  /**\n   * @returns {G4UMap}\n   */\n  getMap () {\n    return this.map_\n  }\n\n  /**\n   * This method is called once when the map is configured\n   * @param mapConfig\n   * @returns {undefined}\n   */\n  configureMap (mapConfig) {\n    return undefined\n  }\n\n  /**\n   * This method is called every time the ui is recreated\n   * @param mapConfig\n   * @returns {undefined}\n   */\n  configureUI (mapConfig) {\n    return undefined\n  }\n\n  /**\n   * This method is called if the ControlFactory cant construct controls of this type\n   * @param {string} controlType\n   * @param {g4uControlOptions} options\n   * @param {ComposedControl|G4UMap} receiver\n   * @returns {undefined|Control}\n   */\n  createControl (controlType, options, receiver) {\n    return undefined\n  }\n\n  /**\n   * This method is called if the LayerFactory cant construct layers of this type\n   * @param {string} type\n   * @param {g4uLayerOptions} options\n   * @param {SuperType} superType\n   * @param {boolean} skipIdCheck\n   * @returns {undefined|ol.layer.Base}\n   */\n  createLayer (type, options, superType, skipIdCheck) {\n    return undefined\n  }\n\n  /**\n   * Thsi method is called if the map enables userActionTracking\n   * @returns {undefined}\n   */\n  enableUserActionTracking () {\n    return undefined\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/Module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 838,
    "kind": "class",
    "name": "Module",
    "memberof": "src/Module.js",
    "static": true,
    "longname": "src/Module.js~Module",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/Module.js",
    "importStyle": "{Module}",
    "description": "Base class for modules. It shows all usable methods.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 839,
    "kind": "method",
    "name": "setMap",
    "memberof": "src/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Module.js~Module#setMap",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 840,
    "kind": "member",
    "name": "map_",
    "memberof": "src/Module.js~Module",
    "static": false,
    "longname": "src/Module.js~Module#map_",
    "access": "private",
    "description": "",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 841,
    "kind": "method",
    "name": "getMap",
    "memberof": "src/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Module.js~Module#getMap",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{G4UMap}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 842,
    "kind": "method",
    "name": "configureMap",
    "memberof": "src/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Module.js~Module#configureMap",
    "access": "public",
    "description": "This method is called once when the map is configured",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mapConfig",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 843,
    "kind": "method",
    "name": "configureUI",
    "memberof": "src/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Module.js~Module#configureUI",
    "access": "public",
    "description": "This method is called every time the ui is recreated",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mapConfig",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 844,
    "kind": "method",
    "name": "createControl",
    "memberof": "src/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Module.js~Module#createControl",
    "access": "public",
    "description": "This method is called if the ControlFactory cant construct controls of this type",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined|Control}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "controlType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "g4uControlOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ComposedControl",
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "receiver",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined",
        "Control"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 845,
    "kind": "method",
    "name": "createLayer",
    "memberof": "src/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Module.js~Module#createLayer",
    "access": "public",
    "description": "This method is called if the LayerFactory cant construct layers of this type",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined|ol.layer.Base}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "g4uLayerOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SuperType"
        ],
        "spread": false,
        "optional": false,
        "name": "superType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipIdCheck",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined",
        "ol.layer.Base"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 846,
    "kind": "method",
    "name": "enableUserActionTracking",
    "memberof": "src/Module.js~Module",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Module.js~Module#enableUserActionTracking",
    "access": "public",
    "description": "Thsi method is called if the map enables userActionTracking",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 847,
    "kind": "file",
    "name": "src/moduleRegistration.js",
    "content": "const modules = []\n\nexport function registerModule (module) {\n  modules.push(module)\n}\n\nexport function getRegisteredModules () {\n  return modules\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/moduleRegistration.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 848,
    "kind": "variable",
    "name": "modules",
    "memberof": "src/moduleRegistration.js",
    "static": true,
    "longname": "src/moduleRegistration.js~modules",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/moduleRegistration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 849,
    "kind": "function",
    "name": "registerModule",
    "memberof": "src/moduleRegistration.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/moduleRegistration.js~registerModule",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/moduleRegistration.js",
    "importStyle": "{registerModule}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "module",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 850,
    "kind": "function",
    "name": "getRegisteredModules",
    "memberof": "src/moduleRegistration.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/moduleRegistration.js~getRegisteredModules",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/moduleRegistration.js",
    "importStyle": "{getRegisteredModules}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 851,
    "kind": "file",
    "name": "src/Move.js",
    "content": "import ol from 'openlayers'\n\n/**\n * @typedef {object} MoveOptions\n * @property {G4UMap} map\n * @property {number} [pixelPadding=0] a default padding around the target extent in pixels\n * @property {number} [meterMinSize=0] the minimal size of the target extent in meters\n * @property {number} [animationDuration=4000]\n * @property {boolean} [animations=true]\n * @property {boolean} [bouncing=false] if the animation should bounce or not\n */\n\n/**\n * @typedef {olx.view.FitOptions} SingleMoveOptions\n * @property {boolean} [animated] if specified overwrites the default settings\n * @property {number[]|string} [padding] can be set to 'default' to use the default settings\n */\n\n/**\n * Moves the map. Uses animations if desired.\n */\nexport class Move {\n  /**\n   * @param {MoveOptions} options\n   */\n  constructor (options) {\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = options.map\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelPadding_ = options.meterMinSize !== undefined ? 50 : options.pixelPadding\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.meterMinSize_ = options.meterMinSize !== undefined ? options.meterMinSize : 500\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.animationDuration_ = options.animationDuration || 2000\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.animations_ = options.animations !== undefined ? options.animations : true\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.bouncing_ = options.bouncing !== false\n  }\n\n  /**\n   * Turns animations on or off\n   * @param {boolean} animations\n   */\n  setAnimations (animations) {\n    this.animations_ = animations\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  getAnimations () {\n    return this.animations_\n  }\n\n  /**\n   * @param {ol.Coordinate} point\n   * @param {SingleMoveOptions} [options={}]\n   */\n  toPoint (point, options = {}) {\n    // calculate extent\n    let tmpView = new ol.View({\n      projection: this.map_.getView().getProjection(),\n      center: point,\n      resolution: this.map_.getView().getResolution()\n    })\n    let extent = tmpView.calculateExtent(this.map_.getSize().map(s => s - 2))\n\n    options.padding = [0, 0, 0, 0] // no padding around this extent\n\n    this.toExtent(extent, options)\n  }\n\n  /**\n   * @param {ol.Extent} extent\n   * @param {SingleMoveOptions} [options={}]\n   */\n  toExtent (extent, options = {}) {\n    let newExtent = extent\n    if (this.meterMinSize_) {\n      newExtent = this.bufferUpToMinSize_(extent)\n    }\n    if (options.animated === undefined ? this.animations_ : options.animated) {\n      this.animationZoomToExtent_(newExtent, options)\n    } else {\n      this.fit_(newExtent, options)\n    }\n  }\n\n  /**\n   * @param {ol.Point} point\n   * @param {SingleMoveOptions} [options={}]\n   */\n  zoomToPoint (point, options = {}) {\n    this.toExtent(ol.extent.boundingExtent([point]), options)\n  }\n\n  /**\n   * @param {ol.Extent} extent\n   * @returns {ol.Extent}\n   * @private\n   */\n  bufferUpToMinSize_ (extent) {\n    // TODO: maybe use something more precise than transforming into 3857 to get meter size.\n    let extentInMeters = ol.proj.transformExtent(extent, this.map_.getView().getProjection(), 'EPSG:3857')\n    let smallerSize = Math.min(ol.extent.getWidth(extentInMeters), ol.extent.getHeight(extentInMeters))\n    if (smallerSize < this.meterMinSize_) {\n      extentInMeters = ol.extent.buffer(extentInMeters, this.meterMinSize_ - smallerSize / 2)\n      return ol.proj.transformExtent(extentInMeters, 'EPSG:3857', this.map_.getView().getProjection())\n    } else {\n      return extent\n    }\n  }\n\n  /**\n   * @param {ol.Extent} extent\n   * @param {SingleMoveOptions} options\n   * @private\n   */\n  fit_ (extent, options) {\n    if (options.padding === 'default') {\n      options.padding = [this.pixelPadding_, this.pixelPadding_, this.pixelPadding_, this.pixelPadding_]\n    }\n\n    // options.constrainResolution = false\n\n    // using fit's padding option\n    this.map_.getView().fit(ol.geom.Polygon.fromExtent(extent), this.map_.getSize(), options)\n  }\n\n  /**\n   * This function glides or bounces to an extent\n   * @param {ol.Extent} endExtent\n   * @param {SingleMoveOptions} options\n   * @private\n   */\n  animationZoomToExtent_ (endExtent, options) {\n    let map = this.map_\n    let view = map.getView()\n    let size = map.getSize()\n\n    let startExtent = view.calculateExtent(size)\n\n    let moveExtent = ol.extent.extend(startExtent.slice(0), endExtent) // a extent where both extents are contained.\n\n    if (this.bouncing_ && !ol.extent.intersects(startExtent, endExtent)) {\n      let moveOptions = Object.assign({\n        duration: this.animationDuration_ / 2\n      }, options)\n      view.fit(moveExtent, moveOptions)\n      setTimeout(() => {\n        let endOptions = Object.assign({\n          duration: this.animationDuration_ / 2\n        }, options)\n        view.fit(endExtent, endOptions)\n      }, this.animationDuration_ / 2)\n    } else {\n      let endOptions = Object.assign({\n        duration: this.animationDuration_ / 2\n      }, options)\n      view.fit(endExtent, endOptions)\n    }\n  }\n\n  /**\n   * Easing function based on a circle function\n   * @param {number} t\n   * @returns {number}\n   * @private\n   */\n  earlyFastRiseEasing_ (t) {\n    return Math.sqrt(2 * t - Math.pow(t, 2))\n  }\n\n  /**\n   * Easing function based on a circle function\n   * @param {number} t\n   * @returns {number}\n   * @private\n   */\n  lateFastRiseEasing_ (t) {\n    return 1 - Math.sqrt(1 - Math.pow(t, 2))\n  }\n\n  /**\n   * Easing function based on a parabolic function\n   * @param {number} t\n   * @returns {number}\n   * @private\n   */\n  earlyFastRiseEasing2_ (t) {\n    return -Math.pow((t - 1), 2) + 1\n  }\n\n  /**\n   * Easing function based on a parabolic function\n   * @param {number} t\n   * @returns {number}\n   * @private\n   */\n  lateFastRiseEasing2_ (t) {\n    return Math.pow(t, 2)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/Move.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 852,
    "kind": "typedef",
    "name": "MoveOptions",
    "memberof": "src/Move.js",
    "static": true,
    "longname": "src/Move.js~MoveOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "G4UMap"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "pixelPadding",
        "description": "a default padding around the target extent in pixels"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "meterMinSize",
        "description": "the minimal size of the target extent in meters"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "4000",
        "defaultRaw": 4000,
        "name": "animationDuration",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "animations",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "bouncing",
        "description": "if the animation should bounce or not"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "MoveOptions"
    }
  },
  {
    "__docId__": 853,
    "kind": "typedef",
    "name": "SingleMoveOptions",
    "memberof": "src/Move.js",
    "static": true,
    "longname": "src/Move.js~SingleMoveOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "animated",
        "description": "if specified overwrites the default settings"
      },
      {
        "nullable": null,
        "types": [
          "number[]",
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "padding",
        "description": "can be set to 'default' to use the default settings"
      }
    ],
    "type": {
      "types": [
        "olx.view.FitOptions"
      ],
      "optional": false,
      "name": "SingleMoveOptions"
    }
  },
  {
    "__docId__": 854,
    "kind": "class",
    "name": "Move",
    "memberof": "src/Move.js",
    "static": true,
    "longname": "src/Move.js~Move",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/Move.js",
    "importStyle": "{Move}",
    "description": "Moves the map. Uses animations if desired.",
    "lineNumber": 22,
    "interface": false
  },
  {
    "__docId__": 855,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "MoveOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 856,
    "kind": "member",
    "name": "map_",
    "memberof": "src/Move.js~Move",
    "static": false,
    "longname": "src/Move.js~Move#map_",
    "access": "private",
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "G4UMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 857,
    "kind": "member",
    "name": "pixelPadding_",
    "memberof": "src/Move.js~Move",
    "static": false,
    "longname": "src/Move.js~Move#pixelPadding_",
    "access": "private",
    "description": "",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 858,
    "kind": "member",
    "name": "meterMinSize_",
    "memberof": "src/Move.js~Move",
    "static": false,
    "longname": "src/Move.js~Move#meterMinSize_",
    "access": "private",
    "description": "",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 859,
    "kind": "member",
    "name": "animationDuration_",
    "memberof": "src/Move.js~Move",
    "static": false,
    "longname": "src/Move.js~Move#animationDuration_",
    "access": "private",
    "description": "",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 860,
    "kind": "member",
    "name": "animations_",
    "memberof": "src/Move.js~Move",
    "static": false,
    "longname": "src/Move.js~Move#animations_",
    "access": "private",
    "description": "",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 861,
    "kind": "member",
    "name": "bouncing_",
    "memberof": "src/Move.js~Move",
    "static": false,
    "longname": "src/Move.js~Move#bouncing_",
    "access": "private",
    "description": "",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 862,
    "kind": "method",
    "name": "setAnimations",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#setAnimations",
    "access": "public",
    "description": "Turns animations on or off",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "animations",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 864,
    "kind": "method",
    "name": "getAnimations",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#getAnimations",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 865,
    "kind": "method",
    "name": "toPoint",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#toPoint",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Coordinate"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SingleMoveOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 866,
    "kind": "method",
    "name": "toExtent",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#toExtent",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Extent"
        ],
        "spread": false,
        "optional": false,
        "name": "extent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SingleMoveOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 867,
    "kind": "method",
    "name": "zoomToPoint",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#zoomToPoint",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Point"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SingleMoveOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 868,
    "kind": "method",
    "name": "bufferUpToMinSize_",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#bufferUpToMinSize_",
    "access": "private",
    "description": "",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.Extent}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Extent"
        ],
        "spread": false,
        "optional": false,
        "name": "extent",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.Extent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 869,
    "kind": "method",
    "name": "fit_",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#fit_",
    "access": "private",
    "description": "",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Extent"
        ],
        "spread": false,
        "optional": false,
        "name": "extent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SingleMoveOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 870,
    "kind": "method",
    "name": "animationZoomToExtent_",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#animationZoomToExtent_",
    "access": "private",
    "description": "This function glides or bounces to an extent",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Extent"
        ],
        "spread": false,
        "optional": false,
        "name": "endExtent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SingleMoveOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 871,
    "kind": "method",
    "name": "earlyFastRiseEasing_",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#earlyFastRiseEasing_",
    "access": "private",
    "description": "Easing function based on a circle function",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 872,
    "kind": "method",
    "name": "lateFastRiseEasing_",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#lateFastRiseEasing_",
    "access": "private",
    "description": "Easing function based on a circle function",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 873,
    "kind": "method",
    "name": "earlyFastRiseEasing2_",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#earlyFastRiseEasing2_",
    "access": "private",
    "description": "Easing function based on a parabolic function",
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 874,
    "kind": "method",
    "name": "lateFastRiseEasing2_",
    "memberof": "src/Move.js~Move",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Move.js~Move#lateFastRiseEasing2_",
    "access": "private",
    "description": "Easing function based on a parabolic function",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 875,
    "kind": "file",
    "name": "src/openlayersInjections.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\n/**\n * extends the openlayers ol.Object class. Waits till a property is set to a specific value and calls the given\n * callback function. If the value already has the desired value the callback is called immediately.\n * @param {string} propName\n * @param {*} value\n * @param {function} cb\n */\nol.Object.prototype.asSoonAs = function (propName, value, cb) {\n  if (!$.isFunction(cb)) {\n    throw new Error('You need to provide a callback to asSoonAs.')\n  }\n  if (this.get(propName) === value) {\n    // run callback\n    cb()\n  } else {\n    this.once('change:' + propName, () => {\n      // recursive call\n      this.asSoonAs(propName, value, cb)\n    })\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/openlayersInjections.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 876,
    "kind": "function",
    "name": "asSoonAs",
    "memberof": "src/openlayersInjections.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/openlayersInjections.js~asSoonAs",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/openlayersInjections.js",
    "importStyle": null,
    "description": "extends the openlayers ol.Object class. Waits till a property is set to a specific value and calls the given\ncallback function. If the value already has the desired value the callback is called immediately.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "propName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 877,
    "kind": "file",
    "name": "src/PopupModifier.js",
    "content": "/**\n * @typedef {object} PopupContent\n * @property {string} name\n * @property {string} description\n */\n\nexport class PopupModifier {\n  /**\n   * @param {G4UMap} map\n   */\n  setMap (map) {\n    /**\n     * @type {G4UMap}\n     * @private\n     */\n    this.map_ = map\n  }\n\n  /**\n   * @returns {G4UMap}\n   */\n  getMap () {\n    return this.map_\n  }\n\n  /**\n   * overwrite this method\n   * @param {PopupContent} popupContent\n   * @returns {PopupContent|Promise.<PopupContent>}\n   */\n  modifyPopupContent (popupContent) {\n    return popupContent\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/PopupModifier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 878,
    "kind": "typedef",
    "name": "PopupContent",
    "memberof": "src/PopupModifier.js",
    "static": true,
    "longname": "src/PopupModifier.js~PopupContent",
    "access": "public",
    "description": "",
    "lineNumber": 7,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "PopupContent"
    }
  },
  {
    "__docId__": 879,
    "kind": "file",
    "name": "src/PopupModifierManager.js",
    "content": "import { Debug } from './Debug'\n\nexport class PopupModifierManager {\n  constructor () {\n    /**\n     * @type {Map.<string,PopupModifier>}\n     * @private\n     */\n    this.popupModifiers_ = new Map()\n  }\n\n  /**\n   * register a text mutator with a name. Which mutator is finally used can be adjusted via the config files.\n   * @param {string} name\n   * @param {PopupModifier} popupModifier\n   */\n  register (name, popupModifier) {\n    this.popupModifiers_.set(name, popupModifier)\n  }\n\n  /**\n   * @param {PopupContent} popupContent\n   * @param {string[]} popupModifiers\n   * @returns {Promise.<PopupContent>}\n   */\n  apply (popupContent, popupModifiers) {\n    let promiseContent = Promise.resolve(popupContent)\n\n    for (let m of popupModifiers) {\n      let popupModifier = this.popupModifiers_.get(m)\n      if (popupModifier) {\n        promiseContent = promiseContent.then(result => popupModifier.modifyPopupContent(result))\n      } else {\n        Debug.error(`Trying to use unregistered modifier ${m}`)\n      }\n    }\n\n    return promiseContent\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/PopupModifierManager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 880,
    "kind": "class",
    "name": "PopupModifierManager",
    "memberof": "src/PopupModifierManager.js",
    "static": true,
    "longname": "src/PopupModifierManager.js~PopupModifierManager",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/PopupModifierManager.js",
    "importStyle": "{PopupModifierManager}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 881,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/PopupModifierManager.js~PopupModifierManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PopupModifierManager.js~PopupModifierManager#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 882,
    "kind": "member",
    "name": "popupModifiers_",
    "memberof": "src/PopupModifierManager.js~PopupModifierManager",
    "static": false,
    "longname": "src/PopupModifierManager.js~PopupModifierManager#popupModifiers_",
    "access": "private",
    "description": "",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "Map.<string,PopupModifier>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 883,
    "kind": "method",
    "name": "register",
    "memberof": "src/PopupModifierManager.js~PopupModifierManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PopupModifierManager.js~PopupModifierManager#register",
    "access": "public",
    "description": "register a text mutator with a name. Which mutator is finally used can be adjusted via the config files.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PopupModifier"
        ],
        "spread": false,
        "optional": false,
        "name": "popupModifier",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 884,
    "kind": "method",
    "name": "apply",
    "memberof": "src/PopupModifierManager.js~PopupModifierManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/PopupModifierManager.js~PopupModifierManager#apply",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PopupContent>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PopupContent"
        ],
        "spread": false,
        "optional": false,
        "name": "popupContent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "popupModifiers",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PopupContent>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 885,
    "kind": "file",
    "name": "src/ShowWMSFeatureInfo.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport { VectorLayer } from './layers/VectorLayer'\nimport { MapEventInteraction } from './interactions/MapEventInteraction'\nimport { FeaturePopup } from './FeaturePopup'\nimport { cssClasses } from './globals'\n\n/**\n * @typedef {Object} ShowWMSFeatureInfoOptions\n * @property {StyleLike} [style='#defaultStyle']\n * @property {String} [seperator='<br>']\n * @property {String[]} [popupModifiers=[]]\n * @property {boolean} [animated]\n */\n\nexport class ShowWMSFeatureInfo {\n  /**\n   * @param {ShowWMSFeatureInfoOptions} [options={}]\n   */\n  constructor (options = {}) {\n    this.separator_ = options.hasOwnProperty('seperator') ? options.seperator : '<br>'\n    this.style_ = options.style || '#defaultStyle'\n\n    this.animated_ = options.animated\n    this.centerOnPopup_ = options.hasOwnProperty('centerOnPopup') ? options.centerOnPopup : true\n    this.centerIfNoData_ = this.centerOnPopup_ && options.hasOwnProperty('centerIfNoData')\n      ? options.centerIfNoData : false\n\n    this.centerOnPopupInitial_ = this.centerOnPopup_\n\n    this.popupModifiers_ = options.popupModifiers || []\n  }\n\n  handleClickEvent (e) {\n    let map = this.getMap()\n    let featurePopup = map.get('featurePopup')\n    let projection = map.getView().getProjection()\n\n    let layers = this.layers_.filter(l => l.getVisible())\n\n    let shouldShow = map.forEachLayerAtPixel(e.mapEvent.pixel, layer => layers.indexOf(layer) > -1) &&\n      !map.forEachFeatureAtPixel(e.mapEvent.pixel, FeaturePopup.canDisplay)\n\n    if (shouldShow) {\n      let coordinate = e.mapEvent.coordinate\n      this.utilitySource_.clear()\n      let feature\n      for (let layer of layers) {\n        layer.getSource().getFeatureInfo(coordinate, map.getView().getResolution(), projection)\n          .then(data => {\n            if (data !== '') {\n              if (!feature) {\n                this.utilitySource_.clear()\n                feature = new ol.Feature({\n                  geometry: new ol.geom.Point(coordinate),\n                  description: data,\n                  style: map.get('styling').getStyle(this.style_)\n                })\n                map.get('styling').manageFeature(feature)\n                this.utilitySource_.addFeature(feature)\n                featurePopup.setFeature(feature, coordinate,\n                  [...this.popupModifiers_, ...layer.getSource().getFeatureInfoMutators()])\n                featurePopup.setVisible(true)\n                this.setPointVisible(true)\n                if (this.centerOnPopup_) {\n                  featurePopup.centerMapOnPopup(this.animated_)\n                }\n                featurePopup.once('change:visible', () => this.setPointVisible(false))\n              } else {\n                feature.set('description', feature.get('description') + this.separator_ + data)\n              }\n            }\n            layer.on('change:visible', () => {\n              featurePopup.setVisible(false)\n            })\n          })\n      }\n    }\n  }\n\n  handlePointerMoveEvent (e) {\n    let map = this.getMap()\n    let featureTooltip = map.get('featureTooltip')\n\n    featureTooltip.setFeature(null)\n    clearTimeout(this.tooltipTimeout_)\n    this.lastTooltipPixel_ = e.pixel\n    this.tooltipTimeout_ = setTimeout(() => {\n      if (e.pixel === this.lastTooltipPixel_) {\n        let projection = map.getView().getProjection()\n        let layers = this.layers_.filter(l => l.getVisible())\n        let shouldShow = map.forEachLayerAtPixel(e.mapEvent.pixel, layer => layers.indexOf(layer) > -1) &&\n          !map.forEachFeatureAtPixel(e.mapEvent.pixel, FeaturePopup.canDisplay)\n\n        if (shouldShow) {\n          let coordinate = e.mapEvent.coordinate\n          let feature\n          for (let layer of layers) {\n            layer.getSource().getFeatureInfo(coordinate, map.getView().getResolution(), projection)\n              .then(data => {\n                if (data !== '') {\n                  if (!feature) {\n                    feature = new ol.Feature({\n                      geometry: new ol.geom.Point(coordinate),\n                      description: data\n                    })\n                    featureTooltip.setFeature(feature, coordinate,\n                      [...this.popupModifiers_, ...layer.getSource().getFeatureInfoMutators()])\n                  } else {\n                    feature.set('description', feature.get('description') + this.separator_ + data)\n                  }\n                }\n                layer.on('change:visible', () => {\n                  featureTooltip.setFeature(null)\n                })\n              })\n          }\n        }\n      }\n    }, 200)\n\n    if (map.forEachLayerAtPixel(e.mapEvent.pixel, layer => this.layers_.indexOf(layer) > -1)) {\n      $(map.getViewport()).addClass(cssClasses.clickable)\n    } else {\n      $(map.getViewport()).removeClass(cssClasses.clickable)\n    }\n  }\n\n  setMap (map) {\n    let onMapChangeMobile = () => {\n      if (map.get('mobile')) {\n        this.centerOnPopup_ = false\n      } else {\n        this.centerOnPopup_ = this.centerOnPopupInitial_\n      }\n    }\n\n    if (this.getMap()) {\n      this.getMap().un('change:mobile', onMapChangeMobile)\n      ol.Observable.unByKey(this.listenerKey_)\n    }\n\n    this.map_ = map\n    if (map) {\n      this.utilitySource_ = new ol.source.Vector()\n      this.utilityLayer_ = new VectorLayer({\n        visible: false,\n        source: this.utilitySource_\n      })\n      map.addLayer(this.utilityLayer_)\n\n      this.layers_ = []\n\n      let interaction = new MapEventInteraction({type: 'singleclick'})\n      interaction.on('mapevent', e => this.handleClickEvent(e))\n\n      map.addDefaultInteraction('singleclick', interaction)\n\n      let hoverInteraction = new MapEventInteraction({type: 'pointermove'})\n      hoverInteraction.on('mapevent', e => this.handlePointerMoveEvent(e))\n\n      map.addDefaultInteraction('pointermove', hoverInteraction)\n\n      onMapChangeMobile()\n      map.on('change:mobile', onMapChangeMobile)\n    }\n  }\n\n  getPointVisible () {\n    return this.utilityLayer_.getVisible()\n  }\n\n  setPointVisible (visible) {\n    this.utilityLayer_.setVisible(visible)\n  }\n\n  getMap () {\n    return this.map_\n  }\n\n  addLayer (layer) {\n    this.layers_.push(layer)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/ShowWMSFeatureInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 886,
    "kind": "typedef",
    "name": "ShowWMSFeatureInfoOptions",
    "memberof": "src/ShowWMSFeatureInfo.js",
    "static": true,
    "longname": "src/ShowWMSFeatureInfo.js~ShowWMSFeatureInfoOptions",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "properties": [
      {
        "nullable": null,
        "types": [
          "StyleLike"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'#defaultStyle'",
        "defaultRaw": "'#defaultStyle'",
        "name": "style",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'<br>'",
        "defaultRaw": "'<br>'",
        "name": "seperator",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "popupModifiers",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "animated",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ShowWMSFeatureInfoOptions"
    }
  },
  {
    "__docId__": 887,
    "kind": "file",
    "name": "src/sources/ClusterSource.js",
    "content": "import ol from 'openlayers'\nimport { Debug } from '../Debug'\n\nexport class ClusterSource extends ol.source.Cluster {\n  /**\n   * @param {ol.source.Vector} source\n   * @param {olx.} options\n   */\n  constructor (source, options) {\n    options.source = source\n    options.geometryFunction = options.geometryFunction || ClusterSource.defaultGeometryFunction\n    super(options)\n  }\n\n  static defaultGeometryFunction (feature) {\n    let geom = feature.getGeometry()\n    if (geom instanceof ol.geom.Point) {\n      return geom\n    } else if (geom instanceof ol.geom.LineString) {\n      return new ol.geom.Point(ol.extent.getCenter(geom.getExtent()))\n    } else if (geom instanceof ol.geom.Polygon) {\n      return new ol.geom.Point(ol.extent.getCenter(geom.getExtent()))\n    } else if (geom instanceof ol.geom.Circle) {\n      return new ol.Point(geom.getCenter())\n    } else {\n      Debug.warn('Trying to cluster unsupported geometry type.')\n      return null\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/sources/ClusterSource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 888,
    "kind": "class",
    "name": "ClusterSource",
    "memberof": "src/sources/ClusterSource.js",
    "static": true,
    "longname": "src/sources/ClusterSource.js~ClusterSource",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/ClusterSource.js",
    "importStyle": "{ClusterSource}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "openlayers~ol.source.Cluster"
    ]
  },
  {
    "__docId__": 889,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/sources/ClusterSource.js~ClusterSource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ClusterSource.js~ClusterSource#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.source.Vector"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "olx."
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 890,
    "kind": "method",
    "name": "defaultGeometryFunction",
    "memberof": "src/sources/ClusterSource.js~ClusterSource",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/sources/ClusterSource.js~ClusterSource.defaultGeometryFunction",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "feature",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 891,
    "kind": "file",
    "name": "src/sources/ImageWMSSource.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport { asyncImageLoad, mixin } from '../utilities'\nimport { Debug } from '../Debug'\n\nexport class WMSFeatureInfoMixin {\n  initialize (options) {\n    this.featureInfo_ = options.featureInfo !== undefined\n\n    if (this.featureInfo_) {\n      if (options.featureInfoProxy !== undefined) {\n        this.switchedUrl = options.originalUrl.clone()\n        this.switchedUrl.proxy = options.featureInfo.proxy\n      }\n      this.featureInfoParams_ = options.featureInfo.params || {}\n      this.featureInfoCheckable_ = options.featureInfo.checkable\n      this.featureInfoMutators_ = options.featureInfo.mutators\n    }\n  }\n\n  getFeatureInfoMutators () {\n    return this.featureInfoMutators_ || []\n  }\n\n  hasFeatureInfo () {\n    return this.featureInfo_\n  }\n\n  isFeatureInfoCheckable () {\n    return this.featureInfoCheckable_\n  }\n\n  updateFeatureInfoParams (newParams) {\n    Object.assign(this.featureInfoParams_, newParams)\n  }\n\n  getFeatureInfo (coordinate, resolution, projection) {\n    return new Promise((resolve, reject) => {\n      let params = this.featureInfoParams_\n      if (!params['QUERY_LAYERS'] || params['QUERY_LAYERS'].length === 0) {\n        resolve('')\n      } else {\n        let normalUrls\n        if (this.switchedUrl) {\n          normalUrls = this.getUrls()\n          this.setUrl(this.switchedUrl.finalize())\n        }\n        $.ajax({\n          url: this.getGetFeatureInfoUrl(coordinate, resolution, projection, params),\n          success: resolve,\n          error: reject,\n          dataType: 'text'\n        })\n        if (this.switchedUrl) {\n          this.setUrls(normalUrls)\n        }\n      }\n    })\n  }\n\n  toggleArrayEntries_ (obj, prop, names, toggle) {\n    let arr = obj[prop] || []\n    if (toggle) {\n      for (let name of names) {\n        if (arr.indexOf(name) < 0) {\n          arr.push(name)\n        }\n      }\n    } else {\n      for (let name of names) {\n        let index = arr.indexOf(name)\n        if (index >= 0) {\n          arr.splice(index, 1)\n        }\n      }\n    }\n    obj[prop] = arr\n    return obj\n  }\n\n  toggleWMSLayers (names, toggle) {\n    this.updateParams(this.toggleArrayEntries_(this.getParams(), 'LAYERS', names, toggle))\n  }\n\n  toggleWMSQueryLayers (names, toggle) {\n    this.updateFeatureInfoParams(this.toggleArrayEntries_(this.featureInfoParams_, 'QUERY_LAYERS', names, toggle))\n  }\n\n  arrayContainsAll (arr, contains) {\n    for (let needle in contains) {\n      if (arr.indexOf(needle) < 0) {\n        return false\n      }\n    }\n    return true\n  }\n\n  getWMSLayersVisible (names) {\n    return this.arrayContainsAll(this.getParams().LAYERS || [], names)\n  }\n\n  getWMSQueryLayersVisible (names) {\n    return this.arrayContainsAll(this.featureInfoParams_.QUERY_LAYERS || [], names)\n  }\n}\n\nexport class ImageWMSSource extends mixin(ol.source.ImageWMS, WMSFeatureInfoMixin) {\n  constructor (options) {\n    options.originalUrl = options.url\n    options.url = options.url.finalize()\n    options.imageLoadFunction = (image, src) => {\n      asyncImageLoad(image.getImage(), options.originalUrl, src)\n        .catch(err => Debug.error(err))\n    }\n    super(options)\n  }\n}\n\nexport class TileWMSSource extends mixin(ol.source.TileWMS, WMSFeatureInfoMixin) {\n  constructor (options) {\n    options.originalUrl = options.url\n    options.url = options.url.finalize()\n    options.tileLoadFunction = (tile, src) => {\n      asyncImageLoad(tile.getImage(), options.originalUrl, src)\n        .catch(err => Debug.error(err))\n    }\n    super(options)\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/sources/ImageWMSSource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 892,
    "kind": "class",
    "name": "WMSFeatureInfoMixin",
    "memberof": "src/sources/ImageWMSSource.js",
    "static": true,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/ImageWMSSource.js",
    "importStyle": "{WMSFeatureInfoMixin}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 893,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 894,
    "kind": "member",
    "name": "featureInfo_",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#featureInfo_",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 895,
    "kind": "member",
    "name": "switchedUrl",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#switchedUrl",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 896,
    "kind": "member",
    "name": "featureInfoParams_",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#featureInfoParams_",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 897,
    "kind": "member",
    "name": "featureInfoCheckable_",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#featureInfoCheckable_",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 898,
    "kind": "member",
    "name": "featureInfoMutators_",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#featureInfoMutators_",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 899,
    "kind": "method",
    "name": "getFeatureInfoMutators",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#getFeatureInfoMutators",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 900,
    "kind": "method",
    "name": "hasFeatureInfo",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#hasFeatureInfo",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 901,
    "kind": "method",
    "name": "isFeatureInfoCheckable",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#isFeatureInfoCheckable",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 902,
    "kind": "method",
    "name": "updateFeatureInfoParams",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#updateFeatureInfoParams",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "newParams",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 903,
    "kind": "method",
    "name": "getFeatureInfo",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#getFeatureInfo",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "coordinate",
        "types": [
          "*"
        ]
      },
      {
        "name": "resolution",
        "types": [
          "*"
        ]
      },
      {
        "name": "projection",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 904,
    "kind": "method",
    "name": "toggleArrayEntries_",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#toggleArrayEntries_",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "names",
        "types": [
          "*"
        ]
      },
      {
        "name": "toggle",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 905,
    "kind": "method",
    "name": "toggleWMSLayers",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#toggleWMSLayers",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      },
      {
        "name": "toggle",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 906,
    "kind": "method",
    "name": "toggleWMSQueryLayers",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#toggleWMSQueryLayers",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      },
      {
        "name": "toggle",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 907,
    "kind": "method",
    "name": "arrayContainsAll",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#arrayContainsAll",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "arr",
        "types": [
          "*"
        ]
      },
      {
        "name": "contains",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 908,
    "kind": "method",
    "name": "getWMSLayersVisible",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#getWMSLayersVisible",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 909,
    "kind": "method",
    "name": "getWMSQueryLayersVisible",
    "memberof": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/ImageWMSSource.js~WMSFeatureInfoMixin#getWMSQueryLayersVisible",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 910,
    "kind": "class",
    "name": "ImageWMSSource",
    "memberof": "src/sources/ImageWMSSource.js",
    "static": true,
    "longname": "src/sources/ImageWMSSource.js~ImageWMSSource",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/ImageWMSSource.js",
    "importStyle": "{ImageWMSSource}",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "interface": false,
    "expressionExtends": "mixin(ol.source.ImageWMS, WMSFeatureInfoMixin)",
    "extends": [
      "WMSFeatureInfoMixin"
    ]
  },
  {
    "__docId__": 911,
    "kind": "class",
    "name": "TileWMSSource",
    "memberof": "src/sources/ImageWMSSource.js",
    "static": true,
    "longname": "src/sources/ImageWMSSource.js~TileWMSSource",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/ImageWMSSource.js",
    "importStyle": "{TileWMSSource}",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "interface": false,
    "expressionExtends": "mixin(ol.source.TileWMS, WMSFeatureInfoMixin)",
    "extends": [
      "WMSFeatureInfoMixin"
    ]
  },
  {
    "__docId__": 912,
    "kind": "file",
    "name": "src/sources/QueryVectorSource.js",
    "content": "import {SourceServerVector} from './SourceServerVector'\n\n/**\n * @typedef {SourceServerVectorOptions} QuerySourceOptions\n * @property {String[]} [queryValues=[]]\n */\n\n/**\n * A source for a VectorLayer which address is controlled by the urlapi and which is not shown in the LayerSelector\n */\nexport class QueryVectorSource extends SourceServerVector {\n  /**\n   * @param {QuerySourceOptions} options\n   */\n  constructor (options = {}) {\n    super(options)\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.changedQueryValuesCount_ = 0\n\n    this.setQueryValues(options.queryValues || [])\n  }\n\n  /**\n   * @param {string[]} values\n   */\n  setQueryValues (values) {\n    /**\n     * @type {string[]}\n     * @private\n     */\n    this.queryValues_ = values\n    this.urlTemplate.expandTemplate('apiValue', this.queryValues_, true)\n\n    this.changedQueryValuesCount_++\n    this.changed()\n  }\n\n  addFeatures (features) {\n    if (this.changedQueryValuesCount_ > 0) {\n      this.changedQueryValuesCount_--\n      this.clear()\n    }\n    super.addFeatures(features)\n  }\n\n  /**\n   * @returns {string[]}\n   */\n  getQueryValues () {\n    return this.queryValues_\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/sources/QueryVectorSource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 913,
    "kind": "typedef",
    "name": "QuerySourceOptions",
    "memberof": "src/sources/QueryVectorSource.js",
    "static": true,
    "longname": "src/sources/QueryVectorSource.js~QuerySourceOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "queryValues",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "SourceServerVectorOptions"
      ],
      "optional": false,
      "name": "QuerySourceOptions"
    }
  },
  {
    "__docId__": 914,
    "kind": "class",
    "name": "QueryVectorSource",
    "memberof": "src/sources/QueryVectorSource.js",
    "static": true,
    "longname": "src/sources/QueryVectorSource.js~QueryVectorSource",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/QueryVectorSource.js",
    "importStyle": "{QueryVectorSource}",
    "description": "A source for a VectorLayer which address is controlled by the urlapi and which is not shown in the LayerSelector",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "src/sources/SourceServerVector.js~SourceServerVector"
    ]
  },
  {
    "__docId__": 915,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/sources/QueryVectorSource.js~QueryVectorSource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/QueryVectorSource.js~QueryVectorSource#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "QuerySourceOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 916,
    "kind": "member",
    "name": "changedQueryValuesCount_",
    "memberof": "src/sources/QueryVectorSource.js~QueryVectorSource",
    "static": false,
    "longname": "src/sources/QueryVectorSource.js~QueryVectorSource#changedQueryValuesCount_",
    "access": "private",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 917,
    "kind": "method",
    "name": "setQueryValues",
    "memberof": "src/sources/QueryVectorSource.js~QueryVectorSource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/QueryVectorSource.js~QueryVectorSource#setQueryValues",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 918,
    "kind": "member",
    "name": "queryValues_",
    "memberof": "src/sources/QueryVectorSource.js~QueryVectorSource",
    "static": false,
    "longname": "src/sources/QueryVectorSource.js~QueryVectorSource#queryValues_",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 919,
    "kind": "method",
    "name": "addFeatures",
    "memberof": "src/sources/QueryVectorSource.js~QueryVectorSource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/QueryVectorSource.js~QueryVectorSource#addFeatures",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "features",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 920,
    "kind": "method",
    "name": "getQueryValues",
    "memberof": "src/sources/QueryVectorSource.js~QueryVectorSource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/QueryVectorSource.js~QueryVectorSource#getQueryValues",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 921,
    "kind": "file",
    "name": "src/sources/QueryWMSSource.js",
    "content": "import { mixin } from '../utilities'\nimport { ImageWMSSource, TileWMSSource } from './ImageWMSSource'\n\n/**\n * A source for a VectorLayer which address is controlled by the urlapi and which is not shown in the LayerSelector\n */\nexport class QueryWMSMixin {\n  initialize (options) {\n    this.setQueryValues(options.queryValues || [])\n  }\n\n  /**\n   * @param {string[]} values\n   */\n  setQueryValues (values) {\n    /**\n     * @type {string[]}\n     * @private\n     */\n    this.queryValues_ = values\n\n    this.updateParams(Object.assign({}, this.getParams(), { LAYERS: values }))\n\n    this.changed()\n  }\n\n  /**\n   * @returns {string[]}\n   */\n  getQueryValues () {\n    return this.queryValues_\n  }\n}\n\nexport const QueryImageWMSSource = mixin(ImageWMSSource, QueryWMSMixin)\n\nexport const QueryTileWMSSource = mixin(TileWMSSource, QueryWMSMixin)\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/sources/QueryWMSSource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 922,
    "kind": "class",
    "name": "QueryWMSMixin",
    "memberof": "src/sources/QueryWMSSource.js",
    "static": true,
    "longname": "src/sources/QueryWMSSource.js~QueryWMSMixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/QueryWMSSource.js",
    "importStyle": "{QueryWMSMixin}",
    "description": "A source for a VectorLayer which address is controlled by the urlapi and which is not shown in the LayerSelector",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 923,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/sources/QueryWMSSource.js~QueryWMSMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/QueryWMSSource.js~QueryWMSMixin#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 924,
    "kind": "method",
    "name": "setQueryValues",
    "memberof": "src/sources/QueryWMSSource.js~QueryWMSMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/QueryWMSSource.js~QueryWMSMixin#setQueryValues",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 925,
    "kind": "member",
    "name": "queryValues_",
    "memberof": "src/sources/QueryWMSSource.js~QueryWMSMixin",
    "static": false,
    "longname": "src/sources/QueryWMSSource.js~QueryWMSMixin#queryValues_",
    "access": "private",
    "description": "",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 926,
    "kind": "method",
    "name": "getQueryValues",
    "memberof": "src/sources/QueryWMSSource.js~QueryWMSMixin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/QueryWMSSource.js~QueryWMSMixin#getQueryValues",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 927,
    "kind": "variable",
    "name": "QueryImageWMSSource",
    "memberof": "src/sources/QueryWMSSource.js",
    "static": true,
    "longname": "src/sources/QueryWMSSource.js~QueryImageWMSSource",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/QueryWMSSource.js",
    "importStyle": "{QueryImageWMSSource}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 928,
    "kind": "variable",
    "name": "QueryTileWMSSource",
    "memberof": "src/sources/QueryWMSSource.js",
    "static": true,
    "longname": "src/sources/QueryWMSSource.js~QueryTileWMSSource",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/QueryWMSSource.js",
    "importStyle": "{QueryTileWMSSource}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 929,
    "kind": "file",
    "name": "src/sources/SourceServerVector.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport { copy, take } from '../utilitiesObject'\nimport {Debug} from '../Debug'\n\n/**\n * @typedef {olx.source.VectorOptions} SourceServerVectorOptions\n * @property {string} type the format to use\n * @property {URLLike} url\n * @property {StyleLike} [defaultStyle] a default style to fallback to\n * @property {boolean} [extractStyles=true] if styles should get extracted from the KML\n * @property {string} [loadingStrategy='ALL'] Either 'BBOX' or 'ALL' (Synonym: 'FIXED').\n *    If BBOX the given url has to contain the parameters {bboxleft}, {bboxbottom}, {bboxright}, {bboxtop}.\n * @property {number} [bboxRatio=1] If set the bbox loading strategy will increase the load extent by this factor\n * @property {ol.ProjectionLike} [bboxProjection] coordinates will be inserted into the url in this format. defaults to\n *    the interfaceProjection\n * @property {boolean} [cache=] true, false for dataType 'script' and 'jsonp'\n * @property {number} [refresh] if set the layer will refresh itself in the specified time (in ms)\n * @property {L10N} localiser\n * @property {boolean} localised\n * @property {Styling} styling\n */\n\n/**\n * A custom Source class handling Vector Sources.\n *\n * Let you set the loading loadingStrategy, if a proxy is used and you should specify in which format it comes in.\n *\n * **IMPORTANT:** You can't set the projection of the source! This is **always** determined by the data received. If you\n * set projection here you force the source to assume that this is the projection of the view.\n *\n * This class defines a custom loader function which makes it possible to use different loading strategies.\n */\nexport class SourceServerVector extends ol.source.Vector {\n  /**\n   * @param {SourceServerVectorOptions} [options={}]\n   */\n  constructor (options = {}) {\n    const parentOptions = copy(options)\n\n    let urlTemplate = take(options, 'url')\n\n    const type = take(options, 'type') || ''\n\n    parentOptions.loader = (...args) => this.loader(...args)\n\n    const loadingStrategy = options.loadingStrategy || 'ALL'\n\n    if (loadingStrategy === 'BBOX') {\n      let bboxRatio = options.bboxRatio || 1\n\n      if (bboxRatio < 1) {\n        throw new Error('The bboxRatio should not be smaller than 1')\n      }\n\n      let lastScaledExtent = [0, 0, 0, 0]\n\n      parentOptions.strategy = (extent) => {\n        if (ol.extent.containsExtent(lastScaledExtent, extent)) {\n          return [extent]\n        } else {\n          let deltaX = ((extent[2] - extent[0]) / 2) * (bboxRatio - 1)\n          let deltaY = ((extent[3] - extent[1]) / 2) * (bboxRatio - 1)\n\n          lastScaledExtent = [\n            extent[0] - deltaX,\n            extent[1] - deltaY,\n            extent[2] + deltaX,\n            extent[3] + deltaY\n          ]\n\n          return [lastScaledExtent]\n        }\n      }\n    } else {\n      parentOptions.strategy = ol.loadingstrategy.all\n    }\n\n    super(parentOptions)\n\n    /**\n     * @type {L10N}\n     * @private\n     */\n    this.localiser_ = options.localiser\n\n    this.localised_ = options.localised || false\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.loadingStrategy_ = loadingStrategy\n\n    /**\n     * @type {URL}\n     * @protected\n     */\n    this.urlTemplate = urlTemplate\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.type_ = type\n\n    let formatOptions = {}\n\n    if (options.hasOwnProperty('defaultStyle')) {\n      formatOptions.defaultStyle = options.defaultStyle\n    }\n\n    if (options.hasOwnProperty('extractStyles')) {\n      formatOptions.extractStyles = options.extractStyles\n    }\n\n    switch (this.type_) {\n      case 'KML':\n        formatOptions.showPointNames = false\n        this.format_ = new ol.format.KML(formatOptions)\n        this.dataType_ = 'text xml' // for $.ajax (GET-request)\n        break\n      case 'GeoJSON':\n        this.format_ = new ol.format.GeoJSON(formatOptions)\n        this.dataType_ = 'text json' // for $.ajax (GET-request)\n        break\n      default:\n        throw new Error(`${this.type_} is not supported by SourceServerVector!`)\n    }\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.refresh_ = 0\n\n    if (options.hasOwnProperty('refresh')) {\n      this.setRefresh(options.refresh)\n    }\n\n    this.refreshTimeoutId_ = null\n\n    /**\n     * indicates if the source needs to be emptied\n     * @type {boolean}\n     * @private\n     */\n    this.doClear_ = false\n\n    /**\n     * @type {ol.ProjectionLike}\n     * @private\n     */\n    this.bboxProjection_ = options.bboxProjection\n  }\n\n  /**\n   * This method returns a promise which is triggered after the loader successfully loaded a source.\n   * @param {ol.Extent} extent\n   * @param {number} resolution\n   * @param {ol.ProjectionLike} projection\n   */\n  loader (extent, resolution, projection) {\n    // Problem with BBOX: if features are already in the layer, they shouldn't be added. Not trivial\n\n    let url = this.urlTemplate.clone()\n\n    if (this.loadingStrategy_ === 'BBOX') {\n      let transformedExtent = ol.proj.transformExtent(extent, projection, this.bboxProjection_)\n\n      url.expandTemplate('bboxleft', transformedExtent[0].toString())\n        .expandTemplate('bboxbottom', transformedExtent[1].toString())\n        .expandTemplate('bboxright', transformedExtent[2].toString())\n        .expandTemplate('bboxtop', transformedExtent[3].toString())\n        .expandTemplate('resolution', resolution.toString(), false)\n    }\n\n    if (this.refresh_) {\n      if (this.refreshTimeoutId_) {\n        clearTimeout(this.refreshTimeoutId_)\n      }\n      this.refreshTimeoutId_ = setTimeout(() => {\n        this.doClear_ = true // clears the source\n        this.loader(extent, resolution, projection) // calls the loader recursively\n      }, this.refresh_)\n    }\n\n    if (this.localised_) {\n      url.cache = false\n    }\n\n    let finalUrl = url.finalize()\n\n    $.ajax({\n      url: finalUrl,\n      dataType: this.dataType_,\n      beforeSend: () => this.dispatchEvent('vectorloadstart'),\n      success: (response) => {\n        // processing urls in the xml-Data (e.g. for images)\n        if (url.useProxy && /xml$/.test(this.dataType_)) {\n          response = this.addProxyToHrefTags(response)\n        }\n\n        if (this.doClear_) {\n          this.clear()\n          this.doClear_ = false\n        }\n\n        let features = this.format_.readFeatures(response, { featureProjection: projection })\n\n        this.addFeatures(features)\n\n        this.dispatchEvent('vectorloadend')\n      },\n      error: () => {\n        Debug.error(`Getting Feature resource failed with url ${finalUrl}`)\n        this.dispatchEvent('vectorloaderror')\n      },\n      headers: this.localiser_ ? {\n        'Accept-Language': this.localiser_.getCurrentLang()\n      } : {}\n    })\n  }\n\n  /**\n   * This sets the refresh rate. A value of 0 or smaller turns refresh off.\n   * @param {number} refresh\n   */\n  setRefresh (refresh) {\n    this.refresh_ = (refresh > 0) ? refresh : 0\n  }\n\n  /**\n   * makes all urls in href-tags inside of a xmlDocument use the proxy address.\n   * this function needs to extended with all Tags which could contain urls\n   * @param {HTMLElement} text an xml-Document\n   * @returns {HTMLElement} the xmlDocument\n   */\n  addProxyToHrefTags (text) {\n    let hrefTags = text.getElementsByTagName('href') // not working in IE11\n\n    let i, ii\n    for (i = 0, ii = hrefTags.length; i < ii; i++) {\n      if (hrefTags[i].textContent) {\n        hrefTags[i].textContent = this.urlTemplate.useProxyFor(hrefTags[i].textContent.trim()).finalize()\n      } else if (hrefTags[i].innerHTML) {\n        hrefTags[i].innerHTML = this.urlTemplate.useProxyFor(hrefTags[i].innerHTML.trim()).finalize()\n      } else {\n        throw new Error(\"Can't prepend proxy inside KML (textContent and innerHTML missing)\")\n      }\n    }\n\n    return text\n  }\n\n  /**\n   * @returns {URL}\n   */\n  getUrlTemplate () {\n    return this.urlTemplate\n  }\n\n  /**\n   * @param {URL} urlTemplate\n   */\n  setUrlTemplate (urlTemplate) {\n    this.urlTemplate = urlTemplate\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/sources/SourceServerVector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 930,
    "kind": "typedef",
    "name": "SourceServerVectorOptions",
    "memberof": "src/sources/SourceServerVector.js",
    "static": true,
    "longname": "src/sources/SourceServerVector.js~SourceServerVectorOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the format to use"
      },
      {
        "nullable": null,
        "types": [
          "URLLike"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "StyleLike"
        ],
        "spread": false,
        "optional": true,
        "name": "defaultStyle",
        "description": "a default style to fallback to"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "extractStyles",
        "description": "if styles should get extracted from the KML"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'ALL'",
        "defaultRaw": "'ALL'",
        "name": "loadingStrategy",
        "description": "Either 'BBOX' or 'ALL' (Synonym: 'FIXED').\n   If BBOX the given url has to contain the parameters {bboxleft}, {bboxbottom}, {bboxright}, {bboxtop}."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "bboxRatio",
        "description": "If set the bbox loading strategy will increase the load extent by this factor"
      },
      {
        "nullable": null,
        "types": [
          "ol.ProjectionLike"
        ],
        "spread": false,
        "optional": true,
        "name": "bboxProjection",
        "description": "coordinates will be inserted into the url in this format. defaults to\n   the interfaceProjection"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "",
        "defaultRaw": "",
        "name": "cache",
        "description": "true, false for dataType 'script' and 'jsonp'"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "refresh",
        "description": "if set the layer will refresh itself in the specified time (in ms)"
      },
      {
        "nullable": null,
        "types": [
          "L10N"
        ],
        "spread": false,
        "optional": false,
        "name": "localiser",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "localised",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Styling"
        ],
        "spread": false,
        "optional": false,
        "name": "styling",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "olx.source.VectorOptions"
      ],
      "optional": false,
      "name": "SourceServerVectorOptions"
    }
  },
  {
    "__docId__": 931,
    "kind": "class",
    "name": "SourceServerVector",
    "memberof": "src/sources/SourceServerVector.js",
    "static": true,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/sources/SourceServerVector.js",
    "importStyle": "{SourceServerVector}",
    "description": "A custom Source class handling Vector Sources.\n\nLet you set the loading loadingStrategy, if a proxy is used and you should specify in which format it comes in.\n\n**IMPORTANT:** You can't set the projection of the source! This is **always** determined by the data received. If you\nset projection here you force the source to assume that this is the projection of the view.\n\nThis class defines a custom loader function which makes it possible to use different loading strategies.",
    "lineNumber": 35,
    "interface": false,
    "extends": [
      "openlayers~ol.source.Vector"
    ]
  },
  {
    "__docId__": 932,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "SourceServerVectorOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 933,
    "kind": "member",
    "name": "localiser_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#localiser_",
    "access": "private",
    "description": "",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "L10N"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 934,
    "kind": "member",
    "name": "localised_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#localised_",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 935,
    "kind": "member",
    "name": "loadingStrategy_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#loadingStrategy_",
    "access": "private",
    "description": "",
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 936,
    "kind": "member",
    "name": "urlTemplate",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#urlTemplate",
    "access": "protected",
    "description": "",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "URL"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 937,
    "kind": "member",
    "name": "type_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#type_",
    "access": "private",
    "description": "",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 938,
    "kind": "member",
    "name": "format_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#format_",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 939,
    "kind": "member",
    "name": "dataType_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#dataType_",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 942,
    "kind": "member",
    "name": "refresh_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#refresh_",
    "access": "private",
    "description": "",
    "lineNumber": 136,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 943,
    "kind": "member",
    "name": "refreshTimeoutId_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#refreshTimeoutId_",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 944,
    "kind": "member",
    "name": "doClear_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#doClear_",
    "access": "private",
    "description": "indicates if the source needs to be emptied",
    "lineNumber": 149,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 945,
    "kind": "member",
    "name": "bboxProjection_",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#bboxProjection_",
    "access": "private",
    "description": "",
    "lineNumber": 155,
    "type": {
      "nullable": null,
      "types": [
        "ol.ProjectionLike"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 946,
    "kind": "method",
    "name": "loader",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#loader",
    "access": "public",
    "description": "This method returns a promise which is triggered after the loader successfully loaded a source.",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.Extent"
        ],
        "spread": false,
        "optional": false,
        "name": "extent",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "resolution",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ol.ProjectionLike"
        ],
        "spread": false,
        "optional": false,
        "name": "projection",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 950,
    "kind": "method",
    "name": "setRefresh",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#setRefresh",
    "access": "public",
    "description": "This sets the refresh rate. A value of 0 or smaller turns refresh off.",
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "refresh",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 952,
    "kind": "method",
    "name": "addProxyToHrefTags",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#addProxyToHrefTags",
    "access": "public",
    "description": "makes all urls in href-tags inside of a xmlDocument use the proxy address.\nthis function needs to extended with all Tags which could contain urls",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HTMLElement} the xmlDocument"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "an xml-Document"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": "the xmlDocument"
    }
  },
  {
    "__docId__": 953,
    "kind": "method",
    "name": "getUrlTemplate",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#getUrlTemplate",
    "access": "public",
    "description": "",
    "lineNumber": 260,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{URL}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "URL"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 954,
    "kind": "method",
    "name": "setUrlTemplate",
    "memberof": "src/sources/SourceServerVector.js~SourceServerVector",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/sources/SourceServerVector.js~SourceServerVector#setUrlTemplate",
    "access": "public",
    "description": "",
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "urlTemplate",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 956,
    "kind": "file",
    "name": "src/Styling.js",
    "content": "import ol from 'openlayers'\nimport $ from 'jquery'\n\nimport { copyDeep, copy } from './utilitiesObject'\nimport { checkFor } from './utilities'\nimport { Debug } from './Debug'\n\nimport { parseCSSColor } from 'csscolorparser'\n\n/**\n * @typedef {string|StyleObject|ol.style.Style} StyleLike\n */\n\n/**\n * @typedef {Object} StyleObject\n */\n\n/**\n * merges two style configs\n * @param {StyleObject} configTarget\n * @param {StyleObject} configSource\n * @returns {StyleObject}\n */\nfunction mergeStyleConfigs (configTarget, configSource) {\n  let mergedConf = copyDeep(configTarget)\n  if (configSource) {\n    for (let k of Object.keys(configSource)) {\n      let sourceProp = configSource[k]\n\n      if (configTarget.hasOwnProperty(k)) {\n        let targetProp = configTarget[k]\n\n        if (typeof targetProp === 'object' && !(targetProp instanceof Array)) {\n          // if it is another object, merge recursively\n          let targetProp = configTarget[k]\n\n          if (targetProp.hasOwnProperty('type')) {\n            if (sourceProp.hasOwnProperty('type')) {\n              if (configTarget[k].type === sourceProp.type) {\n                mergedConf[k] = mergeStyleConfigs(targetProp, sourceProp)\n              }\n            }\n          } else {\n            mergedConf[k] = mergeStyleConfigs(targetProp, sourceProp)\n          }\n        }\n      } else {\n        // copy over if it doesn't exist in the target\n        if (typeof sourceProp === 'object' && !(sourceProp instanceof Array)) {\n          mergedConf[k] = copyDeep(sourceProp)\n        } else {\n          mergedConf[k] = sourceProp\n        }\n      }\n    }\n  }\n  return mergedConf\n}\n\n/**\n * This class coordinates the styling.\n */\nexport class Styling {\n  /**\n   * @param {Object} [options]\n   * @param {Object} [options.styleConfigMap]\n   * @param {number} [options.globalIconScale]\n   * @param {boolean} [options.manageStyles=true]\n   */\n  constructor (options = {}) {\n    /**\n     * @type {Map.<string,StyleObject>}\n     * @private\n     */\n    this.styleConfigMap_ = new Map()\n\n    if (!this.styleConfigMap_.has('#defaultStyle')) {\n      // FallbackStyle\n      this.styleConfigMap_.set('#defaultStyle', {\n        'stroke': {\n          'color': 'rgba(0,0,0,0.9)',\n          'width': 2\n        },\n        'fill': {\n          'color': 'rgba(0,0,0,0.3)'\n        },\n        'image': {\n          'type': 'circle',\n          'stroke': {\n            'color': 'rgba(0,0,0,0.9)',\n            'width': 2\n          },\n          'fill': {\n            'color': 'rgba(0,0,0,0.3)'\n          }\n        }\n      })\n    }\n\n    if (options.styleConfigMap) {\n      for (let k of Object.keys(options.styleConfigMap)) {\n        this.styleConfigMap_.set(k, options.styleConfigMap[k])\n      }\n    }\n\n    /**\n     * @type {Map.<string,ol.style.Style>}\n     * @private\n     */\n    this.styleMap_ = new Map()\n\n    /**\n     * @type {Set.<ol.style.Style>}\n     * @private\n     */\n    this.allStyles_ = new Set()\n\n    if (options.globalIconScale) {\n      this.setGlobalIconScale(options.globalIconScale)\n    }\n\n    let _this = this\n\n    /**\n     * @param resolution\n     * @returns {*}\n     * @private\n     */\n    this.managingFeatureStyle_ = function (resolution) {\n      let style = this.get('managedStyle')\n      if ($.isFunction(style)) {\n        style = style.call(this, resolution)\n      }\n      if (!style) {\n        style = _this.getStyle('#defaultStyle')\n      }\n      if ($.isArray(style)) {\n        return style.map(s => _this.adjustStyle_(this, s))\n      } else {\n        return _this.adjustStyle_(this, style)\n      }\n    }\n\n    this.nullStyle_ = new ol.style.Style({\n      image: null\n    })\n\n    this.manageStyles_ = options.manageStyles !== false\n  }\n\n  /**\n   * @param {number} scale\n   */\n  setGlobalIconScale (scale) {\n    /**\n     * @type {number}\n     * @private\n     */\n    this.globalIconScale_ = scale\n  }\n\n  /**\n   * @returns {number}\n   */\n  getGlobalIconScale () {\n    return this.globalIconScale_ || 1\n  }\n\n  /**\n   * @param {StyleObject} styleConf\n   * @returns {ol.style.Style}\n   */\n  getStyleFromConfig (styleConf) {\n    let filledStyleConf = mergeStyleConfigs(styleConf, this.styleConfigMap_.get('#default'))\n\n    function addFillsAndStrokes (subStyleConf) {\n      subStyleConf = subStyleConf || {}\n      let preparedOptions = copy(subStyleConf)\n\n      if (checkFor(subStyleConf, 'fill')) {\n        preparedOptions.fill = new ol.style.Fill(mergeStyleConfigs(subStyleConf.fill, filledStyleConf.fill))\n      } else {\n        preparedOptions.fill = new ol.style.Fill(filledStyleConf.fill)\n      }\n\n      if (checkFor(subStyleConf, 'stroke')) {\n        preparedOptions.stroke = new ol.style.Stroke(mergeStyleConfigs(subStyleConf.stroke, filledStyleConf.stroke))\n      } else {\n        preparedOptions.stroke = new ol.style.Stroke(filledStyleConf.stroke)\n      }\n\n      return preparedOptions\n    }\n\n    let styleOptions = addFillsAndStrokes(filledStyleConf)\n\n    styleOptions.text = new ol.style.Text(addFillsAndStrokes(filledStyleConf.text))\n\n    let scalable = false\n\n    if (filledStyleConf.hasOwnProperty('image')) {\n      if (filledStyleConf.image.type === 'icon' &&\n        (filledStyleConf.image.hasOwnProperty('src')) && filledStyleConf.image.src) {\n        styleOptions.image = new ol.style.Icon(filledStyleConf.image)\n        scalable = true\n      } else if (filledStyleConf.image.type === 'circle') {\n        styleOptions.image = new ol.style.Circle(addFillsAndStrokes(filledStyleConf.image))\n        scalable = true\n      } else if (filledStyleConf.image.type === 'regularShape') {\n        styleOptions.image = new ol.style.RegularShape(addFillsAndStrokes(filledStyleConf.image))\n        scalable = true\n      }\n\n      if (scalable) {\n        styleOptions.image.setScale((styleOptions.image.getScale() || 1) * this.getGlobalIconScale())\n      }\n    }\n\n    return new ol.style.Style(styleOptions)\n  }\n\n  getConfigFromStyle (style) {\n    throw new Error('Not implemented yet')\n  }\n\n  /**\n   * @param {string} id\n   * @returns {ol.style.Style}\n   */\n  getStyleById (id) {\n    if (!this.styleMap_.has(id)) {\n      if (this.styleConfigMap_.has(id)) {\n        this.styleMap_.set(id, this.getStyleFromConfig(this.getConfigById(id)))\n      } else {\n        Debug.error('No style found for id ' + id + '. Using default style.')\n        return this.styleMap_.get('#defaultStyle')\n      }\n    }\n    return this.styleMap_.get(id)\n  }\n\n  /**\n   * @param {string} id\n   * @returns {StyleObject}\n   */\n  getConfigById (id) {\n    if (this.styleConfigMap_.has(id)) {\n      return this.styleConfigMap_.get(id)\n    } else {\n      Debug.error('No style config found for id ' + id + '. Using default style.')\n      return this.styleConfigMap_.get('#defaultStyle')\n    }\n  }\n\n  /**\n   * @param {StyleLike} data\n   * @returns {ol.style.Style}\n   */\n  getStyle (data) {\n    if (data === undefined) {\n      return this.getStyleById('#defaultStyle')\n    } else if (data instanceof ol.style.Style || $.isFunction(data)) {\n      return data\n    } else if (typeof data === 'object') {\n      return this.getStyleFromConfig(data)\n    } else {\n      return this.getStyleById(data)\n    }\n  }\n\n  /**\n   * converts ol.StyleFunction to ol.FeatureStyleFunction\n   * @param {ol.style.StyleFunction} styleFunction\n   * @returns {ol.FeatureStyleFunction}\n   */\n  convertStyleFunction (styleFunction) {\n    return function (resolution) { return styleFunction(this, resolution) }\n  }\n\n  /**\n   * This internal method is called to adjust each style to current global and feature settings\n   * @param feature\n   * @param style\n   * @returns {ol.style.Style}\n   * @private\n   */\n  adjustStyle_ (feature, style) {\n    if (!feature.get('hidden')) {\n      let clone = style.clone()\n      this.scaleStyle_(clone)\n      if (feature.get('opacity') !== undefined) {\n        this.changeColorOpacity_(clone, feature.get('opacity'))\n      }\n      return clone\n    } else {\n      return this.nullStyle_\n    }\n  }\n\n  /**\n   * This method adjusts the scale of a style\n   * @param style\n   * @private\n   */\n  scaleStyle_ (style) {\n    let image = style.getImage()\n    if (image) {\n      let origScale = style.getImage().getScale() || 1\n      image.setScale(origScale * this.getGlobalIconScale())\n    }\n  }\n\n  /**\n   * adjust the styles opacity by a given value\n   * @param {ol.style.Style} style\n   * @param {number} opacity between 0 and 1\n   * @returns {ol.style.Style}\n   */\n  changeColorOpacity_ (style, opacity) {\n    let adjustColor = (style, opacity) => {\n      let color = style.getColor()\n      if (color !== null) {\n        if (!(color instanceof Array)) {\n          if (typeof color === 'string') {\n            color = parseCSSColor(color)\n          } else {\n            throw new Error('Type not supported')\n          }\n        }\n\n        color[3] = color[3] * opacity\n      }\n      style.setColor(color)\n    }\n\n    if (style.getImage()) {\n      style.getImage().setOpacity(opacity)\n    }\n    if (style.getFill()) {\n      adjustColor(style.getFill(), opacity)\n    }\n    if (style.getStroke()) {\n      adjustColor(style.getStroke(), opacity)\n    }\n    if (style.getText()) {\n      if (style.getText().getFill()) {\n        adjustColor(style.getText().getFill(), opacity)\n      }\n      if (style.getText().getStroke()) {\n        adjustColor(style.getText().getStroke(), opacity)\n      }\n    }\n  }\n\n  manageFeature (feature) {\n    if (this.manageStyles_) {\n      let style = feature.getStyle()\n      if (style && !feature.get('managedStyle')) {\n        feature.set('managedStyle', style)\n        feature.setStyle(this.managingFeatureStyle_)\n      }\n    }\n  }\n\n  manageFeatureCollection (collection) {\n    if (this.manageStyles_) {\n      collection.forEach(feature => {\n        this.manageFeature(feature)\n      })\n\n      collection.on('add', e => {\n        this.manageFeature(e.element)\n      })\n    }\n  }\n\n  manageLayer (layer) {\n    if (this.manageStyles_) {\n      let style = layer.getStyle()\n\n      if (style && !layer.get('managedStyle')) {\n        layer.set('managedStyle', layer.getStyle())\n\n        layer.setStyle((feature, resolution) => {\n          let style = layer.get('managedStyle')\n          if ($.isFunction(style)) {\n            style = style.call(feature, resolution)\n          }\n          if (!style) {\n            style = this.getStyle('#defaultStyle')\n          }\n          if ($.isArray(style)) {\n            return style.map(s => this.adjustStyle_(feature, s))\n          } else {\n            return this.adjustStyle_(feature, style)\n          }\n        })\n      }\n\n      layer.getSource().getFeatures().forEach(feature => {\n        this.manageFeature(feature)\n      })\n\n      layer.getSource().on('addfeature', e => {\n        this.manageFeature(e.feature)\n      })\n    }\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/Styling.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 957,
    "kind": "typedef",
    "name": "StyleLike",
    "memberof": "src/Styling.js",
    "static": true,
    "longname": "src/Styling.js~StyleLike",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "string",
        "StyleObject",
        "ol.style.Style"
      ],
      "optional": false,
      "name": "StyleLike"
    }
  },
  {
    "__docId__": 958,
    "kind": "typedef",
    "name": "StyleObject",
    "memberof": "src/Styling.js",
    "static": true,
    "longname": "src/Styling.js~StyleObject",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StyleObject"
    }
  },
  {
    "__docId__": 959,
    "kind": "function",
    "name": "mergeStyleConfigs",
    "memberof": "src/Styling.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Styling.js~mergeStyleConfigs",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/Styling.js",
    "importStyle": null,
    "description": "merges two style configs",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{StyleObject}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "StyleObject"
        ],
        "spread": false,
        "optional": false,
        "name": "configTarget",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "StyleObject"
        ],
        "spread": false,
        "optional": false,
        "name": "configSource",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StyleObject"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 960,
    "kind": "class",
    "name": "Styling",
    "memberof": "src/Styling.js",
    "static": true,
    "longname": "src/Styling.js~Styling",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/Styling.js",
    "importStyle": "{Styling}",
    "description": "This class coordinates the styling.",
    "lineNumber": 63,
    "interface": false
  },
  {
    "__docId__": 961,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.styleConfigMap",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.globalIconScale",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.manageStyles",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 962,
    "kind": "member",
    "name": "styleConfigMap_",
    "memberof": "src/Styling.js~Styling",
    "static": false,
    "longname": "src/Styling.js~Styling#styleConfigMap_",
    "access": "private",
    "description": "",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "Map.<string,StyleObject>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 963,
    "kind": "member",
    "name": "styleMap_",
    "memberof": "src/Styling.js~Styling",
    "static": false,
    "longname": "src/Styling.js~Styling#styleMap_",
    "access": "private",
    "description": "",
    "lineNumber": 110,
    "type": {
      "nullable": null,
      "types": [
        "Map.<string,ol.style.Style>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 964,
    "kind": "member",
    "name": "allStyles_",
    "memberof": "src/Styling.js~Styling",
    "static": false,
    "longname": "src/Styling.js~Styling#allStyles_",
    "access": "private",
    "description": "",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "Set.<ol.style.Style>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 965,
    "kind": "member",
    "name": "nullStyle_",
    "memberof": "src/Styling.js~Styling",
    "static": false,
    "longname": "src/Styling.js~Styling#nullStyle_",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 966,
    "kind": "member",
    "name": "manageStyles_",
    "memberof": "src/Styling.js~Styling",
    "static": false,
    "longname": "src/Styling.js~Styling#manageStyles_",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 967,
    "kind": "method",
    "name": "setGlobalIconScale",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#setGlobalIconScale",
    "access": "public",
    "description": "",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 968,
    "kind": "member",
    "name": "globalIconScale_",
    "memberof": "src/Styling.js~Styling",
    "static": false,
    "longname": "src/Styling.js~Styling#globalIconScale_",
    "access": "private",
    "description": "",
    "lineNumber": 159,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 969,
    "kind": "method",
    "name": "getGlobalIconScale",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#getGlobalIconScale",
    "access": "public",
    "description": "",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 970,
    "kind": "method",
    "name": "getStyleFromConfig",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#getStyleFromConfig",
    "access": "public",
    "description": "",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.style.Style}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "StyleObject"
        ],
        "spread": false,
        "optional": false,
        "name": "styleConf",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.style.Style"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 971,
    "kind": "method",
    "name": "getConfigFromStyle",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#getConfigFromStyle",
    "access": "public",
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "params": [
      {
        "name": "style",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 972,
    "kind": "method",
    "name": "getStyleById",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#getStyleById",
    "access": "public",
    "description": "",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.style.Style}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.style.Style"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 973,
    "kind": "method",
    "name": "getConfigById",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#getConfigById",
    "access": "public",
    "description": "",
    "lineNumber": 246,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{StyleObject}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StyleObject"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 974,
    "kind": "method",
    "name": "getStyle",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#getStyle",
    "access": "public",
    "description": "",
    "lineNumber": 259,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.style.Style}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "StyleLike"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.style.Style"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 975,
    "kind": "method",
    "name": "convertStyleFunction",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#convertStyleFunction",
    "access": "public",
    "description": "converts ol.StyleFunction to ol.FeatureStyleFunction",
    "lineNumber": 276,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.FeatureStyleFunction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.style.StyleFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "styleFunction",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.FeatureStyleFunction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 976,
    "kind": "method",
    "name": "adjustStyle_",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#adjustStyle_",
    "access": "private",
    "description": "This internal method is called to adjust each style to current global and feature settings",
    "lineNumber": 287,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.style.Style}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.style.Style"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 977,
    "kind": "method",
    "name": "scaleStyle_",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#scaleStyle_",
    "access": "private",
    "description": "This method adjusts the scale of a style",
    "lineNumber": 305,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 978,
    "kind": "method",
    "name": "changeColorOpacity_",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#changeColorOpacity_",
    "access": "public",
    "description": "adjust the styles opacity by a given value",
    "lineNumber": 319,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ol.style.Style}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ol.style.Style"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "opacity",
        "description": "between 0 and 1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ol.style.Style"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 979,
    "kind": "method",
    "name": "manageFeature",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#manageFeature",
    "access": "public",
    "description": null,
    "lineNumber": 355,
    "undocument": true,
    "params": [
      {
        "name": "feature",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 980,
    "kind": "method",
    "name": "manageFeatureCollection",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#manageFeatureCollection",
    "access": "public",
    "description": null,
    "lineNumber": 365,
    "undocument": true,
    "params": [
      {
        "name": "collection",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 981,
    "kind": "method",
    "name": "manageLayer",
    "memberof": "src/Styling.js~Styling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Styling.js~Styling#manageLayer",
    "access": "public",
    "description": null,
    "lineNumber": 377,
    "undocument": true,
    "params": [
      {
        "name": "layer",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 982,
    "kind": "file",
    "name": "src/URLHelper.js",
    "content": "import $ from 'jquery'\nimport { Debug } from './Debug'\n\n/**\n * @typedef {object} URLConfig\n * @property {Localizable} url\n * @property {boolean} [useProxy]\n * @property {string} [proxy]\n * @property {boolean} [cache=true]\n * @property {string} [username] only implemented for wms at the moment\n * @property {string} [password] only implemented for wms at the moment\n */\n\n/**\n * @typedef {URLConfig|Localizable|URL} URLLike\n */\n\nexport class URL {\n  /**\n   * @param {URLLike} urlLike\n   * @param {G4UMap|null} map\n   */\n  constructor (urlLike, map) {\n    if ($.type(urlLike) === 'string' || !urlLike.hasOwnProperty('url')) {\n      /**\n       * @type {string}\n       */\n      this.url = urlLike\n      /**\n       * @type {boolean}\n       */\n      this.useProxy = false\n      /**\n       * @type {boolean}\n       */\n      this.cache = true\n      this.params = []\n      this.expand = []\n    } else {\n      /**\n       * @type {Localizable}\n       */\n      this.url = urlLike.url\n      /**\n       * @type {boolean}\n       */\n      this.useProxy = urlLike.useProxy\n      /**\n       * @type {string}\n       */\n      this.proxy = urlLike.proxy\n      /**\n       * @type {boolean}\n       */\n      this.cache = urlLike.cache === undefined ? true : urlLike.cache\n      /**\n       * @type {string}\n       */\n      this.username = urlLike.username\n      /**\n       * @type {string}\n       */\n      this.password = urlLike.password\n      if (urlLike.params) {\n        this.params = urlLike.params.slice(0)\n      } else {\n        this.params = []\n      }\n      if (urlLike.expand) {\n        this.expand = urlLike.expand.slice(0)\n      } else {\n        this.expand = []\n      }\n\n      /**\n       * @type {string}\n       */\n      this.globalProxy = urlLike.globalProxy\n      /**\n       * {L10N}\n       */\n      this.localiser = urlLike.localiser\n    }\n\n    if (map) {\n      this.extractParamsFromMap(map)\n    }\n  }\n\n  /**\n   * @param {G4UMap} map\n   */\n  extractParamsFromMap (map) {\n    /**\n     * @type {string}\n     */\n    this.globalProxy = this.globalProxy || map.get('proxy')\n    /**\n     * {L10N}\n     */\n    this.localiser = this.localiser || map.get('localiser')\n  }\n\n  /**\n   * @param {object} config\n   * @param {string} paramName\n   * @param {string} [defaultValue]\n   * @param {G4UMap} [map]\n   * @returns {URL}\n   */\n  static extractFromConfig (config, paramName, defaultValue, map) {\n    if (!config.hasOwnProperty(paramName)) {\n      return null\n    }\n    if (config.hasOwnProperty('useProxy') || config.hasOwnProperty('proxy') || config.hasOwnProperty('cache')) {\n      Debug.warn('Using the parameters \\'useProxy\\' \\'proxy\\' \\'cache\\' directly inside a config object is considered' +\n        ' deprecated. Please use a URLConfig object')\n      return new URL({\n        url: config[paramName] || defaultValue,\n        useProxy: config.useProxy,\n        proxy: config.proxy,\n        cache: config.cache\n      }, map)\n    } else if ($.isPlainObject(config[paramName]) && !config[paramName].hasOwnProperty('url')) {\n      Debug.warn('The url config object is missing an \"url\" parameter. The software is assuming the' +\n        ' parameter is a Localizable.')\n      return new URL({\n        url: config[paramName]\n      }, map)\n    } else {\n      return new URL(config[paramName], map)\n    }\n  }\n\n  /**\n   * @returns {URL}\n   */\n  clone () {\n    return new URL(this)\n  }\n\n  /**\n   * @returns {string}\n   */\n  finalize () {\n    let url = this\n    if (!this.cache) {\n      url = this.clone().addParam(Math.random().toString(36).substring(7))\n    }\n\n    let urlAsString = this.localiser ? this.localiser.selectL10N(url.url) : url.url\n\n    if (url.params.length) {\n      if (urlAsString.search(/\\?/) === -1) {\n        urlAsString += '?'\n      } else {\n        urlAsString += '&'\n      }\n      urlAsString += url.params.join('&')\n    }\n\n    for (let expand of url.expand) {\n      urlAsString = URL.expandTemplate_(urlAsString, expand)\n    }\n\n    if (url.useProxy === true || (url.useProxy === undefined && !!url.proxy)) {\n      let proxy = url.proxy || this.globalProxy\n      if (!proxy) {\n        throw new Error('No proxy configured. Either configure a local or global proxy if you want to use the option' +\n          ' useProxy.')\n      }\n\n      return URL.expandTemplate_(proxy,\n        { paramName: 'url', paramValue: URL.encodeTemplate_(urlAsString), required: true })\n    } else {\n      return urlAsString\n    }\n  }\n\n  /*\n * this function will add an parameter to the url\n * @param {string} param\n * @returns {URL)\n */\n  addParam (param) {\n    this.params.push(param)\n    return this\n  }\n\n  /**\n   * replaces a param enclosed in {} in a (url) template with a value. If the value is an array it will take any string\n   * not containing a '}' after the paramName to join the array, default ','.\n   * @param {string} template an (url) template\n   * @param {object} expand\n   * @param {string} expand.paramName the parameter that will be replaced (given without {}) f.e. 'example' will\n   *    replace any occurancy of '{example}' (after the word 'example' there might be given a string join an\n   *    array value i.e. '{example+}')\n   * @param {string|string[]|number} expand.paramValue the value(s) which will be inserted\n   * @param {boolean} expand.required\n   * @returns {string} the expanded string\n   */\n  static expandTemplate_ (template, expand) {\n    let regexp = new RegExp('{' + expand.paramName + '([^}]*)}')\n    let match = template.match(regexp)\n    if (match) {\n      if ($.type(expand.paramValue) === 'string') {\n        return template.replace(regexp, expand.paramValue)\n      } else if ($.type(expand.paramValue) === 'array') {\n        let joinString = match[1] || ','\n        return template.replace(regexp, expand.paramValue.join(joinString))\n      } else if ($.type(expand.paramValue) === 'number') {\n        let valReg = new RegExp('(?::|,)([^,])', 'g')\n        let nextMatch = valReg.exec(match[1])\n        for (let i = 0; i < expand.paramValue; i++) {\n          nextMatch = valReg.exec(match[1])\n        }\n        return template.replace(regexp, nextMatch[1])\n      }\n    } else if (expand.required) {\n      throw new Error('required parameter ' + expand.paramName + ' (enclosed in {}) not found in string ' + template)\n    } else {\n      return template\n    }\n  }\n\n  /**\n   * expand the target template. automatically encodes the value\n   * @param {string} paramName\n   * @param paramValue\n   * @param {boolean} [required=true]\n   * @returns {URL}\n   */\n  expandTemplate (paramName, paramValue, required = true) {\n    let index = this.expand.findIndex(e => e.paramName === paramName)\n    if (index >= 0) {\n      this.expand.splice(index, 1)\n    }\n    let encode = val => {\n      if ($.type(val) === 'string') {\n        return encodeURIComponent(val)\n      } else if ($.type(paramValue) === 'array') {\n        return val.map(v => encode(v))\n      } else {\n        return val\n      }\n    }\n    paramValue = encode(paramValue)\n    this.expand.push({ paramName, paramValue, required })\n    return this\n  }\n\n  /**\n   * @param {string} otherUrl\n   * @returns {URL}\n   */\n  useProxyFor (otherUrl) {\n    return new URL({\n      useProxy: this.useProxy,\n      proxy: this.proxy,\n      url: otherUrl\n    })\n  }\n\n  /**\n   * this function takes an (url) template and encodes everything except for the templated elements.\n   * @param {string} template an (url) template\n   * @returns {string} the encoded (url) template\n   */\n  static encodeTemplate_ (template) {\n    let parts = template.split('}')\n\n    let encodedTemplate = ''\n\n    let i\n    for (i = 0; i < parts.length - 1; i += 1) {\n      let partedParts = parts[i].split('{')\n      encodedTemplate += encodeURIComponent(partedParts[0]) + '{' + partedParts[1] + '}'\n    }\n\n    encodedTemplate += encodeURIComponent(parts[i])\n\n    return encodedTemplate\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/URLHelper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 983,
    "kind": "typedef",
    "name": "URLConfig",
    "memberof": "src/URLHelper.js",
    "static": true,
    "longname": "src/URLHelper.js~URLConfig",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Localizable"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "useProxy",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "proxy",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "cache",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "username",
        "description": "only implemented for wms at the moment"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "password",
        "description": "only implemented for wms at the moment"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "URLConfig"
    }
  },
  {
    "__docId__": 984,
    "kind": "typedef",
    "name": "URLLike",
    "memberof": "src/URLHelper.js",
    "static": true,
    "longname": "src/URLHelper.js~URLLike",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "type": {
      "types": [
        "URLConfig",
        "Localizable",
        "URL"
      ],
      "optional": false,
      "name": "URLLike"
    }
  },
  {
    "__docId__": 985,
    "kind": "file",
    "name": "src/utilities.js",
    "content": "/**\n * @module utilities\n * Helper and misc functions\n */\n\nimport $ from 'jquery'\n\nimport 'polyfill!Object.defineProperty'\nimport 'polyfill!Object.getOwnPropertyNames'\nimport 'polyfill!Object.getOwnPropertyDescriptor'\nimport 'polyfill!Object.getPrototypeOf'\n\nimport {Debug} from './Debug'\n\n/**\n * Checks whether an argument can be interpreted as an even integer\n * @param   {Object}  value A value of any type\n * @returns {Boolean} True when value is numeric, parses as an integer (no matter if decimal, octal or sexadecimal)\n */\nexport function even (value) {\n  if ($.isNumeric(value)) {\n    let valueAsInteger = parseInt(value)\n    if ((value === valueAsInteger) && (valueAsInteger % 2 === 0)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Checks whether an argument can be interpreted as an even integer\n * @param   {Object}  value A value of any type\n * @returns {Boolean} True when value is numeric, parses as an integer (no matter if decimal, octal or sexadecimal)\n */\nexport function odd (value) {\n  if ($.isNumeric(value)) {\n    let valueAsInteger = parseInt(value)\n    if ((value === valueAsInteger) && (valueAsInteger % 2 === 1)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Check for a label in a configuration object\n * @param   {Object}  configurationObject a configuration object\n * @param   {String}  label               a label to check for\n * @returns {boolean} true if label present and true, false otherwise\n */\nexport function checkFor (configurationObject, label) {\n  return ((label in configurationObject) && (configurationObject[label]))\n}\n\n/**\n * return argument as object (if it is no object the value is {})\n * @returns {Object}\n */\nexport function asObject (argument) {\n  return (typeof argument === 'object') ? argument : {}\n}\n\n/**\n * Gets the subconfig or an empty object\n * @param {object} config\n * @param {string} name\n * @returns {object}\n */\nexport function getConfig (config, name) {\n  if (config.hasOwnProperty(name) && config[name]) {\n    return asObject(config[name])\n  }\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////// //\n//                      async image load                                                    //\n// //////////////////////////////////////////////////////////////////////////////////////// //\n\n/**\n * @param {HTMLImageElement} image\n * @param {URL} origUrl\n * @param {string} [finalUrl]\n * @returns {Promise}\n */\nexport function asyncImageLoad (image, origUrl, finalUrl) {\n  if (!finalUrl) {\n    finalUrl = origUrl.finalize()\n  }\n  return new Promise((resolve, reject) => {\n    image.addEventListener('load', resolve)\n    image.addEventListener('error', reject)\n    if (!origUrl.username || !origUrl.password) {\n      image.src = finalUrl\n    } else {\n      let xhr = new XMLHttpRequest() // eslint-disable-line no-undef\n      // xhr.open('GET', url, true, username, password)\n      xhr.open('GET', finalUrl, true)\n      xhr.responseType = 'blob'\n      xhr.withCredentials = true\n\n      xhr.setRequestHeader(origUrl.useProxy ? 'X-Proxy-Forward-Authorization' : 'Authorization',\n        'Basic ' + btoa(origUrl.username + ':' + origUrl.password)) // eslint-disable-line no-undef\n\n      xhr.addEventListener('load', function (e) {\n        if (this.status === 200) {\n          let urlCreator = window.URL || window.webkitURL\n          image.src = urlCreator.createObjectURL(this.response)\n        } else {\n          reject(e)\n        }\n      })\n\n      xhr.send()\n    }\n  })\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////// //\n//                      finish all ajax requests then continue                              //\n// //////////////////////////////////////////////////////////////////////////////////////// //\n\n/**\n * finishs loading all images contained in the given jQuery object.\n * @param {jQuery} $object\n * @returns {Promise}\n */\nexport function finishAllImages ($object) {\n  let imagePromises = []\n\n  let $images = recursiveSelect($object, 'img')\n\n  $images.each(function () {\n    let image = this\n\n    if (!image.complete) {\n      imagePromises.push(new Promise(resolve => {\n        $(image).on('load', resolve)\n        $(image).on('error', resolve)\n      }))\n    }\n  })\n\n  return Promise.all(imagePromises)\n}\n\n/**\n * calculates the distance between one and another jQuery element\n * @param {jQuery} $one\n * @param {jQuery} $other\n * @returns {{top: number, left: number}}\n */\nexport function offset ($one, $other) {\n  let oneOff = $one.offset()\n  let otherOff = $other.offset()\n  return { top: oneOff.top - otherOff.top, left: oneOff.left - otherOff.left }\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////////\n//                                   jQuery Extensions                                    //\n// //////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * selects all matching elements and child elements\n * @param {jQuery} $elem\n * @param {string} query\n * @returns {jQuery}\n */\nexport function recursiveSelect ($elem, query) {\n  return $elem.filter(query).add($elem.find(query))\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////// //\n//                                Structural Functions                                      //\n// //////////////////////////////////////////////////////////////////////////////////////// //\n\nexport function showInteractionActivity (map) {\n  Debug.info('superseding interactions:')\n  let k, i\n  let total\n  let amountActive\n\n  for (k in map.supersedingInteractions_) {\n    total = map.supersedingInteractions_[k].length\n    amountActive = 0\n    for (i = 0; i < total; i++) {\n      if (map.supersedingInteractions_[k][i].getActive()) {\n        amountActive += 1\n      }\n    }\n\n    Debug.info('  ' + k + ': total: ' + total + ' active: ' + amountActive)\n  }\n\n  Debug.info('default interactions:')\n\n  for (k in map.defaultInteractions_) {\n    total = map.defaultInteractions_[k].length\n    amountActive = 0\n    for (i = 0; i < total; i++) {\n      if (map.defaultInteractions_[k][i].getActive()) {\n        amountActive += 1\n      }\n    }\n\n    Debug.info('  ' + k + ': total: ' + total + ' active: ' + amountActive)\n  }\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////// //\n//                                     URL Functions                                        //\n// //////////////////////////////////////////////////////////////////////////////////////// //\n\n// the functions are designed to mimic the behaviour of the node path module.\n// differences: dirURLs will end in /'s\n// the are in no way complete and don't claim to be complete\n// NOTE: another way to solve this would be using String.split instead of regular expressions\n\n/**\n * A function that tries to get the dir url of an url\n * @param {string} url\n * @returns {string}\n */\nexport function urlDirname (url) {\n  return url.replace(/\\/([^/]*)(\\?.*)?$/, '/')\n}\n\n/**\n * A function that normalizes a url\n * @param {string} url\n * @returns {string}\n */\nexport function urlNormalize (url) {\n  if (url.match(/^\\.\\//)) {\n    return urlNormalize(url.replace(/^\\.\\//, ''))\n  } else {\n    return url\n  }\n}\n\n/**\n * A function that adds urls\n * @param {string} urlRoot\n * @param {string} urlExt\n * @returns {string}\n */\nexport function urlJoin (urlRoot, urlExt) {\n  let normPathRoot = urlDirname(urlNormalize(urlRoot))\n  let normPathExt = urlNormalize(urlExt)\n\n  let lastPart = /[^/]+\\/$/\n  let leadingDoubleDots = /^\\.\\.\\//\n\n  while (normPathRoot.match(lastPart) && normPathExt.match(leadingDoubleDots)) {\n    normPathRoot = normPathRoot.replace(lastPart, '')\n    normPathExt = normPathExt.replace(leadingDoubleDots, '')\n  }\n\n  return normPathRoot + normPathExt\n}\n\n/**\n * A function that tries to get the relative url between to urles\n * @param {string} source\n * @param {string} target\n * @returns {string}\n */\nexport function urlRelative (source, target) {\n  let sourceNorm = urlDirname(urlNormalize(source))\n  let targetNorm = urlNormalize(target)\n\n  let urlRelative = ''\n\n  let firstPart = /^\\/?((\\/\\/)|[^/])+\\//\n\n  let firstSourcePart\n  let firstTargetPart\n\n  while (sourceNorm.match(firstPart) && targetNorm.match(firstPart)) {\n    firstSourcePart = sourceNorm.match(firstPart)[0]\n    firstTargetPart = targetNorm.match(firstPart)[0]\n\n    if (firstSourcePart.toUpperCase() !== firstTargetPart.toUpperCase()) {\n      break\n    }\n\n    sourceNorm = sourceNorm.replace(firstPart, '')\n    targetNorm = targetNorm.replace(firstPart, '')\n  }\n\n  while (sourceNorm.match(firstPart)) {\n    firstSourcePart = sourceNorm.match(firstPart)[0]\n    sourceNorm = sourceNorm.replace(firstPart, '')\n    urlRelative += '../'\n  }\n\n  return urlRelative + targetNorm\n}\n\n/**\n * @param {string} url\n * @returns {boolean}\n */\nexport function urlIsAbsolute (url) {\n  return !!url.match(/^\\/|.*:\\/\\//)\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////// //\n//                                         Other                                            //\n// //////////////////////////////////////////////////////////////////////////////////////// //\n\nfunction getPropertyNamesAndDescriptions (obj) {\n  let props = {}\n\n  do {\n    Object.getOwnPropertyNames(obj).forEach(function (prop) {\n      if (!props.hasOwnProperty(prop)) {\n        props[prop] = Object.getOwnPropertyDescriptor(obj, prop)\n      }\n    })\n    obj = Object.getPrototypeOf(obj)\n  } while (obj !== Object.prototype)\n\n  return props\n}\n\n/**\n * This creates a new class which inherits from the base class and mixes in every method (except any method named\n * 'initialize') from the mixin class. The mixin class may not overwrite any existing method. If it has a method called\n * 'initialize' this will be remembered and called after the constructor of the base class has finished\n * @param baseClass\n * @param mixinClasses\n * @returns {class}\n */\nexport function mixin (baseClass, mixinClasses) {\n  if (!Array.isArray(mixinClasses)) {\n    mixinClasses = [mixinClasses]\n  }\n  let initializes = mixinClasses.map(mC => mC.prototype.initialize)\n\n  let mixed = class extends baseClass {\n    constructor (options) {\n      super(options)\n      for (let initialize of initializes) {\n        if (initialize) {\n          initialize.call(this, options)\n        }\n      }\n    }\n  }\n\n  for (let mixinClass of mixinClasses) {\n    let propsAndDescriptions = getPropertyNamesAndDescriptions(mixinClass.prototype)\n\n    for (let name in propsAndDescriptions) {\n      if (name !== 'constructor' && name !== 'initialize') {\n        if (name in mixed.prototype) {\n          throw new Error('mixins should not overwrite methods')\n        }\n        Object.defineProperty(mixed.prototype, name, propsAndDescriptions[name])\n      }\n    }\n  }\n\n  return mixed\n}\n\n/**\n * This returns a mixin as a normal class.\n * @param mixinClass\n * @returns {class}\n */\nexport function mixinAsClass (mixinClass) {\n  let initialize = mixinClass.prototype.initialize\n\n  let m = class extends mixinClass {\n    constructor (options) {\n      super(options)\n      if (initialize) {\n        initialize.call(this, options)\n      }\n    }\n  }\n\n  return m\n}\n\nlet $p = $('<p>')\n\n/**\n * Takes a string with HTML and returns the containing resulting text.\n * @param stringWithHTML string with encoded HTML entities\n * @returns {string}\n */\nexport function html2Text (stringWithHTML) {\n  return $p.html(stringWithHTML).text()\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/utilities.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 986,
    "kind": "function",
    "name": "even",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~even",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{even}",
    "description": "Checks whether an argument can be interpreted as an even integer",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} True when value is numeric, parses as an integer (no matter if decimal, octal or sexadecimal)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "A value of any type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "True when value is numeric, parses as an integer (no matter if decimal, octal or sexadecimal)"
    }
  },
  {
    "__docId__": 987,
    "kind": "function",
    "name": "odd",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~odd",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{odd}",
    "description": "Checks whether an argument can be interpreted as an even integer",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} True when value is numeric, parses as an integer (no matter if decimal, octal or sexadecimal)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "A value of any type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "True when value is numeric, parses as an integer (no matter if decimal, octal or sexadecimal)"
    }
  },
  {
    "__docId__": 988,
    "kind": "function",
    "name": "checkFor",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~checkFor",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{checkFor}",
    "description": "Check for a label in a configuration object",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} true if label present and true, false otherwise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "configurationObject",
        "description": "a configuration object"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "a label to check for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if label present and true, false otherwise"
    }
  },
  {
    "__docId__": 989,
    "kind": "function",
    "name": "asObject",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~asObject",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{asObject}",
    "description": "return argument as object (if it is no object the value is {})",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "argument",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 990,
    "kind": "function",
    "name": "getConfig",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~getConfig",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{getConfig}",
    "description": "Gets the subconfig or an empty object",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 991,
    "kind": "function",
    "name": "asyncImageLoad",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~asyncImageLoad",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{asyncImageLoad}",
    "description": "",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLImageElement"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "URL"
        ],
        "spread": false,
        "optional": false,
        "name": "origUrl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "finalUrl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 992,
    "kind": "function",
    "name": "finishAllImages",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~finishAllImages",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{finishAllImages}",
    "description": "finishs loading all images contained in the given jQuery object.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$object",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 993,
    "kind": "function",
    "name": "offset",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~offset",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{offset}",
    "description": "calculates the distance between one and another jQuery element",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{top: number, left: number}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$one",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$other",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{top: number, left: number}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 994,
    "kind": "function",
    "name": "recursiveSelect",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~recursiveSelect",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{recursiveSelect}",
    "description": "selects all matching elements and child elements",
    "lineNumber": 168,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{jQuery}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "jQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "$elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "jQuery"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 995,
    "kind": "function",
    "name": "showInteractionActivity",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~showInteractionActivity",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{showInteractionActivity}",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 996,
    "kind": "function",
    "name": "urlDirname",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~urlDirname",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{urlDirname}",
    "description": "A function that tries to get the dir url of an url",
    "lineNumber": 223,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 997,
    "kind": "function",
    "name": "urlNormalize",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~urlNormalize",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{urlNormalize}",
    "description": "A function that normalizes a url",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 998,
    "kind": "function",
    "name": "urlJoin",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~urlJoin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{urlJoin}",
    "description": "A function that adds urls",
    "lineNumber": 246,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "urlRoot",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "urlExt",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 999,
    "kind": "function",
    "name": "urlRelative",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~urlRelative",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{urlRelative}",
    "description": "A function that tries to get the relative url between to urles",
    "lineNumber": 267,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1000,
    "kind": "function",
    "name": "urlIsAbsolute",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~urlIsAbsolute",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{urlIsAbsolute}",
    "description": "",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1001,
    "kind": "function",
    "name": "getPropertyNamesAndDescriptions",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~getPropertyNamesAndDescriptions",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 311,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1002,
    "kind": "function",
    "name": "mixin",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~mixin",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{mixin}",
    "description": "This creates a new class which inherits from the base class and mixes in every method (except any method named\n'initialize') from the mixin class. The mixin class may not overwrite any existing method. If it has a method called\n'initialize' this will be remembered and called after the constructor of the base class has finished",
    "lineNumber": 334,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{class}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "baseClass",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mixinClasses",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1003,
    "kind": "function",
    "name": "mixinAsClass",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~mixinAsClass",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{mixinAsClass}",
    "description": "This returns a mixin as a normal class.",
    "lineNumber": 372,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{class}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mixinClass",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "class"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1004,
    "kind": "variable",
    "name": "$p",
    "memberof": "src/utilities.js",
    "static": true,
    "longname": "src/utilities.js~$p",
    "access": "public",
    "export": false,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 387,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1005,
    "kind": "function",
    "name": "html2Text",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~html2Text",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilities.js",
    "importStyle": "{html2Text}",
    "description": "Takes a string with HTML and returns the containing resulting text.",
    "lineNumber": 394,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "stringWithHTML",
        "description": "string with encoded HTML entities"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1006,
    "kind": "file",
    "name": "src/utilitiesObject.js",
    "content": "/**\n * @module utilitiesObject\n * Helper- and Miscfunctions (object related)\n */\n\nimport $ from 'jquery'\n\n// //////////////////////////////////////////////////////////////////////////////////////// //\n//                                     Object Copying                                       //\n// //////////////////////////////////////////////////////////////////////////////////////// //\n\n/**\n * Copy an object\n * @param {Object} object\n * @returns {Object}\n */\nexport function copy (object) {\n  if ($.isArray(object)) {\n    return $.extend([], object)\n  } else if ($.isPlainObject(object)) {\n    return $.extend({}, object)\n  } else {\n    return object\n  }\n}\n\n/**\n * Deep copy an object\n * @param {Object} object\n * @returns {Object}\n */\nexport function copyDeep (object) {\n  if ($.isArray(object)) {\n    return $.extend(true, [], object)\n  } else if ($.isPlainObject(object)) {\n    return $.extend(true, {}, object)\n  } else {\n    return object\n  }\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////// //\n//                                    Object Merging                                        //\n// //////////////////////////////////////////////////////////////////////////////////////// //\n\n/**\n * A simple object merge function. merges all keys of obj2 to obj1.\n * @param {Object} obj1 the object which will be merged into\n * @param {Object} obj2 the object that will be merged into obj1\n * @returns {Object}\n */\nexport function merge (obj1, obj2) {\n  return $.extend(obj1, obj2)\n}\n\n/**\n * A simple reverse object merge function. merges all keys of obj2 to obj1.\n * @param {Object} obj1 the object which will be merged into\n * @param {Object} obj2 the object that will be merged into obj1\n * @returns {Object}\n */\nexport function mergeDeep (obj1, obj2) {\n  return $.extend(true, obj1, obj2)\n}\n\n/**\n * basically adds all properties (key, value - pairs) from defaults to config whichs keys aren't keys of config.\n *      (except for keys with 'Element' in their name)\n * if the value is an object (on the left side, config) it is called recursively\n * if the value is an array (on the left side, config) it is called with the key value+'Element' for each element\n *      of the array\n * @param {Object} config the config which should be mergeed with defaults\n * @param {Object} defaults the defaults to be merged with config\n * @returns {Object} the altered config\n */\nexport function mergeWithDefaults (config, defaults) {\n  if (typeof defaults === 'object' && typeof config === 'object') {\n    for (let k of Object.keys(defaults)) {\n      if (!(k in config) && (k.search('Element') < 0)) {\n        config[k] = defaults[k]\n      // order of this branches is important because typeof Array equals object\n      } else if (config[k] instanceof Array) {\n        // if both arrays have the same length, it assumed that every element of the array in default is\n        //      the default for every element in the array in config\n        if (config[k].length === defaults[k].length) {\n          for (let i = 0; i < config[k].length; i += 1) {\n            mergeWithDefaults(config[k][i], defaults[k][i])\n          }\n        } else {\n          // if there exists a key with the name k+'Element' then it is the default for every element of\n          //      the configuration\n          if ((k + 'Element') in defaults) {\n            for (let i = 0; i < config[k].length; i += 1) {\n              mergeWithDefaults(config[k][i], defaults[k + 'Element'])\n            }\n          }\n        }\n      } else if (typeof config[k] === 'object') {\n        mergeWithDefaults(config[k], defaults[k])\n      } else if ((typeof config[k] !== 'object') && (typeof defaults[k] === 'object') && config[k]) {\n        config[k] = {}\n        mergeWithDefaults(config[k], defaults[k])\n      }\n    }\n  } else {\n    if (!config) {\n      config = defaults\n    }\n  }\n  return config\n}\n\n/**\n * Removes a property from an object and returns its value\n * @param {Object} object\n * @param {String} prop\n * @returns {*}\n */\nexport function take (object, prop) {\n  if (object.hasOwnProperty(prop)) {\n    let tmp = object[prop]\n    delete object[prop]\n    return tmp\n  }\n}\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/utilitiesObject.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1007,
    "kind": "function",
    "name": "copy",
    "memberof": "src/utilitiesObject.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilitiesObject.js~copy",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilitiesObject.js",
    "importStyle": "{copy}",
    "description": "Copy an object",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1008,
    "kind": "function",
    "name": "copyDeep",
    "memberof": "src/utilitiesObject.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilitiesObject.js~copyDeep",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilitiesObject.js",
    "importStyle": "{copyDeep}",
    "description": "Deep copy an object",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1009,
    "kind": "function",
    "name": "merge",
    "memberof": "src/utilitiesObject.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilitiesObject.js~merge",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilitiesObject.js",
    "importStyle": "{merge}",
    "description": "A simple object merge function. merges all keys of obj2 to obj1.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj1",
        "description": "the object which will be merged into"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj2",
        "description": "the object that will be merged into obj1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1010,
    "kind": "function",
    "name": "mergeDeep",
    "memberof": "src/utilitiesObject.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilitiesObject.js~mergeDeep",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilitiesObject.js",
    "importStyle": "{mergeDeep}",
    "description": "A simple reverse object merge function. merges all keys of obj2 to obj1.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj1",
        "description": "the object which will be merged into"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj2",
        "description": "the object that will be merged into obj1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1011,
    "kind": "function",
    "name": "mergeWithDefaults",
    "memberof": "src/utilitiesObject.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilitiesObject.js~mergeWithDefaults",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilitiesObject.js",
    "importStyle": "{mergeWithDefaults}",
    "description": "basically adds all properties (key, value - pairs) from defaults to config whichs keys aren't keys of config.\n     (except for keys with 'Element' in their name)\nif the value is an object (on the left side, config) it is called recursively\nif the value is an array (on the left side, config) it is called with the key value+'Element' for each element\n     of the array",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} the altered config"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the config which should be mergeed with defaults"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "defaults",
        "description": "the defaults to be merged with config"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the altered config"
    }
  },
  {
    "__docId__": 1012,
    "kind": "function",
    "name": "take",
    "memberof": "src/utilitiesObject.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilitiesObject.js~take",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/utilitiesObject.js",
    "importStyle": "{take}",
    "description": "Removes a property from an object and returns its value",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prop",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1013,
    "kind": "file",
    "name": "src/xssprotection.js",
    "content": "/**\r\n * @module xssprotection\r\n */\r\n\r\n/**\r\n * Filters text from user input\r\n * @param {string} text\r\n * @returns {string}\r\n */\r\nexport function filterText (text) {\r\n  if (text) {\r\n    // escaping following guidelines from owasp.org\r\n    return text\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#x27;')\r\n      .replace(/\\//g, '&#x2F;')\r\n  } else {\r\n    return text\r\n  }\r\n}\r\n\r\n/**\r\n * Restores the text\r\n * @param {string} text\r\n * @returns {string}\r\n */\r\nexport function restoreText (text) {\r\n  if (text) {\r\n    return text\r\n      .replace(/&amp;/g, '&')\r\n      .replace(/&lt;/g, '<')\r\n      .replace(/&gt;/g, '>')\r\n      .replace(/&quot;/g, '\"')\r\n      .replace(/&#x27;/g, \"'\")\r\n      .replace(/&#x2F;/g, '/')\r\n  } else {\r\n    return text\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "D:/xampp/htdocs/guide4you/src/xssprotection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1014,
    "kind": "function",
    "name": "filterText",
    "memberof": "src/xssprotection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/xssprotection.js~filterText",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/xssprotection.js",
    "importStyle": "{filterText}",
    "description": "Filters text from user input",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1015,
    "kind": "function",
    "name": "restoreText",
    "memberof": "src/xssprotection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/xssprotection.js~restoreText",
    "access": "public",
    "export": true,
    "importPath": "guide4you/src/xssprotection.js",
    "importStyle": "{restoreText}",
    "description": "Restores the text",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "# ![Guide4You](images/g4u-logo.png) guide4you\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/KlausBenndorf/guide4you.svg)](https://greenkeeper.io/)\n\n[![NPM](https://nodei.co/npm/guide4you.png?mini=true)](https://npmjs.org/package/guide4you)\n[![JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n[![Continuous Integration](https://travis-ci.org/KlausBenndorf/guide4you.svg?branch=master)](https://travis-ci.org/KlausBenndorf/guide4you)\n[![Documentation Coverage](http://klausbenndorf.github.io/guide4you/badge.svg)](http://klausbenndorf.github.io/guide4you/index.html)\n\n**GUIDE4YOU** is a JavaScript Web client application built on [OpenLayers](http://openlayers.org)\nthat supports both desktop and mobile web browsers and features a responsive design.\n\n![Screenshot of desktop view, 736x467 pixel](https://github.com/KlausBenndorf/guide4you/blob/master/images/screenshots/desktop-736-467.png \"Screenshot of desktop view, 736x467 pixel\")\n\nFor a screenshot of the mobile view [see below](#mobile-screenshot).\n\n## What can GUIDE4YOU do for you?\n\nWith the basic system **GUIDE4YOU** can:\n\n* Display maps like [Openstreetmap](https://openstreetmap.org), [OpenTopoMap](https://opentopomap.org), or [OpenCycleMap](http://www.thunderforest.com/maps/opencyclemap/)\n* Use OSM, WMS, WFS, KML, GPX (others follow)\n* Measure areas and distances\n* Display your location\n* Print the current view on a single page\n* Overlay a base map with points of interest and the like\n* Configure a set of base maps and overlays to choose from\n* Allow for different languages\n* &hellip;\n\nWith additional modules it can also:\n\n* [URLAPI module](https://github.com/KlausBenndorf/guide4you-module-urlapi): Generate links so you can share a certain view of a map. That view can include a location marker and a description of the location in question.\n* [Search module](https://github.com/KlausBenndorf/guide4you-module-search): Search for locations using [Nominatim](https://nominatim.openstreetmap.org/). Alternatively you can customize this module to use other engines.\n* Edit GPX data (coming soon)\n* &hellip;\n\n## Why use GUIDE4YOU?\n\nCompared to alternative software **GUIDE4YOU** provides a couple of interesting features:\n\n* Highly customizable\n* Support for new languages can easily be added\n* Icons are vector graphics (SVG) so they can be scaled to whatever size seems suitable\n* No separate mobile and desktop versions\n* Easily extensible\n\n## Which browsers are supported?\n\nAll modern browsers including\n* Firefox\n* Chrome\n* Edge and Internet Explorer 10+\n* Safari\n\n## How to install and build GUIDE4YOU?\n\nInstall guide4you from npm or clone the repository\n\n```\nnpm install guide4you\n```\nor\n```\ngit clone https://github.com/KlausBenndorf/guide4you.git\n```\n\nThen switch into the `guide4you` directory and install all dependecies using\n\n```\nnpm install\n```\n\nThen build with a configuration of your choice\n\n```\nnpm run build conf/simple\n```\n\nIf you want to develop you can use the dev server script, which listens on port 8080 by default\n\n```\nnpm run dev conf/simple\n```\n\n## Generated documentation\n\nCan be found under [https://klausbenndorf.github.io/guide4you/index.html](https://klausbenndorf.github.io/guide4you/index.html).\n\n## <a name=\"mobile-screenshot\"></a>Mobile Screenshot\n\n![Screenshot of mobile view, 360x640 pixel](https://github.com/KlausBenndorf/guide4you/blob/master/images/screenshots/mobile-360-640.png \"Screenshot of mobile view, 360x640 pixel\")\n",
    "longname": "D:\\xampp\\htdocs\\guide4you\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"guide4you\",\n  \"version\": \"2.6.1\",\n  \"description\": \"A configurable web client for geo-applications. Uses OpenLayers. Suitable for mobile devices.\",\n  \"keywords\": [\n    \"map\",\n    \"map client\",\n    \"openlayers\"\n  ],\n  \"author\": \"Klaus Benndorf\",\n  \"homepage\": \"https://github.com/KlausBenndorf/guide4you\",\n  \"license\": \"MIT\",\n  \"contributors\": [\n    \"Sascha Klemenjak <sascha.klemenjak@benndorf.de>\",\n    \"Josef Schugt <josef.schugt@benndorf.de>\",\n    \"Simon Seyock <simonseyock@gmail.com>\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/KlausBenndorf/guide4you\"\n  },\n  \"peerDependencies\": {\n    \"jquery\": \"3.2.1\",\n    \"openlayers\": \"github:KlausBenndorf/ol3#g4u3_v4.3.1\"\n  },\n  \"dependencies\": {\n    \"csscolorparser\": \"1.0.3\",\n    \"iscroll\": \"5.2.0\",\n    \"lodash\": \"4.17.4\",\n    \"notifyjs-browser\": \"0.4.2\",\n    \"proj4\": \"^2.4.3\",\n    \"strip-json-comments\": \"2.0.1\"\n  },\n  \"devDependencies\": {\n    \"concurrently\": \"^3.4.0\",\n    \"esdoc\": \"^1.0.3\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"guide4you-builder\": \"2.1.1\",\n    \"guide4you-proxy\": \"github:KlausBenndorf/guide4you-proxy#v1.1.0\",\n    \"http-server\": \"^0.10.0\",\n    \"jquery\": \"3.2.1\",\n    \"mocha\": \"3.4.2\",\n    \"openlayers\": \"github:KlausBenndorf/ol3#g4u3_v4.3.1\",\n    \"phantomjs-prebuilt\": \"2.1.14\",\n    \"selenium-webdriver\": \"3.4.0\",\n    \"standard\": \"10.0.2\",\n    \"wait-on\": \"^2.0.2\"\n  },\n  \"scripts\": {\n    \"dist\": \"g4u-build -m dist -c conf/dist\",\n    \"build\": \"g4u-build -m prod -c\",\n    \"debugBuild\": \"g4u-build -d -m prod -c\",\n    \"dev\": \"g4u-build -m dev -c\",\n    \"lint\": \"eslint src/ tests/\",\n    \"version\": \"(npm run test && npm run doc && git add -A) || git checkout .\",\n    \"buildTests\": \"concurrently \\\"g4u-buildTests\\\" \\\"npm run dist\\\"\",\n    \"runTests\": \" concurrently --kill-others --success first \\\"http-server ./ -p 8089 -s\\\" \\\"wait-on -l http-get://localhost:8089 && mocha build/tests/*\\\"\",\n    \"test\": \"npm run lint && npm run buildTests && npm run runTests && echo \\\"Tests completed successfully\\\"\",\n    \"doc\": \"esdoc -c esdoc.json\",\n    \"typing\": \"jsdoc -t node_modules/tsd-jsdoc -r conf/dist/entry.js src/ -d dist/\"\n  },\n  \"main\": \"./dist/g4u.js\",\n  \"module\": \"./config/dist/entry.js\",\n  \"types\": \"./dist/g4u.d.ts\"\n}\n",
    "longname": "D:\\xampp\\htdocs\\guide4you\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]